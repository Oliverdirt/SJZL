package com.ctsi.ssdc.quartz.domain;

import com.ctsi.ssdc.criteria.*;

import java.time.ZonedDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * CscpJobLogExample
 *
 * @author hx
 * @date 2022-05-30 17:05:20
 */

public class CscpJobLogExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private static final String LIKE_FORMAT = "%%%s%%";


        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.job_message
         *
         * @date 2022-05-30 17:05:20
         */
    private StringCriteria jobMessage;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.exception_info
         *
         * @date 2022-05-30 17:05:20
         */
    private StringCriteria exceptionInfo;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.invoke_target
         *
         * @date 2022-05-30 17:05:20
         */
    private StringCriteria invokeTarget;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.job_group
         *
         * @date 2022-05-30 17:05:20
         */
    private StringCriteria jobGroup;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.status
         *
         * @date 2022-05-30 17:05:20
         */
    private StringCriteria status;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.execution_time
         *
         * @date 2022-05-30 17:05:20
         */
    private ZonedDateTimeCriteria executionTime;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.job_name
         *
         * @date 2022-05-30 17:05:20
         */
    private StringCriteria jobName;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column sys_job_log.job_log_id
         *
         * @date 2022-05-30 17:05:20
         */
    private LongCriteria jobLogId;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public CscpJobLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public StringCriteria getJobMessage() {
        return jobMessage;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setJobMessage(StringCriteria jobMessage) {
        this. jobMessage = jobMessage;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildJobMessageCriteria(Criteria criteria) {
        if (this.getJobMessage() == null) {
            return;
        }
        if (this.getJobMessage().getEquals() != null) {
            criteria.andJobMessageEqualTo(this.getJobMessage().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getJobMessage().getContains())) {
                criteria.andJobMessageLike(String.format(LIKE_FORMAT, this.getJobMessage().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public StringCriteria getExceptionInfo() {
        return exceptionInfo;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setExceptionInfo(StringCriteria exceptionInfo) {
        this. exceptionInfo = exceptionInfo;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildExceptionInfoCriteria(Criteria criteria) {
        if (this.getExceptionInfo() == null) {
            return;
        }
        if (this.getExceptionInfo().getEquals() != null) {
            criteria.andExceptionInfoEqualTo(this.getExceptionInfo().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getExceptionInfo().getContains())) {
                criteria.andExceptionInfoLike(String.format(LIKE_FORMAT, this.getExceptionInfo().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public StringCriteria getInvokeTarget() {
        return invokeTarget;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setInvokeTarget(StringCriteria invokeTarget) {
        this. invokeTarget = invokeTarget;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildInvokeTargetCriteria(Criteria criteria) {
        if (this.getInvokeTarget() == null) {
            return;
        }
        if (this.getInvokeTarget().getEquals() != null) {
            criteria.andInvokeTargetEqualTo(this.getInvokeTarget().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getInvokeTarget().getContains())) {
                criteria.andInvokeTargetLike(String.format(LIKE_FORMAT, this.getInvokeTarget().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public StringCriteria getJobGroup() {
        return jobGroup;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setJobGroup(StringCriteria jobGroup) {
        this. jobGroup = jobGroup;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildJobGroupCriteria(Criteria criteria) {
        if (this.getJobGroup() == null) {
            return;
        }
        if (this.getJobGroup().getEquals() != null) {
            criteria.andJobGroupEqualTo(this.getJobGroup().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getJobGroup().getContains())) {
                criteria.andJobGroupLike(String.format(LIKE_FORMAT, this.getJobGroup().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public StringCriteria getStatus() {
        return status;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setStatus(StringCriteria status) {
        this. status = status;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildStatusCriteria(Criteria criteria) {
        if (this.getStatus() == null) {
            return;
        }
        if (this.getStatus().getEquals() != null) {
            criteria.andStatusEqualTo(this.getStatus().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getStatus().getContains())) {
                criteria.andStatusLike(String.format(LIKE_FORMAT, this.getStatus().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public ZonedDateTimeCriteria getExecutionTime() {
        return executionTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setExecutionTime(ZonedDateTimeCriteria executionTime) {
        this. executionTime = executionTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildExecutionTimeCriteria(Criteria criteria) {
        if (this.getExecutionTime() == null) {
            return;
        }
        if (this.getExecutionTime().getEquals() != null) {
            criteria.andExecutionTimeEqualTo(this.getExecutionTime().getEquals());
        } else {
            if (this.getExecutionTime().getGreaterOrEqualThan() != null) {
                criteria.andExecutionTimeGreaterThanOrEqualTo(this.getExecutionTime().getGreaterOrEqualThan());
            }
            if (this.getExecutionTime().getLessOrEqualThan() != null) {
                criteria.andExecutionTimeLessThanOrEqualTo(this.getExecutionTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public StringCriteria getJobName() {
        return jobName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setJobName(StringCriteria jobName) {
        this. jobName = jobName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildJobNameCriteria(Criteria criteria) {
        if (this.getJobName() == null) {
            return;
        }
        if (this.getJobName().getEquals() != null) {
            criteria.andJobNameEqualTo(this.getJobName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getJobName().getContains())) {
                criteria.andJobNameLike(String.format(LIKE_FORMAT, this.getJobName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public LongCriteria getJobLogId() {
        return jobLogId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public void setJobLogId(LongCriteria jobLogId) {
        this. jobLogId = jobLogId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    private void buildJobLogIdCriteria(Criteria criteria) {
        if (this.getJobLogId() == null) {
            return;
        }
        if (this.getJobLogId().getEquals() != null) {
            criteria.andJobLogIdEqualTo(this.getJobLogId().getEquals());
        } else {
            if (this.getJobLogId().getGreaterOrEqualThan() != null) {
                criteria.andJobLogIdGreaterThanOrEqualTo(this.getJobLogId().getGreaterOrEqualThan());
            }
            if (this.getJobLogId().getLessOrEqualThan() != null) {
                criteria.andJobLogIdLessThanOrEqualTo(this.getJobLogId().getLessOrEqualThan());
            }
        }
    }
    /**
      * This method was generated by  Generator.
      * This method corresponds to the database table cscp_hx_form_column
      *
      * @date Thu Feb 17 14:02:06 CST 2022
      */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildJobMessageCriteria(criteria);
        this.buildExceptionInfoCriteria(criteria);
        this.buildInvokeTargetCriteria(criteria);
        this.buildJobGroupCriteria(criteria);
        this.buildStatusCriteria(criteria);
        this.buildExecutionTimeCriteria(criteria);
        this.buildJobNameCriteria(criteria);
        this.buildJobLogIdCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andJobMessageIsNull() {
            addCriterion("job_message is null");
            return (Criteria) this;
        }

        public Criteria andJobMessageIsNotNull() {
            addCriterion("job_message is not null");
            return (Criteria) this;
        }

        public Criteria andJobMessageEqualTo(String value) {
            addCriterion("job_message =", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageNotEqualTo(String value) {
            addCriterion("job_message <>", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageGreaterThan(String value) {
            addCriterion("job_message >", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageGreaterThanOrEqualTo(String value) {
            addCriterion("job_message >=", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageLessThan(String value) {
            addCriterion("job_message <", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageLessThanOrEqualTo(String value) {
            addCriterion("job_message <=", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageLike(String value) {
            addCriterion("job_message like", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageNotLike(String value) {
            addCriterion("job_message not like", value, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageIn(List<String> values) {
            addCriterion("job_message in", values, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageNotIn(List<String> values) {
            addCriterion("job_message not in", values, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageBetween(String value1, String value2) {
            addCriterion("job_message between", value1, value2, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andJobMessageNotBetween(String value1, String value2) {
            addCriterion("job_message not between", value1, value2, "jobMessage");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoIsNull() {
            addCriterion("exception_info is null");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoIsNotNull() {
            addCriterion("exception_info is not null");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoEqualTo(String value) {
            addCriterion("exception_info =", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoNotEqualTo(String value) {
            addCriterion("exception_info <>", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoGreaterThan(String value) {
            addCriterion("exception_info >", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoGreaterThanOrEqualTo(String value) {
            addCriterion("exception_info >=", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoLessThan(String value) {
            addCriterion("exception_info <", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoLessThanOrEqualTo(String value) {
            addCriterion("exception_info <=", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoLike(String value) {
            addCriterion("exception_info like", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoNotLike(String value) {
            addCriterion("exception_info not like", value, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoIn(List<String> values) {
            addCriterion("exception_info in", values, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoNotIn(List<String> values) {
            addCriterion("exception_info not in", values, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoBetween(String value1, String value2) {
            addCriterion("exception_info between", value1, value2, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andExceptionInfoNotBetween(String value1, String value2) {
            addCriterion("exception_info not between", value1, value2, "exceptionInfo");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetIsNull() {
            addCriterion("invoke_target is null");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetIsNotNull() {
            addCriterion("invoke_target is not null");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetEqualTo(String value) {
            addCriterion("invoke_target =", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetNotEqualTo(String value) {
            addCriterion("invoke_target <>", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetGreaterThan(String value) {
            addCriterion("invoke_target >", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetGreaterThanOrEqualTo(String value) {
            addCriterion("invoke_target >=", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetLessThan(String value) {
            addCriterion("invoke_target <", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetLessThanOrEqualTo(String value) {
            addCriterion("invoke_target <=", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetLike(String value) {
            addCriterion("invoke_target like", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetNotLike(String value) {
            addCriterion("invoke_target not like", value, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetIn(List<String> values) {
            addCriterion("invoke_target in", values, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetNotIn(List<String> values) {
            addCriterion("invoke_target not in", values, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetBetween(String value1, String value2) {
            addCriterion("invoke_target between", value1, value2, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andInvokeTargetNotBetween(String value1, String value2) {
            addCriterion("invoke_target not between", value1, value2, "invokeTarget");
            return (Criteria) this;
        }

        public Criteria andJobGroupIsNull() {
            addCriterion("job_group is null");
            return (Criteria) this;
        }

        public Criteria andJobGroupIsNotNull() {
            addCriterion("job_group is not null");
            return (Criteria) this;
        }

        public Criteria andJobGroupEqualTo(String value) {
            addCriterion("job_group =", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupNotEqualTo(String value) {
            addCriterion("job_group <>", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupGreaterThan(String value) {
            addCriterion("job_group >", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupGreaterThanOrEqualTo(String value) {
            addCriterion("job_group >=", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupLessThan(String value) {
            addCriterion("job_group <", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupLessThanOrEqualTo(String value) {
            addCriterion("job_group <=", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupLike(String value) {
            addCriterion("job_group like", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupNotLike(String value) {
            addCriterion("job_group not like", value, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupIn(List<String> values) {
            addCriterion("job_group in", values, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupNotIn(List<String> values) {
            addCriterion("job_group not in", values, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupBetween(String value1, String value2) {
            addCriterion("job_group between", value1, value2, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andJobGroupNotBetween(String value1, String value2) {
            addCriterion("job_group not between", value1, value2, "jobGroup");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeIsNull() {
            addCriterion("execution_time is null");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeIsNotNull() {
            addCriterion("execution_time is not null");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeEqualTo(ZonedDateTime value) {
            addCriterion("execution_time =", value, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("execution_time <>", value, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeGreaterThan(ZonedDateTime value) {
            addCriterion("execution_time >", value, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("execution_time >=", value, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeLessThan(ZonedDateTime value) {
            addCriterion("execution_time <", value, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("execution_time <=", value, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeIn(List<ZonedDateTime> values) {
            addCriterion("execution_time in", values, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("execution_time not in", values, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("execution_time between", value1, value2, "executionTime");
            return (Criteria) this;
        }

        public Criteria andExecutionTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("execution_time not between", value1, value2, "executionTime");
            return (Criteria) this;
        }

        public Criteria andJobNameIsNull() {
            addCriterion("job_name is null");
            return (Criteria) this;
        }

        public Criteria andJobNameIsNotNull() {
            addCriterion("job_name is not null");
            return (Criteria) this;
        }

        public Criteria andJobNameEqualTo(String value) {
            addCriterion("job_name =", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotEqualTo(String value) {
            addCriterion("job_name <>", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameGreaterThan(String value) {
            addCriterion("job_name >", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameGreaterThanOrEqualTo(String value) {
            addCriterion("job_name >=", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameLessThan(String value) {
            addCriterion("job_name <", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameLessThanOrEqualTo(String value) {
            addCriterion("job_name <=", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameLike(String value) {
            addCriterion("job_name like", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotLike(String value) {
            addCriterion("job_name not like", value, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameIn(List<String> values) {
            addCriterion("job_name in", values, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotIn(List<String> values) {
            addCriterion("job_name not in", values, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameBetween(String value1, String value2) {
            addCriterion("job_name between", value1, value2, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobNameNotBetween(String value1, String value2) {
            addCriterion("job_name not between", value1, value2, "jobName");
            return (Criteria) this;
        }

        public Criteria andJobLogIdIsNull() {
            addCriterion("job_log_id is null");
            return (Criteria) this;
        }

        public Criteria andJobLogIdIsNotNull() {
            addCriterion("job_log_id is not null");
            return (Criteria) this;
        }

        public Criteria andJobLogIdEqualTo(Long value) {
            addCriterion("job_log_id =", value, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdNotEqualTo(Long value) {
            addCriterion("job_log_id <>", value, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdGreaterThan(Long value) {
            addCriterion("job_log_id >", value, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdGreaterThanOrEqualTo(Long value) {
            addCriterion("job_log_id >=", value, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdLessThan(Long value) {
            addCriterion("job_log_id <", value, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdLessThanOrEqualTo(Long value) {
            addCriterion("job_log_id <=", value, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdIn(List<Long> values) {
            addCriterion("job_log_id in", values, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdNotIn(List<Long> values) {
            addCriterion("job_log_id not in", values, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdBetween(Long value1, Long value2) {
            addCriterion("job_log_id between", value1, value2, "jobLogId");
            return (Criteria) this;
        }

        public Criteria andJobLogIdNotBetween(Long value1, Long value2) {
            addCriterion("job_log_id not between", value1, value2, "jobLogId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  sys_job_log
     *
     * @date do_not_delete_during_merge 2022-05-30 17:05:20
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  sys_job_log
     *
     * @date 2022-05-30 17:05:20
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
