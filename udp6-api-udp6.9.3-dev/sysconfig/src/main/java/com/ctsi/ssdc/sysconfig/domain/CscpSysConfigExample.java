package com.ctsi.ssdc.sysconfig.domain;

import com.ctsi.ssdc.criteria.IntegerCriteria;
import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.criteria.ZonedDateTimeCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import org.apache.commons.lang3.StringUtils;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * CscpSysConfigExample
 *
 * @author hx
 * @date 2022-08-24 14:40:57
 */

public class CscpSysConfigExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private static final String LIKE_FORMAT = "%%%s%%";


    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.config_id
     *
     * @date 2022-08-25 14:30:26
     */
    private LongCriteria configId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.config_name
     *
     * @date 2022-08-25 14:30:26
     */
    private StringCriteria configName;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.config_key
     *
     * @date 2022-08-25 14:30:26
     */
    private StringCriteria configKey;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.config_value
     *
     * @date 2022-08-25 14:30:26
     */
    private StringCriteria configValue;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.config_option
     *
     * @date 2022-08-25 14:30:26
     */
    private StringCriteria configOption;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.create_by
     *
     * @date 2022-08-25 14:30:26
     */
    private LongCriteria createBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.create_time
     *
     * @date 2022-08-25 14:30:26
     */
    private ZonedDateTimeCriteria createTime;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.update_by
     *
     * @date 2022-08-25 14:30:26
     */
    private LongCriteria updateBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.update_time
     *
     * @date 2022-08-25 14:30:26
     */
    private ZonedDateTimeCriteria updateTime;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.remark
     *
     * @date 2022-08-25 14:30:26
     */
    private StringCriteria remark;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_sys_config2.config_status
     *
     * @date 2022-08-25 14:30:26
     */
    private IntegerCriteria configStatus;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public CscpSysConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public LongCriteria getConfigId() {
        return configId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setConfigId(LongCriteria configId) {
        this. configId = configId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildConfigIdCriteria(Criteria criteria) {
        if (this.getConfigId() == null) {
            return;
        }
        if (this.getConfigId().getEquals() != null) {
            criteria.andConfigIdEqualTo(this.getConfigId().getEquals());
        } else {
            if (this.getConfigId().getGreaterOrEqualThan() != null) {
                criteria.andConfigIdGreaterThanOrEqualTo(this.getConfigId().getGreaterOrEqualThan());
            }
            if (this.getConfigId().getLessOrEqualThan() != null) {
                criteria.andConfigIdLessThanOrEqualTo(this.getConfigId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public StringCriteria getConfigName() {
        return configName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setConfigName(StringCriteria configName) {
        this. configName = configName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildConfigNameCriteria(Criteria criteria) {
        if (this.getConfigName() == null) {
            return;
        }
        if (this.getConfigName().getEquals() != null) {
            criteria.andConfigNameEqualTo(this.getConfigName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getConfigName().getContains())) {
                criteria.andConfigNameLike(String.format(LIKE_FORMAT, this.getConfigName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public StringCriteria getConfigKey() {
        return configKey;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setConfigKey(StringCriteria configKey) {
        this. configKey = configKey;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildConfigKeyCriteria(Criteria criteria) {
        if (this.getConfigKey() == null) {
            return;
        }
        if (this.getConfigKey().getEquals() != null) {
            criteria.andConfigKeyEqualTo(this.getConfigKey().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getConfigKey().getContains())) {
                criteria.andConfigKeyLike(String.format(LIKE_FORMAT, this.getConfigKey().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public StringCriteria getConfigValue() {
        return configValue;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setConfigValue(StringCriteria configValue) {
        this. configValue = configValue;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildConfigValueCriteria(Criteria criteria) {
        if (this.getConfigValue() == null) {
            return;
        }
        if (this.getConfigValue().getEquals() != null) {
            criteria.andConfigValueEqualTo(this.getConfigValue().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getConfigValue().getContains())) {
                criteria.andConfigValueLike(String.format(LIKE_FORMAT, this.getConfigValue().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public StringCriteria getConfigOption() {
        return configOption;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setConfigOption(StringCriteria configOption) {
        this. configOption = configOption;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildConfigOptionCriteria(Criteria criteria) {
        if (this.getConfigOption() == null) {
            return;
        }
        if (this.getConfigOption().getEquals() != null) {
            criteria.andConfigOptionEqualTo(this.getConfigOption().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getConfigOption().getContains())) {
                criteria.andConfigOptionLike(String.format(LIKE_FORMAT, this.getConfigOption().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public LongCriteria getCreateBy() {
        return createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setCreateBy(LongCriteria createBy) {
        this. createBy = createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildCreateByCriteria(Criteria criteria) {
        if (this.getCreateBy() == null) {
            return;
        }
        if (this.getCreateBy().getEquals() != null) {
            criteria.andCreateByEqualTo(this.getCreateBy().getEquals());
        } else {
            if (this.getCreateBy().getGreaterOrEqualThan() != null) {
                criteria.andCreateByGreaterThanOrEqualTo(this.getCreateBy().getGreaterOrEqualThan());
            }
            if (this.getCreateBy().getLessOrEqualThan() != null) {
                criteria.andCreateByLessThanOrEqualTo(this.getCreateBy().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public ZonedDateTimeCriteria getCreateTime() {
        return createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setCreateTime(ZonedDateTimeCriteria createTime) {
        this. createTime = createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildCreateTimeCriteria(Criteria criteria) {
        if (this.getCreateTime() == null) {
            return;
        }
        if (this.getCreateTime().getEquals() != null) {
            criteria.andCreateTimeEqualTo(this.getCreateTime().getEquals());
        } else {
            if (this.getCreateTime().getGreaterOrEqualThan() != null) {
                criteria.andCreateTimeGreaterThanOrEqualTo(this.getCreateTime().getGreaterOrEqualThan());
            }
            if (this.getCreateTime().getLessOrEqualThan() != null) {
                criteria.andCreateTimeLessThanOrEqualTo(this.getCreateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public LongCriteria getUpdateBy() {
        return updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setUpdateBy(LongCriteria updateBy) {
        this. updateBy = updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildUpdateByCriteria(Criteria criteria) {
        if (this.getUpdateBy() == null) {
            return;
        }
        if (this.getUpdateBy().getEquals() != null) {
            criteria.andUpdateByEqualTo(this.getUpdateBy().getEquals());
        } else {
            if (this.getUpdateBy().getGreaterOrEqualThan() != null) {
                criteria.andUpdateByGreaterThanOrEqualTo(this.getUpdateBy().getGreaterOrEqualThan());
            }
            if (this.getUpdateBy().getLessOrEqualThan() != null) {
                criteria.andUpdateByLessThanOrEqualTo(this.getUpdateBy().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public ZonedDateTimeCriteria getUpdateTime() {
        return updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setUpdateTime(ZonedDateTimeCriteria updateTime) {
        this. updateTime = updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildUpdateTimeCriteria(Criteria criteria) {
        if (this.getUpdateTime() == null) {
            return;
        }
        if (this.getUpdateTime().getEquals() != null) {
            criteria.andUpdateTimeEqualTo(this.getUpdateTime().getEquals());
        } else {
            if (this.getUpdateTime().getGreaterOrEqualThan() != null) {
                criteria.andUpdateTimeGreaterThanOrEqualTo(this.getUpdateTime().getGreaterOrEqualThan());
            }
            if (this.getUpdateTime().getLessOrEqualThan() != null) {
                criteria.andUpdateTimeLessThanOrEqualTo(this.getUpdateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public StringCriteria getRemark() {
        return remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setRemark(StringCriteria remark) {
        this. remark = remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildRemarkCriteria(Criteria criteria) {
        if (this.getRemark() == null) {
            return;
        }
        if (this.getRemark().getEquals() != null) {
            criteria.andRemarkEqualTo(this.getRemark().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getRemark().getContains())) {
                criteria.andRemarkLike(String.format(LIKE_FORMAT, this.getRemark().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public IntegerCriteria getConfigStatus() {
        return configStatus;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public void setConfigStatus(IntegerCriteria configStatus) {
        this. configStatus = configStatus;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    private void buildConfigStatusCriteria(Criteria criteria) {
        if (this.getConfigStatus() == null) {
            return;
        }
        if (this.getConfigStatus().getEquals() != null) {
            criteria.andConfigStatusEqualTo(this.getConfigStatus().getEquals());
        } else {
            if (this.getConfigStatus().getGreaterOrEqualThan() != null) {
                criteria.andConfigStatusGreaterThanOrEqualTo(this.getConfigStatus().getGreaterOrEqualThan());
            }
            if (this.getConfigStatus().getLessOrEqualThan() != null) {
                criteria.andConfigStatusLessThanOrEqualTo(this.getConfigStatus().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_form_column
     *
     * @date Thu Feb 17 14:02:06 CST 2022
     */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildConfigIdCriteria(criteria);
        this.buildConfigNameCriteria(criteria);
        this.buildConfigKeyCriteria(criteria);
        this.buildConfigValueCriteria(criteria);
        this.buildConfigOptionCriteria(criteria);
        this.buildCreateByCriteria(criteria);
        this.buildCreateTimeCriteria(criteria);
        this.buildUpdateByCriteria(criteria);
        this.buildUpdateTimeCriteria(criteria);
        this.buildRemarkCriteria(criteria);
        this.buildConfigStatusCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andConfigIdIsNull() {
            addCriterion("config_id is null");
            return (Criteria) this;
        }

        public Criteria andConfigIdIsNotNull() {
            addCriterion("config_id is not null");
            return (Criteria) this;
        }

        public Criteria andConfigIdEqualTo(Long value) {
            addCriterion("config_id =", value, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdNotEqualTo(Long value) {
            addCriterion("config_id <>", value, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdGreaterThan(Long value) {
            addCriterion("config_id >", value, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdGreaterThanOrEqualTo(Long value) {
            addCriterion("config_id >=", value, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdLessThan(Long value) {
            addCriterion("config_id <", value, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdLessThanOrEqualTo(Long value) {
            addCriterion("config_id <=", value, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdIn(List<Long> values) {
            addCriterion("config_id in", values, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdNotIn(List<Long> values) {
            addCriterion("config_id not in", values, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdBetween(Long value1, Long value2) {
            addCriterion("config_id between", value1, value2, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigIdNotBetween(Long value1, Long value2) {
            addCriterion("config_id not between", value1, value2, "configId");
            return (Criteria) this;
        }

        public Criteria andConfigNameIsNull() {
            addCriterion("config_name is null");
            return (Criteria) this;
        }

        public Criteria andConfigNameIsNotNull() {
            addCriterion("config_name is not null");
            return (Criteria) this;
        }

        public Criteria andConfigNameEqualTo(String value) {
            addCriterion("config_name =", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameNotEqualTo(String value) {
            addCriterion("config_name <>", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameGreaterThan(String value) {
            addCriterion("config_name >", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameGreaterThanOrEqualTo(String value) {
            addCriterion("config_name >=", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameLessThan(String value) {
            addCriterion("config_name <", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameLessThanOrEqualTo(String value) {
            addCriterion("config_name <=", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameLike(String value) {
            addCriterion("config_name like", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameNotLike(String value) {
            addCriterion("config_name not like", value, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameIn(List<String> values) {
            addCriterion("config_name in", values, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameNotIn(List<String> values) {
            addCriterion("config_name not in", values, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameBetween(String value1, String value2) {
            addCriterion("config_name between", value1, value2, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigNameNotBetween(String value1, String value2) {
            addCriterion("config_name not between", value1, value2, "configName");
            return (Criteria) this;
        }

        public Criteria andConfigKeyIsNull() {
            addCriterion("config_key is null");
            return (Criteria) this;
        }

        public Criteria andConfigKeyIsNotNull() {
            addCriterion("config_key is not null");
            return (Criteria) this;
        }

        public Criteria andConfigKeyEqualTo(String value) {
            addCriterion("config_key =", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyNotEqualTo(String value) {
            addCriterion("config_key <>", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyGreaterThan(String value) {
            addCriterion("config_key >", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyGreaterThanOrEqualTo(String value) {
            addCriterion("config_key >=", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyLessThan(String value) {
            addCriterion("config_key <", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyLessThanOrEqualTo(String value) {
            addCriterion("config_key <=", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyLike(String value) {
            addCriterion("config_key like", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyNotLike(String value) {
            addCriterion("config_key not like", value, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyIn(List<String> values) {
            addCriterion("config_key in", values, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyNotIn(List<String> values) {
            addCriterion("config_key not in", values, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyBetween(String value1, String value2) {
            addCriterion("config_key between", value1, value2, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigKeyNotBetween(String value1, String value2) {
            addCriterion("config_key not between", value1, value2, "configKey");
            return (Criteria) this;
        }

        public Criteria andConfigValueIsNull() {
            addCriterion("config_value is null");
            return (Criteria) this;
        }

        public Criteria andConfigValueIsNotNull() {
            addCriterion("config_value is not null");
            return (Criteria) this;
        }

        public Criteria andConfigValueEqualTo(String value) {
            addCriterion("config_value =", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueNotEqualTo(String value) {
            addCriterion("config_value <>", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueGreaterThan(String value) {
            addCriterion("config_value >", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueGreaterThanOrEqualTo(String value) {
            addCriterion("config_value >=", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueLessThan(String value) {
            addCriterion("config_value <", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueLessThanOrEqualTo(String value) {
            addCriterion("config_value <=", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueLike(String value) {
            addCriterion("config_value like", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueNotLike(String value) {
            addCriterion("config_value not like", value, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueIn(List<String> values) {
            addCriterion("config_value in", values, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueNotIn(List<String> values) {
            addCriterion("config_value not in", values, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueBetween(String value1, String value2) {
            addCriterion("config_value between", value1, value2, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigValueNotBetween(String value1, String value2) {
            addCriterion("config_value not between", value1, value2, "configValue");
            return (Criteria) this;
        }

        public Criteria andConfigOptionIsNull() {
            addCriterion("config_option is null");
            return (Criteria) this;
        }

        public Criteria andConfigOptionIsNotNull() {
            addCriterion("config_option is not null");
            return (Criteria) this;
        }

        public Criteria andConfigOptionEqualTo(String value) {
            addCriterion("config_option =", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionNotEqualTo(String value) {
            addCriterion("config_option <>", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionGreaterThan(String value) {
            addCriterion("config_option >", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionGreaterThanOrEqualTo(String value) {
            addCriterion("config_option >=", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionLessThan(String value) {
            addCriterion("config_option <", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionLessThanOrEqualTo(String value) {
            addCriterion("config_option <=", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionLike(String value) {
            addCriterion("config_option like", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionNotLike(String value) {
            addCriterion("config_option not like", value, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionIn(List<String> values) {
            addCriterion("config_option in", values, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionNotIn(List<String> values) {
            addCriterion("config_option not in", values, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionBetween(String value1, String value2) {
            addCriterion("config_option between", value1, value2, "configOption");
            return (Criteria) this;
        }

        public Criteria andConfigOptionNotBetween(String value1, String value2) {
            addCriterion("config_option not between", value1, value2, "configOption");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("create_by is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("create_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(Long value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(Long value) {
            addCriterion("create_by <>", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(Long value) {
            addCriterion("create_by >", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(Long value) {
            addCriterion("create_by >=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(Long value) {
            addCriterion("create_by <", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(Long value) {
            addCriterion("create_by <=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<Long> values) {
            addCriterion("create_by in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<Long> values) {
            addCriterion("create_by not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(Long value1, Long value2) {
            addCriterion("create_by between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(Long value1, Long value2) {
            addCriterion("create_by not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(ZonedDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(ZonedDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<ZonedDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(Long value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(Long value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(Long value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(Long value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(Long value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(Long value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<Long> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<Long> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(Long value1, Long value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(Long value1, Long value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(ZonedDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(ZonedDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<ZonedDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andConfigStatusIsNull() {
            addCriterion("config_status is null");
            return (Criteria) this;
        }

        public Criteria andConfigStatusIsNotNull() {
            addCriterion("config_status is not null");
            return (Criteria) this;
        }

        public Criteria andConfigStatusEqualTo(Integer value) {
            addCriterion("config_status =", value, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusNotEqualTo(Integer value) {
            addCriterion("config_status <>", value, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusGreaterThan(Integer value) {
            addCriterion("config_status >", value, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("config_status >=", value, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusLessThan(Integer value) {
            addCriterion("config_status <", value, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusLessThanOrEqualTo(Integer value) {
            addCriterion("config_status <=", value, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusIn(List<Integer> values) {
            addCriterion("config_status in", values, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusNotIn(List<Integer> values) {
            addCriterion("config_status not in", values, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusBetween(Integer value1, Integer value2) {
            addCriterion("config_status between", value1, value2, "configStatus");
            return (Criteria) this;
        }

        public Criteria andConfigStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("config_status not between", value1, value2, "configStatus");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_sys_config2
     *
     * @date do_not_delete_during_merge 2022-08-25 14:30:26
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_sys_config2
     *
     * @date 2022-08-25 14:30:26
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
