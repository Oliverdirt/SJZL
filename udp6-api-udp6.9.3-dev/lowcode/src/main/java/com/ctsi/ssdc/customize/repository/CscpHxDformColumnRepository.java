package com.ctsi.ssdc.customize.repository;

import com.ctsi.ssdc.customize.domain.CscpHxDformColumn;
import com.ctsi.ssdc.customize.domain.CscpHxDformColumnExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

/**
 * CscpHxDformColumnRepository
 *
 * @author hx
 * @date 2022-11-14 14:36:13
 */

@Mapper
public interface CscpHxDformColumnRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpHxDformColumn, Long, CscpHxDformColumnExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @SelectProvider(type=CscpHxDformColumnSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpHxDformColumnExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @DeleteProvider(type=CscpHxDformColumnSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpHxDformColumnExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @Delete({
            "delete from cscp_hx_dform_column",
            "where column_id = #{columnId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long columnId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     *
     * @date 2022-11-14 14:36:13
     */
    @Insert({
            "insert into cscp_hx_dform_column (",
            "column_id,",
            "table_id,",
            "column_name,",
            "column_name_old,",
            "column_comment,",
            "column_type,",
            "column_length,",
            "point_length,",
            "is_pk,",
            "default_value,",
            "is_null,",
            "order_num,",
            "is_form,",
            "is_list,",
            "is_query,",
            "show_type,",
            "query_type,",
            "control_length,",
            "dic_code,",
            "validate_rule,",
            "is_fk,",
            "is_bk,",
            "column_relation",
            ") values (",
            "#{columnId,jdbcType=BIGINT}, ",
            "#{tableId,jdbcType=BIGINT}, ",
            "#{columnName,jdbcType=VARCHAR}, ",
            "#{columnNameOld,jdbcType=VARCHAR}, ",
            "#{columnComment,jdbcType=VARCHAR}, ",
            "#{columnType,jdbcType=INTEGER}, ",
            "#{columnLength,jdbcType=BIGINT}, ",
            "#{pointLength,jdbcType=INTEGER}, ",
            "#{isPk,jdbcType=INTEGER}, ",
            "#{defaultValue,jdbcType=VARCHAR}, ",
            "#{isNull,jdbcType=INTEGER}, ",
            "#{orderNum,jdbcType=INTEGER}, ",
            "#{isForm,jdbcType=INTEGER}, ",
            "#{isList,jdbcType=INTEGER}, ",
            "#{isQuery,jdbcType=BIGINT}, ",
            "#{showType,jdbcType=INTEGER}, ",
            "#{queryType,jdbcType=INTEGER}, ",
            "#{controlLength,jdbcType=INTEGER}, ",
            "#{dicCode,jdbcType=VARCHAR}, ",
            "#{validateRule,jdbcType=VARCHAR}, ",
            "#{isFk,jdbcType=VARCHAR}, ",
            "#{isBk,jdbcType=VARCHAR}, ",
            "#{columnRelation,jdbcType=VARCHAR}",
            ")"

    })
    @Override
    int insert(CscpHxDformColumn record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @InsertProvider(type=CscpHxDformColumnSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpHxDformColumn record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @SelectProvider(type=CscpHxDformColumnSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="column_id", property="columnId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT),
            @Result(column="column_name", property="columnName", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_name_old", property="columnNameOld", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_comment", property="columnComment", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_type", property="columnType", jdbcType=JdbcType.INTEGER),
            @Result(column="column_length", property="columnLength", jdbcType=JdbcType.BIGINT),
            @Result(column="point_length", property="pointLength", jdbcType=JdbcType.INTEGER),
            @Result(column="is_pk", property="isPk", jdbcType=JdbcType.INTEGER),
            @Result(column="default_value", property="defaultValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_null", property="isNull", jdbcType=JdbcType.INTEGER),
            @Result(column="order_num", property="orderNum", jdbcType=JdbcType.INTEGER),
            @Result(column="is_form", property="isForm", jdbcType=JdbcType.INTEGER),
            @Result(column="is_list", property="isList", jdbcType=JdbcType.INTEGER),
            @Result(column="is_query", property="isQuery", jdbcType=JdbcType.BIGINT),
            @Result(column="show_type", property="showType", jdbcType=JdbcType.INTEGER),
            @Result(column="query_type", property="queryType", jdbcType=JdbcType.INTEGER),
            @Result(column="control_length", property="controlLength", jdbcType=JdbcType.INTEGER),
            @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="validate_rule", property="validateRule", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_fk", property="isFk", jdbcType=JdbcType.VARCHAR)
    })

    @Override
    List<CscpHxDformColumn> selectByExample(CscpHxDformColumnExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @Select({
            "select",
            "column_id,",
            "table_id,",
            "column_name,",
            "column_name_old,",
            "column_comment,",
            "column_type,",
            "column_length,",
            "point_length,",
            "is_pk,",
            "default_value,",
            "is_null,",
            "order_num,",
            "is_form,",
            "is_list,",
            "is_query,",
            "show_type,",
            "query_type,",
            "control_length,",
            "dic_code,",
            "validate_rule,",
            "is_fk",
            "from cscp_hx_dform_column",
            "where column_id = #{columnId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="column_id", property="columnId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT),
            @Result(column="column_name", property="columnName", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_name_old", property="columnNameOld", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_comment", property="columnComment", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_type", property="columnType", jdbcType=JdbcType.INTEGER),
            @Result(column="column_length", property="columnLength", jdbcType=JdbcType.BIGINT),
            @Result(column="point_length", property="pointLength", jdbcType=JdbcType.INTEGER),
            @Result(column="is_pk", property="isPk", jdbcType=JdbcType.INTEGER),
            @Result(column="default_value", property="defaultValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_null", property="isNull", jdbcType=JdbcType.INTEGER),
            @Result(column="order_num", property="orderNum", jdbcType=JdbcType.INTEGER),
            @Result(column="is_form", property="isForm", jdbcType=JdbcType.INTEGER),
            @Result(column="is_list", property="isList", jdbcType=JdbcType.INTEGER),
            @Result(column="is_query", property="isQuery", jdbcType=JdbcType.BIGINT),
            @Result(column="show_type", property="showType", jdbcType=JdbcType.INTEGER),
            @Result(column="query_type", property="queryType", jdbcType=JdbcType.INTEGER),
            @Result(column="control_length", property="controlLength", jdbcType=JdbcType.INTEGER),
            @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="validate_rule", property="validateRule", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_fk", property="isFk", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    CscpHxDformColumn selectByPrimaryKey(Long columnId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @UpdateProvider(type=CscpHxDformColumnSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpHxDformColumn record, @Param("example") CscpHxDformColumnExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @UpdateProvider(type=CscpHxDformColumnSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpHxDformColumn record, @Param("example") CscpHxDformColumnExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     *@date 2022-11-14 14:36:13
     */
    @UpdateProvider(type=CscpHxDformColumnSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpHxDformColumn record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_column
     *
     * @date 2022-11-14 14:36:13
     */
    @Update({
            "update cscp_hx_dform_column",
            "set ",
            "column_id = #{columnId,jdbcType=BIGINT},",
            "table_id = #{tableId,jdbcType=BIGINT},",
            "column_name = #{columnName,jdbcType=VARCHAR},",
            "column_name_old = #{columnNameOld,jdbcType=VARCHAR},",
            "column_comment = #{columnComment,jdbcType=VARCHAR},",
            "column_type = #{columnType,jdbcType=INTEGER},",
            "column_length = #{columnLength,jdbcType=BIGINT},",
            "point_length = #{pointLength,jdbcType=INTEGER},",
            "is_pk = #{isPk,jdbcType=INTEGER},",
            "default_value = #{defaultValue,jdbcType=VARCHAR},",
            "is_null = #{isNull,jdbcType=INTEGER},",
            "order_num = #{orderNum,jdbcType=INTEGER},",
            "is_form = #{isForm,jdbcType=INTEGER},",
            "is_list = #{isList,jdbcType=INTEGER},",
            "is_query = #{isQuery,jdbcType=BIGINT},",
            "show_type = #{showType,jdbcType=INTEGER},",
            "query_type = #{queryType,jdbcType=INTEGER},",
            "control_length = #{controlLength,jdbcType=INTEGER},",
            "dic_code = #{dicCode,jdbcType=VARCHAR},",
            "validate_rule = #{validateRule,jdbcType=VARCHAR},",
            "is_fk = #{isFk,jdbcType=VARCHAR}",

            "where column_id = #{columnId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpHxDformColumn record);

    /**
     * 批量删除
     * @param columnIds
     */
    @Delete("<script>" +
            "delete from cscp_hx_dform_column where column_id in" +
            "<foreach collection=\"columnIds\" item=\"columnId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{columnId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("columnIds") List<Long> columnIds);


    @Select({
            "select",
            "column_id, table_id, column_name,column_name_old, column_comment, column_type, column_length, ",
            "point_length, is_pk, default_value, is_null, order_num, is_list, is_form, is_query, show_type, ",
            "query_type, control_length, dic_code, validate_rule,is_fk,is_bk,column_relation",
            "from cscp_hx_dform_column",
            "where table_id = #{tableId,jdbcType=BIGINT}",
            "order by order_num,column_id"
    })
    @Results({
            @Result(column="column_id", property="columnId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT),
            @Result(column="column_name", property="columnName", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_name_old", property="columnNameOld", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_comment", property="columnComment", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_type", property="columnType", jdbcType=JdbcType.INTEGER),
            @Result(column="column_length", property="columnLength", jdbcType=JdbcType.BIGINT),
            @Result(column="point_length", property="pointLength", jdbcType=JdbcType.INTEGER),
            @Result(column="is_pk", property="isPk", jdbcType=JdbcType.INTEGER),
            @Result(column="default_value", property="defaultValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_null", property="isNull", jdbcType=JdbcType.INTEGER),
            @Result(column="order_num", property="orderNum", jdbcType=JdbcType.INTEGER),
            @Result(column="is_list", property="isList", jdbcType=JdbcType.INTEGER),
            @Result(column="is_form", property="isForm", jdbcType=JdbcType.INTEGER),
            @Result(column="is_query", property="isQuery", jdbcType=JdbcType.INTEGER),
            @Result(column="show_type", property="showType", jdbcType=JdbcType.INTEGER),
            @Result(column="query_type", property="queryType", jdbcType=JdbcType.VARCHAR),
            @Result(column="control_length", property="controlLength", jdbcType=JdbcType.VARCHAR),
            @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="validate_rule", property="validateRule", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_fk", property="isFk", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_bk", property="isBk", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_relation", property="columnRelation", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpHxDformColumn> selectByTableId(Long id);


    /**
     * 批量删除
     * @param tableIds
     */
    @Delete("<script>" +
            "delete from cscp_hx_dform_column where table_id in" +
            "<foreach collection=\"tableIds\" item=\"tableId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{tableId}" +
            "</foreach>" +
            "</script>")
    void deleteByTableIds(@Param("tableIds") List<Long> tableIds);

    @Delete("<script>" +
            "delete t4 from cscp_hx_dform_table t1," +
            "cscp_hx_dform_table t2," +
            "cscp_customize_model t3," +
            "cscp_hx_dform_column t4 " +
            "WHERE t1.main_table_id = t2.table_id " +
            "AND t2.table_id = t3.table_id " +
            "AND t4.table_id = t1.table_id " +
            "AND t3.model_id IN " +
            "<foreach collection=\"delList\" item=\"modelId\" open=\"(\" separator=\",\" close=\")\"> " +
            "#{modelId} " +
            "</foreach> " +
            "</script>"
    )
    void deleteChildColumnByModelIds(@Param("delList") List<Long> delList);

    @Delete("<script>" +
            "delete t4 from cscp_hx_dform_table t1," +
            "cscp_customize_model t3," +
            "cscp_hx_dform_column t4 " +
            "WHERE  " +
            " t1.table_id = t3.table_id " +
            "AND t4.table_id = t1.table_id " +
            "AND t3.model_id IN " +
            "<foreach collection=\"delList\" item=\"modelId\" open=\"(\" separator=\",\" close=\")\"> " +
            "#{modelId} " +
            "</foreach> " +
            "</script>"
    )
    void deleteMainColumnByModelIds(@Param("delList") List<Long> delList);
}





