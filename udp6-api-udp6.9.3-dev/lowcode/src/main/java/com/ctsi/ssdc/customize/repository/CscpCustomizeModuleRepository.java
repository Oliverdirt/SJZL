package com.ctsi.ssdc.customize.repository;

import com.ctsi.ssdc.customize.domain.CscpCustomizeModule;
import com.ctsi.ssdc.customize.domain.CscpCustomizeModuleExample;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

/**
 * CscpCustomizeModuleRepository
 *
 * @author hx
 * @date 2022-08-31 09:44:42
 */

@Mapper
public interface CscpCustomizeModuleRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpCustomizeModule, Long, CscpCustomizeModuleExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @SelectProvider(type=CscpCustomizeModuleSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpCustomizeModuleExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @DeleteProvider(type=CscpCustomizeModuleSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpCustomizeModuleExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @Delete({
            "delete from cscp_customize_module",
            "where module_id = #{moduleId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long moduleId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     *
     * @date 2022-08-31 09:44:42
     */
    @Insert({
            "insert into cscp_customize_module (",
            "module_id,",
            "module_name,",
            "module_identify,",
            "create_time,",
            "created_by,",
            "update_time,",
            "update_by,",
            "tenant_id",
            ") values (",
            "#{moduleId,jdbcType=BIGINT}, ",
            "#{moduleName,jdbcType=VARCHAR}, ",
            "#{moduleIdentify,jdbcType=VARCHAR}, ",
            "#{createTime,jdbcType=DATE}, ",
            "#{createdBy,jdbcType=BIGINT}, ",
            "#{updateTime,jdbcType=DATE}, ",
            "#{updateBy,jdbcType=BIGINT}, ",
            "#{tenantId,jdbcType=BIGINT}",

            ")"

    })
    @Override
    int insert(CscpCustomizeModule record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @InsertProvider(type=CscpCustomizeModuleSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpCustomizeModule record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @SelectProvider(type=CscpCustomizeModuleSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="module_id", property="moduleId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="module_name", property="moduleName", jdbcType=JdbcType.VARCHAR),
            @Result(column="module_identify", property="moduleIdentify", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="created_by", property="createdBy", jdbcType=JdbcType.BIGINT),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.BIGINT),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT)
    })

    @Override
    List<CscpCustomizeModule> selectByExample(CscpCustomizeModuleExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @Select({
            "select",
            "module_id,",
            "module_name,",
            "module_identify,",
            "create_time,",
            "created_by,",
            "update_time,",
            "update_by,",
            "tenant_id",
            "from cscp_customize_module",
            "where module_id = #{moduleId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="module_id", property="moduleId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="module_name", property="moduleName", jdbcType=JdbcType.VARCHAR),
            @Result(column="module_identify", property="moduleIdentify", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="created_by", property="createdBy", jdbcType=JdbcType.BIGINT),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.BIGINT),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT)
    })
    @Override
    CscpCustomizeModule selectByPrimaryKey(Long moduleId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @UpdateProvider(type=CscpCustomizeModuleSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpCustomizeModule record, @Param("example") CscpCustomizeModuleExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @UpdateProvider(type=CscpCustomizeModuleSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpCustomizeModule record, @Param("example") CscpCustomizeModuleExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     *@date 2022-08-31 09:44:42
     */
    @UpdateProvider(type=CscpCustomizeModuleSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpCustomizeModule record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_module
     *
     * @date 2022-08-31 09:44:42
     */
    @Update({
            "update cscp_customize_module",
            "set ",
            "module_id = #{moduleId,jdbcType=BIGINT},",
            "module_name = #{moduleName,jdbcType=VARCHAR},",
            "module_identify = #{moduleIdentify,jdbcType=VARCHAR},",
            "create_time = #{createTime,jdbcType=DATE},",
            "created_by = #{createdBy,jdbcType=BIGINT},",
            "update_time = #{updateTime,jdbcType=DATE},",
            "update_by = #{updateBy,jdbcType=BIGINT},",
            "tenant_id = #{tenantId,jdbcType=BIGINT}",

            "where module_id = #{moduleId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpCustomizeModule record);

    /**
     * 批量删除
     * @param moduleIds
     */
    @Delete("<script>" +
            "delete from cscp_customize_module where module_id in" +
            "<foreach collection=\"moduleIds\" item=\"moduleId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{moduleId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("moduleIds") List<Long> moduleIds);


    @Update({
            "update cscp_customize_module",
            "set ",
            "menu_id = #{menuId,jdbcType=VARCHAR}",

            "where module_id = #{moduleId,jdbcType=BIGINT}"
    })
    void updateByModuleId(Map<String,Object> map);
}





