package com.ctsi.ssdc.customize.domain;

import com.ctsi.ssdc.criteria.*;

import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * CscpHxDformTableExample
 *
 * @author hx
 * @date 2022-11-14 14:22:09
 */

public class CscpHxDformTableExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private static final String LIKE_FORMAT = "%%%s%%";


        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.table_id
         *
         * @date 2022-11-14 14:22:09
         */
    private LongCriteria tableId;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.table_name
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria tableName;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.table_content
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria tableContent;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.db_type
         *
         * @date 2022-11-14 14:22:09
         */
    private IntegerCriteria dbType;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.persistence_type
         *
         * @date 2022-11-14 14:22:09
         */
    private IntegerCriteria persistenceType;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.is_db_synch
         *
         * @date 2022-11-14 14:22:09
         */
    private IntegerCriteria isDbSynch;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.form_type
         *
         * @date 2022-11-14 14:22:09
         */
    private IntegerCriteria formType;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.sub_table_name
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria subTableName;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.sub_table_fk_name
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria subTableFkName;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.package_name
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria packageName;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.gen_type
         *
         * @date 2022-11-14 14:22:09
         */
    private IntegerCriteria genType;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.gen_path
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria genPath;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.options
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria options;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.remark
         *
         * @date 2022-11-14 14:22:09
         */
    private StringCriteria remark;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.form_suite
         *
         * @date 2022-11-14 14:22:09
         */
    private LongCriteria formSuite;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_hx_dform_table.main_table_id
         *
         * @date 2022-11-14 14:22:09
         */
    private LongCriteria mainTableId;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public CscpHxDformTableExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public LongCriteria getTableId() {
        return tableId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setTableId(LongCriteria tableId) {
        this. tableId = tableId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildTableIdCriteria(Criteria criteria) {
        if (this.getTableId() == null) {
            return;
        }
        if (this.getTableId().getEquals() != null) {
            criteria.andTableIdEqualTo(this.getTableId().getEquals());
        } else {
            if (this.getTableId().getGreaterOrEqualThan() != null) {
                criteria.andTableIdGreaterThanOrEqualTo(this.getTableId().getGreaterOrEqualThan());
            }
            if (this.getTableId().getLessOrEqualThan() != null) {
                criteria.andTableIdLessThanOrEqualTo(this.getTableId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getTableName() {
        return tableName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setTableName(StringCriteria tableName) {
        this. tableName = tableName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildTableNameCriteria(Criteria criteria) {
        if (this.getTableName() == null) {
            return;
        }
        if (this.getTableName().getEquals() != null) {
            criteria.andTableNameEqualTo(this.getTableName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getTableName().getContains())) {
                criteria.andTableNameLike(String.format(LIKE_FORMAT, this.getTableName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getTableContent() {
        return tableContent;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setTableContent(StringCriteria tableContent) {
        this. tableContent = tableContent;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildTableContentCriteria(Criteria criteria) {
        if (this.getTableContent() == null) {
            return;
        }
        if (this.getTableContent().getEquals() != null) {
            criteria.andTableContentEqualTo(this.getTableContent().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getTableContent().getContains())) {
                criteria.andTableContentLike(String.format(LIKE_FORMAT, this.getTableContent().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public IntegerCriteria getDbType() {
        return dbType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setDbType(IntegerCriteria dbType) {
        this. dbType = dbType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildDbTypeCriteria(Criteria criteria) {
        if (this.getDbType() == null) {
            return;
        }
        if (this.getDbType().getEquals() != null) {
            criteria.andDbTypeEqualTo(this.getDbType().getEquals());
        } else {
            if (this.getDbType().getGreaterOrEqualThan() != null) {
                criteria.andDbTypeGreaterThanOrEqualTo(this.getDbType().getGreaterOrEqualThan());
            }
            if (this.getDbType().getLessOrEqualThan() != null) {
                criteria.andDbTypeLessThanOrEqualTo(this.getDbType().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public IntegerCriteria getPersistenceType() {
        return persistenceType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setPersistenceType(IntegerCriteria persistenceType) {
        this. persistenceType = persistenceType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildPersistenceTypeCriteria(Criteria criteria) {
        if (this.getPersistenceType() == null) {
            return;
        }
        if (this.getPersistenceType().getEquals() != null) {
            criteria.andPersistenceTypeEqualTo(this.getPersistenceType().getEquals());
        } else {
            if (this.getPersistenceType().getGreaterOrEqualThan() != null) {
                criteria.andPersistenceTypeGreaterThanOrEqualTo(this.getPersistenceType().getGreaterOrEqualThan());
            }
            if (this.getPersistenceType().getLessOrEqualThan() != null) {
                criteria.andPersistenceTypeLessThanOrEqualTo(this.getPersistenceType().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public IntegerCriteria getIsDbSynch() {
        return isDbSynch;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setIsDbSynch(IntegerCriteria isDbSynch) {
        this. isDbSynch = isDbSynch;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildIsDbSynchCriteria(Criteria criteria) {
        if (this.getIsDbSynch() == null) {
            return;
        }
        if (this.getIsDbSynch().getEquals() != null) {
            criteria.andIsDbSynchEqualTo(this.getIsDbSynch().getEquals());
        } else {
            if (this.getIsDbSynch().getGreaterOrEqualThan() != null) {
                criteria.andIsDbSynchGreaterThanOrEqualTo(this.getIsDbSynch().getGreaterOrEqualThan());
            }
            if (this.getIsDbSynch().getLessOrEqualThan() != null) {
                criteria.andIsDbSynchLessThanOrEqualTo(this.getIsDbSynch().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public IntegerCriteria getFormType() {
        return formType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setFormType(IntegerCriteria formType) {
        this. formType = formType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildFormTypeCriteria(Criteria criteria) {
        if (this.getFormType() == null) {
            return;
        }
        if (this.getFormType().getEquals() != null) {
            criteria.andFormTypeEqualTo(this.getFormType().getEquals());
        } else {
            if (this.getFormType().getGreaterOrEqualThan() != null) {
                criteria.andFormTypeGreaterThanOrEqualTo(this.getFormType().getGreaterOrEqualThan());
            }
            if (this.getFormType().getLessOrEqualThan() != null) {
                criteria.andFormTypeLessThanOrEqualTo(this.getFormType().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getSubTableName() {
        return subTableName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setSubTableName(StringCriteria subTableName) {
        this. subTableName = subTableName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildSubTableNameCriteria(Criteria criteria) {
        if (this.getSubTableName() == null) {
            return;
        }
        if (this.getSubTableName().getEquals() != null) {
            criteria.andSubTableNameEqualTo(this.getSubTableName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getSubTableName().getContains())) {
                criteria.andSubTableNameLike(String.format(LIKE_FORMAT, this.getSubTableName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getSubTableFkName() {
        return subTableFkName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setSubTableFkName(StringCriteria subTableFkName) {
        this. subTableFkName = subTableFkName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildSubTableFkNameCriteria(Criteria criteria) {
        if (this.getSubTableFkName() == null) {
            return;
        }
        if (this.getSubTableFkName().getEquals() != null) {
            criteria.andSubTableFkNameEqualTo(this.getSubTableFkName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getSubTableFkName().getContains())) {
                criteria.andSubTableFkNameLike(String.format(LIKE_FORMAT, this.getSubTableFkName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getPackageName() {
        return packageName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setPackageName(StringCriteria packageName) {
        this. packageName = packageName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildPackageNameCriteria(Criteria criteria) {
        if (this.getPackageName() == null) {
            return;
        }
        if (this.getPackageName().getEquals() != null) {
            criteria.andPackageNameEqualTo(this.getPackageName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getPackageName().getContains())) {
                criteria.andPackageNameLike(String.format(LIKE_FORMAT, this.getPackageName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public IntegerCriteria getGenType() {
        return genType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setGenType(IntegerCriteria genType) {
        this. genType = genType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildGenTypeCriteria(Criteria criteria) {
        if (this.getGenType() == null) {
            return;
        }
        if (this.getGenType().getEquals() != null) {
            criteria.andGenTypeEqualTo(this.getGenType().getEquals());
        } else {
            if (this.getGenType().getGreaterOrEqualThan() != null) {
                criteria.andGenTypeGreaterThanOrEqualTo(this.getGenType().getGreaterOrEqualThan());
            }
            if (this.getGenType().getLessOrEqualThan() != null) {
                criteria.andGenTypeLessThanOrEqualTo(this.getGenType().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getGenPath() {
        return genPath;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setGenPath(StringCriteria genPath) {
        this. genPath = genPath;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildGenPathCriteria(Criteria criteria) {
        if (this.getGenPath() == null) {
            return;
        }
        if (this.getGenPath().getEquals() != null) {
            criteria.andGenPathEqualTo(this.getGenPath().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getGenPath().getContains())) {
                criteria.andGenPathLike(String.format(LIKE_FORMAT, this.getGenPath().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getOptions() {
        return options;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setOptions(StringCriteria options) {
        this. options = options;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildOptionsCriteria(Criteria criteria) {
        if (this.getOptions() == null) {
            return;
        }
        if (this.getOptions().getEquals() != null) {
            criteria.andOptionsEqualTo(this.getOptions().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getOptions().getContains())) {
                criteria.andOptionsLike(String.format(LIKE_FORMAT, this.getOptions().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public StringCriteria getRemark() {
        return remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setRemark(StringCriteria remark) {
        this. remark = remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildRemarkCriteria(Criteria criteria) {
        if (this.getRemark() == null) {
            return;
        }
        if (this.getRemark().getEquals() != null) {
            criteria.andRemarkEqualTo(this.getRemark().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getRemark().getContains())) {
                criteria.andRemarkLike(String.format(LIKE_FORMAT, this.getRemark().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public LongCriteria getFormSuite() {
        return formSuite;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setFormSuite(LongCriteria formSuite) {
        this. formSuite = formSuite;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildFormSuiteCriteria(Criteria criteria) {
        if (this.getFormSuite() == null) {
            return;
        }
        if (this.getFormSuite().getEquals() != null) {
            criteria.andFormSuiteEqualTo(this.getFormSuite().getEquals());
        } else {
            if (this.getFormSuite().getGreaterOrEqualThan() != null) {
                criteria.andFormSuiteGreaterThanOrEqualTo(this.getFormSuite().getGreaterOrEqualThan());
            }
            if (this.getFormSuite().getLessOrEqualThan() != null) {
                criteria.andFormSuiteLessThanOrEqualTo(this.getFormSuite().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public LongCriteria getMainTableId() {
        return mainTableId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public void setMainTableId(LongCriteria mainTableId) {
        this. mainTableId = mainTableId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    private void buildMainTableIdCriteria(Criteria criteria) {
        if (this.getMainTableId() == null) {
            return;
        }
        if (this.getMainTableId().getEquals() != null) {
            criteria.andMainTableIdEqualTo(this.getMainTableId().getEquals());
        } else {
            if (this.getMainTableId().getGreaterOrEqualThan() != null) {
                criteria.andMainTableIdGreaterThanOrEqualTo(this.getMainTableId().getGreaterOrEqualThan());
            }
            if (this.getMainTableId().getLessOrEqualThan() != null) {
                criteria.andMainTableIdLessThanOrEqualTo(this.getMainTableId().getLessOrEqualThan());
            }
        }
    }
    /**
      * This method was generated by  Generator.
      * This method corresponds to the database table cscp_hx_form_column
      *
      * @date Thu Feb 17 14:02:06 CST 2022
      */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildTableIdCriteria(criteria);
        this.buildTableNameCriteria(criteria);
        this.buildTableContentCriteria(criteria);
        this.buildDbTypeCriteria(criteria);
        this.buildPersistenceTypeCriteria(criteria);
        this.buildIsDbSynchCriteria(criteria);
        this.buildFormTypeCriteria(criteria);
        this.buildSubTableNameCriteria(criteria);
        this.buildSubTableFkNameCriteria(criteria);
        this.buildPackageNameCriteria(criteria);
        this.buildGenTypeCriteria(criteria);
        this.buildGenPathCriteria(criteria);
        this.buildOptionsCriteria(criteria);
        this.buildRemarkCriteria(criteria);
        this.buildFormSuiteCriteria(criteria);
        this.buildMainTableIdCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andTableIdIsNull() {
            addCriterion("table_id is null");
            return (Criteria) this;
        }

        public Criteria andTableIdIsNotNull() {
            addCriterion("table_id is not null");
            return (Criteria) this;
        }

        public Criteria andTableIdEqualTo(Long value) {
            addCriterion("table_id =", value, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdNotEqualTo(Long value) {
            addCriterion("table_id <>", value, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdGreaterThan(Long value) {
            addCriterion("table_id >", value, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdGreaterThanOrEqualTo(Long value) {
            addCriterion("table_id >=", value, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdLessThan(Long value) {
            addCriterion("table_id <", value, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdLessThanOrEqualTo(Long value) {
            addCriterion("table_id <=", value, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdIn(List<Long> values) {
            addCriterion("table_id in", values, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdNotIn(List<Long> values) {
            addCriterion("table_id not in", values, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdBetween(Long value1, Long value2) {
            addCriterion("table_id between", value1, value2, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableIdNotBetween(Long value1, Long value2) {
            addCriterion("table_id not between", value1, value2, "tableId");
            return (Criteria) this;
        }

        public Criteria andTableNameIsNull() {
            addCriterion("table_name is null");
            return (Criteria) this;
        }

        public Criteria andTableNameIsNotNull() {
            addCriterion("table_name is not null");
            return (Criteria) this;
        }

        public Criteria andTableNameEqualTo(String value) {
            addCriterion("table_name =", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotEqualTo(String value) {
            addCriterion("table_name <>", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameGreaterThan(String value) {
            addCriterion("table_name >", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("table_name >=", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLessThan(String value) {
            addCriterion("table_name <", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLessThanOrEqualTo(String value) {
            addCriterion("table_name <=", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameLike(String value) {
            addCriterion("table_name like", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotLike(String value) {
            addCriterion("table_name not like", value, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameIn(List<String> values) {
            addCriterion("table_name in", values, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotIn(List<String> values) {
            addCriterion("table_name not in", values, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameBetween(String value1, String value2) {
            addCriterion("table_name between", value1, value2, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableNameNotBetween(String value1, String value2) {
            addCriterion("table_name not between", value1, value2, "tableName");
            return (Criteria) this;
        }

        public Criteria andTableContentIsNull() {
            addCriterion("table_content is null");
            return (Criteria) this;
        }

        public Criteria andTableContentIsNotNull() {
            addCriterion("table_content is not null");
            return (Criteria) this;
        }

        public Criteria andTableContentEqualTo(String value) {
            addCriterion("table_content =", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentNotEqualTo(String value) {
            addCriterion("table_content <>", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentGreaterThan(String value) {
            addCriterion("table_content >", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentGreaterThanOrEqualTo(String value) {
            addCriterion("table_content >=", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentLessThan(String value) {
            addCriterion("table_content <", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentLessThanOrEqualTo(String value) {
            addCriterion("table_content <=", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentLike(String value) {
            addCriterion("table_content like", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentNotLike(String value) {
            addCriterion("table_content not like", value, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentIn(List<String> values) {
            addCriterion("table_content in", values, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentNotIn(List<String> values) {
            addCriterion("table_content not in", values, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentBetween(String value1, String value2) {
            addCriterion("table_content between", value1, value2, "tableContent");
            return (Criteria) this;
        }

        public Criteria andTableContentNotBetween(String value1, String value2) {
            addCriterion("table_content not between", value1, value2, "tableContent");
            return (Criteria) this;
        }

        public Criteria andDbTypeIsNull() {
            addCriterion("db_type is null");
            return (Criteria) this;
        }

        public Criteria andDbTypeIsNotNull() {
            addCriterion("db_type is not null");
            return (Criteria) this;
        }

        public Criteria andDbTypeEqualTo(Integer value) {
            addCriterion("db_type =", value, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeNotEqualTo(Integer value) {
            addCriterion("db_type <>", value, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeGreaterThan(Integer value) {
            addCriterion("db_type >", value, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("db_type >=", value, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeLessThan(Integer value) {
            addCriterion("db_type <", value, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeLessThanOrEqualTo(Integer value) {
            addCriterion("db_type <=", value, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeIn(List<Integer> values) {
            addCriterion("db_type in", values, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeNotIn(List<Integer> values) {
            addCriterion("db_type not in", values, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeBetween(Integer value1, Integer value2) {
            addCriterion("db_type between", value1, value2, "dbType");
            return (Criteria) this;
        }

        public Criteria andDbTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("db_type not between", value1, value2, "dbType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeIsNull() {
            addCriterion("persistence_type is null");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeIsNotNull() {
            addCriterion("persistence_type is not null");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeEqualTo(Integer value) {
            addCriterion("persistence_type =", value, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeNotEqualTo(Integer value) {
            addCriterion("persistence_type <>", value, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeGreaterThan(Integer value) {
            addCriterion("persistence_type >", value, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("persistence_type >=", value, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeLessThan(Integer value) {
            addCriterion("persistence_type <", value, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeLessThanOrEqualTo(Integer value) {
            addCriterion("persistence_type <=", value, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeIn(List<Integer> values) {
            addCriterion("persistence_type in", values, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeNotIn(List<Integer> values) {
            addCriterion("persistence_type not in", values, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeBetween(Integer value1, Integer value2) {
            addCriterion("persistence_type between", value1, value2, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andPersistenceTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("persistence_type not between", value1, value2, "persistenceType");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchIsNull() {
            addCriterion("is_db_synch is null");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchIsNotNull() {
            addCriterion("is_db_synch is not null");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchEqualTo(Integer value) {
            addCriterion("is_db_synch =", value, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchNotEqualTo(Integer value) {
            addCriterion("is_db_synch <>", value, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchGreaterThan(Integer value) {
            addCriterion("is_db_synch >", value, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchGreaterThanOrEqualTo(Integer value) {
            addCriterion("is_db_synch >=", value, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchLessThan(Integer value) {
            addCriterion("is_db_synch <", value, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchLessThanOrEqualTo(Integer value) {
            addCriterion("is_db_synch <=", value, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchIn(List<Integer> values) {
            addCriterion("is_db_synch in", values, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchNotIn(List<Integer> values) {
            addCriterion("is_db_synch not in", values, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchBetween(Integer value1, Integer value2) {
            addCriterion("is_db_synch between", value1, value2, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andIsDbSynchNotBetween(Integer value1, Integer value2) {
            addCriterion("is_db_synch not between", value1, value2, "isDbSynch");
            return (Criteria) this;
        }

        public Criteria andFormTypeIsNull() {
            addCriterion("form_type is null");
            return (Criteria) this;
        }

        public Criteria andFormTypeIsNotNull() {
            addCriterion("form_type is not null");
            return (Criteria) this;
        }

        public Criteria andFormTypeEqualTo(Integer value) {
            addCriterion("form_type =", value, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeNotEqualTo(Integer value) {
            addCriterion("form_type <>", value, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeGreaterThan(Integer value) {
            addCriterion("form_type >", value, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("form_type >=", value, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeLessThan(Integer value) {
            addCriterion("form_type <", value, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeLessThanOrEqualTo(Integer value) {
            addCriterion("form_type <=", value, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeIn(List<Integer> values) {
            addCriterion("form_type in", values, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeNotIn(List<Integer> values) {
            addCriterion("form_type not in", values, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeBetween(Integer value1, Integer value2) {
            addCriterion("form_type between", value1, value2, "formType");
            return (Criteria) this;
        }

        public Criteria andFormTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("form_type not between", value1, value2, "formType");
            return (Criteria) this;
        }

        public Criteria andSubTableNameIsNull() {
            addCriterion("sub_table_name is null");
            return (Criteria) this;
        }

        public Criteria andSubTableNameIsNotNull() {
            addCriterion("sub_table_name is not null");
            return (Criteria) this;
        }

        public Criteria andSubTableNameEqualTo(String value) {
            addCriterion("sub_table_name =", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameNotEqualTo(String value) {
            addCriterion("sub_table_name <>", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameGreaterThan(String value) {
            addCriterion("sub_table_name >", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("sub_table_name >=", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameLessThan(String value) {
            addCriterion("sub_table_name <", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameLessThanOrEqualTo(String value) {
            addCriterion("sub_table_name <=", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameLike(String value) {
            addCriterion("sub_table_name like", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameNotLike(String value) {
            addCriterion("sub_table_name not like", value, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameIn(List<String> values) {
            addCriterion("sub_table_name in", values, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameNotIn(List<String> values) {
            addCriterion("sub_table_name not in", values, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameBetween(String value1, String value2) {
            addCriterion("sub_table_name between", value1, value2, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableNameNotBetween(String value1, String value2) {
            addCriterion("sub_table_name not between", value1, value2, "subTableName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameIsNull() {
            addCriterion("sub_table_fk_name is null");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameIsNotNull() {
            addCriterion("sub_table_fk_name is not null");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameEqualTo(String value) {
            addCriterion("sub_table_fk_name =", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameNotEqualTo(String value) {
            addCriterion("sub_table_fk_name <>", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameGreaterThan(String value) {
            addCriterion("sub_table_fk_name >", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameGreaterThanOrEqualTo(String value) {
            addCriterion("sub_table_fk_name >=", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameLessThan(String value) {
            addCriterion("sub_table_fk_name <", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameLessThanOrEqualTo(String value) {
            addCriterion("sub_table_fk_name <=", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameLike(String value) {
            addCriterion("sub_table_fk_name like", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameNotLike(String value) {
            addCriterion("sub_table_fk_name not like", value, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameIn(List<String> values) {
            addCriterion("sub_table_fk_name in", values, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameNotIn(List<String> values) {
            addCriterion("sub_table_fk_name not in", values, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameBetween(String value1, String value2) {
            addCriterion("sub_table_fk_name between", value1, value2, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andSubTableFkNameNotBetween(String value1, String value2) {
            addCriterion("sub_table_fk_name not between", value1, value2, "subTableFkName");
            return (Criteria) this;
        }

        public Criteria andPackageNameIsNull() {
            addCriterion("package_name is null");
            return (Criteria) this;
        }

        public Criteria andPackageNameIsNotNull() {
            addCriterion("package_name is not null");
            return (Criteria) this;
        }

        public Criteria andPackageNameEqualTo(String value) {
            addCriterion("package_name =", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameNotEqualTo(String value) {
            addCriterion("package_name <>", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameGreaterThan(String value) {
            addCriterion("package_name >", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameGreaterThanOrEqualTo(String value) {
            addCriterion("package_name >=", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameLessThan(String value) {
            addCriterion("package_name <", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameLessThanOrEqualTo(String value) {
            addCriterion("package_name <=", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameLike(String value) {
            addCriterion("package_name like", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameNotLike(String value) {
            addCriterion("package_name not like", value, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameIn(List<String> values) {
            addCriterion("package_name in", values, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameNotIn(List<String> values) {
            addCriterion("package_name not in", values, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameBetween(String value1, String value2) {
            addCriterion("package_name between", value1, value2, "packageName");
            return (Criteria) this;
        }

        public Criteria andPackageNameNotBetween(String value1, String value2) {
            addCriterion("package_name not between", value1, value2, "packageName");
            return (Criteria) this;
        }

        public Criteria andGenTypeIsNull() {
            addCriterion("gen_type is null");
            return (Criteria) this;
        }

        public Criteria andGenTypeIsNotNull() {
            addCriterion("gen_type is not null");
            return (Criteria) this;
        }

        public Criteria andGenTypeEqualTo(Integer value) {
            addCriterion("gen_type =", value, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeNotEqualTo(Integer value) {
            addCriterion("gen_type <>", value, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeGreaterThan(Integer value) {
            addCriterion("gen_type >", value, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("gen_type >=", value, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeLessThan(Integer value) {
            addCriterion("gen_type <", value, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeLessThanOrEqualTo(Integer value) {
            addCriterion("gen_type <=", value, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeIn(List<Integer> values) {
            addCriterion("gen_type in", values, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeNotIn(List<Integer> values) {
            addCriterion("gen_type not in", values, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeBetween(Integer value1, Integer value2) {
            addCriterion("gen_type between", value1, value2, "genType");
            return (Criteria) this;
        }

        public Criteria andGenTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("gen_type not between", value1, value2, "genType");
            return (Criteria) this;
        }

        public Criteria andGenPathIsNull() {
            addCriterion("gen_path is null");
            return (Criteria) this;
        }

        public Criteria andGenPathIsNotNull() {
            addCriterion("gen_path is not null");
            return (Criteria) this;
        }

        public Criteria andGenPathEqualTo(String value) {
            addCriterion("gen_path =", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathNotEqualTo(String value) {
            addCriterion("gen_path <>", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathGreaterThan(String value) {
            addCriterion("gen_path >", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathGreaterThanOrEqualTo(String value) {
            addCriterion("gen_path >=", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathLessThan(String value) {
            addCriterion("gen_path <", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathLessThanOrEqualTo(String value) {
            addCriterion("gen_path <=", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathLike(String value) {
            addCriterion("gen_path like", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathNotLike(String value) {
            addCriterion("gen_path not like", value, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathIn(List<String> values) {
            addCriterion("gen_path in", values, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathNotIn(List<String> values) {
            addCriterion("gen_path not in", values, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathBetween(String value1, String value2) {
            addCriterion("gen_path between", value1, value2, "genPath");
            return (Criteria) this;
        }

        public Criteria andGenPathNotBetween(String value1, String value2) {
            addCriterion("gen_path not between", value1, value2, "genPath");
            return (Criteria) this;
        }

        public Criteria andOptionsIsNull() {
            addCriterion("options is null");
            return (Criteria) this;
        }

        public Criteria andOptionsIsNotNull() {
            addCriterion("options is not null");
            return (Criteria) this;
        }

        public Criteria andOptionsEqualTo(String value) {
            addCriterion("options =", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsNotEqualTo(String value) {
            addCriterion("options <>", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsGreaterThan(String value) {
            addCriterion("options >", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsGreaterThanOrEqualTo(String value) {
            addCriterion("options >=", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsLessThan(String value) {
            addCriterion("options <", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsLessThanOrEqualTo(String value) {
            addCriterion("options <=", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsLike(String value) {
            addCriterion("options like", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsNotLike(String value) {
            addCriterion("options not like", value, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsIn(List<String> values) {
            addCriterion("options in", values, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsNotIn(List<String> values) {
            addCriterion("options not in", values, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsBetween(String value1, String value2) {
            addCriterion("options between", value1, value2, "options");
            return (Criteria) this;
        }

        public Criteria andOptionsNotBetween(String value1, String value2) {
            addCriterion("options not between", value1, value2, "options");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andFormSuiteIsNull() {
            addCriterion("form_suite is null");
            return (Criteria) this;
        }

        public Criteria andFormSuiteIsNotNull() {
            addCriterion("form_suite is not null");
            return (Criteria) this;
        }

        public Criteria andFormSuiteEqualTo(Long value) {
            addCriterion("form_suite =", value, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteNotEqualTo(Long value) {
            addCriterion("form_suite <>", value, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteGreaterThan(Long value) {
            addCriterion("form_suite >", value, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteGreaterThanOrEqualTo(Long value) {
            addCriterion("form_suite >=", value, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteLessThan(Long value) {
            addCriterion("form_suite <", value, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteLessThanOrEqualTo(Long value) {
            addCriterion("form_suite <=", value, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteIn(List<Long> values) {
            addCriterion("form_suite in", values, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteNotIn(List<Long> values) {
            addCriterion("form_suite not in", values, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteBetween(Long value1, Long value2) {
            addCriterion("form_suite between", value1, value2, "formSuite");
            return (Criteria) this;
        }

        public Criteria andFormSuiteNotBetween(Long value1, Long value2) {
            addCriterion("form_suite not between", value1, value2, "formSuite");
            return (Criteria) this;
        }

        public Criteria andMainTableIdIsNull() {
            addCriterion("main_table_id is null");
            return (Criteria) this;
        }

        public Criteria andMainTableIdIsNotNull() {
            addCriterion("main_table_id is not null");
            return (Criteria) this;
        }

        public Criteria andMainTableIdEqualTo(Long value) {
            addCriterion("main_table_id =", value, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdNotEqualTo(Long value) {
            addCriterion("main_table_id <>", value, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdGreaterThan(Long value) {
            addCriterion("main_table_id >", value, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdGreaterThanOrEqualTo(Long value) {
            addCriterion("main_table_id >=", value, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdLessThan(Long value) {
            addCriterion("main_table_id <", value, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdLessThanOrEqualTo(Long value) {
            addCriterion("main_table_id <=", value, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdIn(List<Long> values) {
            addCriterion("main_table_id in", values, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdNotIn(List<Long> values) {
            addCriterion("main_table_id not in", values, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdBetween(Long value1, Long value2) {
            addCriterion("main_table_id between", value1, value2, "mainTableId");
            return (Criteria) this;
        }

        public Criteria andMainTableIdNotBetween(Long value1, Long value2) {
            addCriterion("main_table_id not between", value1, value2, "mainTableId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_hx_dform_table
     *
     * @date do_not_delete_during_merge 2022-11-14 14:22:09
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
