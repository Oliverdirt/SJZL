package com.ctsi.ssdc.customize.repository;

import com.ctsi.ssdc.customize.domain.CscpHxDformTable;
import com.ctsi.ssdc.customize.domain.CscpHxDformTableExample;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;

/**
 * CscpHxDformTableRepository
 *
 * @author hx
 * @date 2022-11-14 14:22:09
 */

@Mapper
public interface CscpHxDformTableRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpHxDformTable, Long, CscpHxDformTableExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @SelectProvider(type=CscpHxDformTableSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpHxDformTableExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @DeleteProvider(type=CscpHxDformTableSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpHxDformTableExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @Delete({
            "delete from cscp_hx_dform_table",
            "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long tableId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     *
     * @date 2022-11-14 14:22:09
     */
    @Insert({
            "insert into cscp_hx_dform_table (",
            "table_id,",
            "table_name,",
            "table_content,",
            "db_type,",
            "persistence_type,",
            "is_db_synch,",
            "form_type,",
            "sub_table_name,",
            "sub_table_fk_name,",
            "package_name,",
            "gen_type,",
            "gen_path,",
            "options,",
            "remark,",
            "form_suite,",
            "main_table_id",
            ") values (",
            "#{tableId,jdbcType=BIGINT}, ",
            "#{tableName,jdbcType=VARCHAR}, ",
            "#{tableContent,jdbcType=VARCHAR}, ",
            "#{dbType,jdbcType=INTEGER}, ",
            "#{persistenceType,jdbcType=INTEGER}, ",
            "#{isDbSynch,jdbcType=INTEGER}, ",
            "#{formType,jdbcType=INTEGER}, ",
            "#{subTableName,jdbcType=VARCHAR}, ",
            "#{subTableFkName,jdbcType=VARCHAR}, ",
            "#{packageName,jdbcType=VARCHAR}, ",
            "#{genType,jdbcType=INTEGER}, ",
            "#{genPath,jdbcType=VARCHAR}, ",
            "#{options,jdbcType=VARCHAR}, ",
            "#{remark,jdbcType=VARCHAR}, ",
            "#{formSuite,jdbcType=BIGINT}, ",
            "#{mainTableId,jdbcType=BIGINT}",

            ")"

    })
    @Override
    int insert(CscpHxDformTable record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @InsertProvider(type=CscpHxDformTableSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpHxDformTable record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @SelectProvider(type=CscpHxDformTableSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_content", property="tableContent", jdbcType=JdbcType.VARCHAR),
            @Result(column="db_type", property="dbType", jdbcType=JdbcType.INTEGER),
            @Result(column="persistence_type", property="persistenceType", jdbcType=JdbcType.INTEGER),
            @Result(column="is_db_synch", property="isDbSynch", jdbcType=JdbcType.INTEGER),
            @Result(column="form_type", property="formType", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="sub_table_fk_name", property="subTableFkName", jdbcType=JdbcType.VARCHAR),
            @Result(column="package_name", property="packageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="gen_type", property="genType", jdbcType=JdbcType.INTEGER),
            @Result(column="gen_path", property="genPath", jdbcType=JdbcType.VARCHAR),
            @Result(column="options", property="options", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_suite", property="formSuite", jdbcType=JdbcType.BIGINT),
            @Result(column="main_table_id", property="mainTableId", jdbcType=JdbcType.BIGINT)
    })

    @Override
    List<CscpHxDformTable> selectByExample(CscpHxDformTableExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @Select({
            "select",
            "table_id,",
            "table_name,",
            "table_content,",
            "db_type,",
            "persistence_type,",
            "is_db_synch,",
            "form_type,",
            "sub_table_name,",
            "sub_table_fk_name,",
            "package_name,",
            "gen_type,",
            "gen_path,",
            "options,",
            "remark,",
            "form_suite,",
            "main_table_id",
            "from cscp_hx_dform_table",
            "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_content", property="tableContent", jdbcType=JdbcType.VARCHAR),
            @Result(column="db_type", property="dbType", jdbcType=JdbcType.INTEGER),
            @Result(column="persistence_type", property="persistenceType", jdbcType=JdbcType.INTEGER),
            @Result(column="is_db_synch", property="isDbSynch", jdbcType=JdbcType.INTEGER),
            @Result(column="form_type", property="formType", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="sub_table_fk_name", property="subTableFkName", jdbcType=JdbcType.VARCHAR),
            @Result(column="package_name", property="packageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="gen_type", property="genType", jdbcType=JdbcType.INTEGER),
            @Result(column="gen_path", property="genPath", jdbcType=JdbcType.VARCHAR),
            @Result(column="options", property="options", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_suite", property="formSuite", jdbcType=JdbcType.BIGINT),
            @Result(column="main_table_id", property="mainTableId", jdbcType=JdbcType.BIGINT)
    })
    @Override
    CscpHxDformTable selectByPrimaryKey(Long tableId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @UpdateProvider(type=CscpHxDformTableSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpHxDformTable record, @Param("example") CscpHxDformTableExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @UpdateProvider(type=CscpHxDformTableSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpHxDformTable record, @Param("example") CscpHxDformTableExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     *@date 2022-11-14 14:22:09
     */
    @UpdateProvider(type=CscpHxDformTableSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpHxDformTable record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_dform_table
     *
     * @date 2022-11-14 14:22:09
     */
    @Update({
            "update cscp_hx_dform_table",
            "set ",
            "table_id = #{tableId,jdbcType=BIGINT},",
            "table_name = #{tableName,jdbcType=VARCHAR},",
            "table_content = #{tableContent,jdbcType=VARCHAR},",
            "db_type = #{dbType,jdbcType=INTEGER},",
            "persistence_type = #{persistenceType,jdbcType=INTEGER},",
            "is_db_synch = #{isDbSynch,jdbcType=INTEGER},",
            "form_type = #{formType,jdbcType=INTEGER},",
            "sub_table_name = #{subTableName,jdbcType=VARCHAR},",
            "sub_table_fk_name = #{subTableFkName,jdbcType=VARCHAR},",
            "package_name = #{packageName,jdbcType=VARCHAR},",
            "gen_type = #{genType,jdbcType=INTEGER},",
            "gen_path = #{genPath,jdbcType=VARCHAR},",
            "options = #{options,jdbcType=VARCHAR},",
            "remark = #{remark,jdbcType=VARCHAR},",
            "form_suite = #{formSuite,jdbcType=BIGINT},",
            "main_table_id = #{mainTableId,jdbcType=BIGINT}",

            "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpHxDformTable record);

    /**
     * 批量删除
     * @param tableIds
     */
    @Delete("<script>" +
            "delete from cscp_hx_dform_table where table_id in" +
            "<foreach collection=\"tableIds\" item=\"tableId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{tableId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("tableIds") List<Long> tableIds);


    @Delete("<script>" +
            "delete t1 from cscp_hx_dform_table t1," +
            "cscp_hx_dform_table t2," +
            "cscp_customize_model t3  " +
            "WHERE t1.main_table_id = t2.table_id " +
            "AND t3.table_id = t2.table_id " +
            "AND t3.model_id IN  " +
            "<foreach collection=\"delLists\" item=\"modelId\" open=\"(\" separator=\",\" close=\")\"> " +
            "#{modelId} " +
            "</foreach> " +
            "</script>"
    )
    void deleteChileTableByModelId(@Param("delLists") List<Long> delLists);

    @Delete("<script>" +
            "delete t1 from cscp_hx_dform_table t1," +
            "cscp_customize_model t3  " +
            "WHERE t1.table_id = t3.table_id " +
            "AND t3.model_id IN  " +
            "<foreach collection=\"delLists\" item=\"modelId\" open=\"(\" separator=\",\" close=\")\"> " +
            "#{modelId} " +
            "</foreach> " +
            "</script>"
    )
    void deleteByTableId(@Param("delLists") List<Long> delLists);

    @Select({
            "select",
            "table_id, table_name, sub_table_name",
            "from cscp_hx_dform_table",
            "where table_name in",
            "<foreach collection=\"tableNames\" item=\"taleName\" open=\"(\" separator=\",\" close=\")\">" ,
            "#{taleName} ",
            "</foreach>" ,
            "</script>"
    })
    @Results({
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
    })
    List<CscpHxDformTable> selectByTableName(List<String> tableName);

    @Select({
            "select",
            "table_id, table_name, table_content, db_type, persistence_type, is_db_synch, ",
            "form_type, sub_table_name, sub_table_fk_name, package_name, gen_type, gen_path, ",
            "options, remark, form_suite, main_table_id",
            "from cscp_hx_dform_table",
            "where main_table_id = #{mainTableId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_content", property="tableContent", jdbcType=JdbcType.VARCHAR),
            @Result(column="db_type", property="dbType", jdbcType=JdbcType.INTEGER),
            @Result(column="persistence_type", property="persistenceType", jdbcType=JdbcType.INTEGER),
            @Result(column="is_db_synch", property="isDbSynch", jdbcType=JdbcType.INTEGER),
            @Result(column="form_type", property="formType", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="sub_table_fk_name", property="subTableFkName", jdbcType=JdbcType.VARCHAR),
            @Result(column="package_name", property="packageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="gen_type", property="genType", jdbcType=JdbcType.INTEGER),
            @Result(column="gen_path", property="genPath", jdbcType=JdbcType.VARCHAR),
            @Result(column="options", property="options", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_suite", property="formSuite", jdbcType=JdbcType.BIGINT),
            @Result(column="main_table_id", property="mainTableId", jdbcType=JdbcType.BIGINT),
            @Result(column = "table_id",property = "columns",many = @Many(select = "com.ctsi.ssdc.customize.repository.CscpHxDformColumnRepository.selectByTableId",fetchType= FetchType.EAGER))
    })
    List<CscpHxDformTable> selectSubAllById(Long mainTableId);


    @Select({
            "select",
            "table_id, table_name, table_content, db_type, persistence_type, is_db_synch, ",
            "form_type, sub_table_name, sub_table_fk_name, package_name, gen_type, gen_path, ",
            "options, remark, form_suite, main_table_id",
            "from cscp_hx_dform_table",
            "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_content", property="tableContent", jdbcType=JdbcType.VARCHAR),
            @Result(column="db_type", property="dbType", jdbcType=JdbcType.INTEGER),
            @Result(column="persistence_type", property="persistenceType", jdbcType=JdbcType.INTEGER),
            @Result(column="is_db_synch", property="isDbSynch", jdbcType=JdbcType.INTEGER),
            @Result(column="form_type", property="formType", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="sub_table_fk_name", property="subTableFkName", jdbcType=JdbcType.VARCHAR),
            @Result(column="package_name", property="packageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="gen_type", property="genType", jdbcType=JdbcType.INTEGER),
            @Result(column="gen_path", property="genPath", jdbcType=JdbcType.VARCHAR),
            @Result(column="options", property="options", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_suite", property="formSuite", jdbcType=JdbcType.BIGINT),
            @Result(column="main_table_id", property="mainTableId", jdbcType=JdbcType.BIGINT),
            @Result(column = "table_id",property = "columns",many = @Many(select = "com.ctsi.ssdc.customize.repository.CscpHxDformColumnRepository.selectByTableId",fetchType= FetchType.EAGER))
    })
    CscpHxDformTable selectAllById(Long tableId);
}





