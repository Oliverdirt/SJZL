package com.ctsi.ssdc.customize.domain;

import com.ctsi.ssdc.criteria.*;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import org.apache.commons.lang3.StringUtils;

import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * CscpCustomizeVfieldExample
 *
 * @author hx
 * @date 2022-06-01 16:19:31
 */

public class CscpCustomizeVfieldPageExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private static final String LIKE_FORMAT = "%%%s%%";


    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_id
     *
     * @date 2022-06-01 16:19:31
     */
    private LongCriteria fieldId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.form_id
     *
     * @date 2022-06-01 16:19:31
     */
    private LongCriteria pageId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_name
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria fieldName;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_comment
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria fieldComment;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_query
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria fieldQuery;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.query_type
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria queryType;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.control_type
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria controlType;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_list
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria fieldList;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_width
     *
     * @date 2022-06-01 16:19:31
     */
    private DoubleCriteria fieldWidth;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_order
     *
     * @date 2022-06-01 16:19:31
     */
    private IntegerCriteria fieldOrder;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_dic
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria fieldDic;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_options
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria fieldOptions;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.tenant_id
     *
     * @date 2022-06-01 16:19:31
     */
    private LongCriteria tenantId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.created_time
     *
     * @date 2022-06-01 16:19:31
     */
    private ZonedDateTimeCriteria createdTime;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.created_by
     *
     * @date 2022-06-01 16:19:31
     */
    private LongCriteria createdBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.update_time
     *
     * @date 2022-06-01 16:19:31
     */
    private ZonedDateTimeCriteria updateTime;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.update_by
     *
     * @date 2022-06-01 16:19:31
     */
    private LongCriteria updateBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.del_flag
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria delFlag;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.status
     *
     * @date 2022-06-01 16:19:31
     */
    private StringCriteria status;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_customize_vfield.field_type
     *
     * @date 2022-06-01 16:19:31
     */
    private IntegerCriteria fieldType;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public CscpCustomizeVfieldPageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public LongCriteria getFieldId() {
        return fieldId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldId(LongCriteria fieldId) {
        this. fieldId = fieldId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldIdCriteria(Criteria criteria) {
        if (this.getFieldId() == null) {
            return;
        }
        if (this.getFieldId().getEquals() != null) {
            criteria.andFieldIdEqualTo(this.getFieldId().getEquals());
        } else {
            if (this.getFieldId().getGreaterOrEqualThan() != null) {
                criteria.andFieldIdGreaterThanOrEqualTo(this.getFieldId().getGreaterOrEqualThan());
            }
            if (this.getFieldId().getLessOrEqualThan() != null) {
                criteria.andFieldIdLessThanOrEqualTo(this.getFieldId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public LongCriteria getPageId() {
        return pageId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setPageId(LongCriteria pageId) {
        this. pageId = pageId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFormIdCriteria(Criteria criteria) {
        if (this.getPageId() == null) {
            return;
        }
        if (this.getPageId().getEquals() != null) {
            criteria.andFormIdEqualTo(this.getPageId().getEquals());
        } else {
            if (this.getPageId().getGreaterOrEqualThan() != null) {
                criteria.andFormIdGreaterThanOrEqualTo(this.getPageId().getGreaterOrEqualThan());
            }
            if (this.getPageId().getLessOrEqualThan() != null) {
                criteria.andFormIdLessThanOrEqualTo(this.getPageId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getFieldName() {
        return fieldName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldName(StringCriteria fieldName) {
        this. fieldName = fieldName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldNameCriteria(Criteria criteria) {
        if (this.getFieldName() == null) {
            return;
        }
        if (this.getFieldName().getEquals() != null) {
            criteria.andFieldNameEqualTo(this.getFieldName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldName().getContains())) {
                criteria.andFieldNameLike(String.format(LIKE_FORMAT, this.getFieldName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getFieldComment() {
        return fieldComment;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldComment(StringCriteria fieldComment) {
        this. fieldComment = fieldComment;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldCommentCriteria(Criteria criteria) {
        if (this.getFieldComment() == null) {
            return;
        }
        if (this.getFieldComment().getEquals() != null) {
            criteria.andFieldCommentEqualTo(this.getFieldComment().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldComment().getContains())) {
                criteria.andFieldCommentLike(String.format(LIKE_FORMAT, this.getFieldComment().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getFieldQuery() {
        return fieldQuery;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldQuery(StringCriteria fieldQuery) {
        this. fieldQuery = fieldQuery;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldQueryCriteria(Criteria criteria) {
        if (this.getFieldQuery() == null) {
            return;
        }
        if (this.getFieldQuery().getEquals() != null) {
            criteria.andFieldQueryEqualTo(this.getFieldQuery().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldQuery().getContains())) {
                criteria.andFieldQueryLike(String.format(LIKE_FORMAT, this.getFieldQuery().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getQueryType() {
        return queryType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setQueryType(StringCriteria queryType) {
        this. queryType = queryType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildQueryTypeCriteria(Criteria criteria) {
        if (this.getQueryType() == null) {
            return;
        }
        if (this.getQueryType().getEquals() != null) {
            criteria.andQueryTypeEqualTo(this.getQueryType().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getQueryType().getContains())) {
                criteria.andQueryTypeLike(String.format(LIKE_FORMAT, this.getQueryType().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getControlType() {
        return controlType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setControlType(StringCriteria controlType) {
        this. controlType = controlType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildControlTypeCriteria(Criteria criteria) {
        if (this.getControlType() == null) {
            return;
        }
        if (this.getControlType().getEquals() != null) {
            criteria.andControlTypeEqualTo(this.getControlType().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getControlType().getContains())) {
                criteria.andControlTypeLike(String.format(LIKE_FORMAT, this.getControlType().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getFieldList() {
        return fieldList;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldList(StringCriteria fieldList) {
        this. fieldList = fieldList;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldListCriteria(Criteria criteria) {
        if (this.getFieldList() == null) {
            return;
        }
        if (this.getFieldList().getEquals() != null) {
            criteria.andFieldListEqualTo(this.getFieldList().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldList().getContains())) {
                criteria.andFieldListLike(String.format(LIKE_FORMAT, this.getFieldList().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public DoubleCriteria getFieldWidth() {
        return fieldWidth;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldWidth(DoubleCriteria fieldWidth) {
        this. fieldWidth = fieldWidth;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldWidthCriteria(Criteria criteria) {
        if (this.getFieldWidth() == null) {
            return;
        }
        if (this.getFieldWidth().getEquals() != null) {
            criteria.andFieldWidthEqualTo(this.getFieldWidth().getEquals());
        } else {
            if (this.getFieldWidth().getGreaterOrEqualThan() != null) {
                criteria.andFieldWidthGreaterThanOrEqualTo(this.getFieldWidth().getGreaterOrEqualThan());
            }
            if (this.getFieldWidth().getLessOrEqualThan() != null) {
                criteria.andFieldWidthLessThanOrEqualTo(this.getFieldWidth().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public IntegerCriteria getFieldOrder() {
        return fieldOrder;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldOrder(IntegerCriteria fieldOrder) {
        this. fieldOrder = fieldOrder;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldOrderCriteria(Criteria criteria) {
        if (this.getFieldOrder() == null) {
            return;
        }
        if (this.getFieldOrder().getEquals() != null) {
            criteria.andFieldOrderEqualTo(this.getFieldOrder().getEquals());
        } else {
            if (this.getFieldOrder().getGreaterOrEqualThan() != null) {
                criteria.andFieldOrderGreaterThanOrEqualTo(this.getFieldOrder().getGreaterOrEqualThan());
            }
            if (this.getFieldOrder().getLessOrEqualThan() != null) {
                criteria.andFieldOrderLessThanOrEqualTo(this.getFieldOrder().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getFieldDic() {
        return fieldDic;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldDic(StringCriteria fieldDic) {
        this. fieldDic = fieldDic;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldDicCriteria(Criteria criteria) {
        if (this.getFieldDic() == null) {
            return;
        }
        if (this.getFieldDic().getEquals() != null) {
            criteria.andFieldDicEqualTo(this.getFieldDic().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldDic().getContains())) {
                criteria.andFieldDicLike(String.format(LIKE_FORMAT, this.getFieldDic().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getFieldOptions() {
        return fieldOptions;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldOptions(StringCriteria fieldOptions) {
        this. fieldOptions = fieldOptions;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldOptionsCriteria(Criteria criteria) {
        if (this.getFieldOptions() == null) {
            return;
        }
        if (this.getFieldOptions().getEquals() != null) {
            criteria.andFieldOptionsEqualTo(this.getFieldOptions().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldOptions().getContains())) {
                criteria.andFieldOptionsLike(String.format(LIKE_FORMAT, this.getFieldOptions().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public LongCriteria getTenantId() {
        return tenantId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setTenantId(LongCriteria tenantId) {
        this. tenantId = tenantId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildTenantIdCriteria(Criteria criteria) {
        if (this.getTenantId() == null) {
            return;
        }
        if (this.getTenantId().getEquals() != null) {
            criteria.andTenantIdEqualTo(this.getTenantId().getEquals());
        } else {
            if (this.getTenantId().getGreaterOrEqualThan() != null) {
                criteria.andTenantIdGreaterThanOrEqualTo(this.getTenantId().getGreaterOrEqualThan());
            }
            if (this.getTenantId().getLessOrEqualThan() != null) {
                criteria.andTenantIdLessThanOrEqualTo(this.getTenantId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public ZonedDateTimeCriteria getCreatedTime() {
        return createdTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setCreatedTime(ZonedDateTimeCriteria createdTime) {
        this. createdTime = createdTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildCreatedTimeCriteria(Criteria criteria) {
        if (this.getCreatedTime() == null) {
            return;
        }
        if (this.getCreatedTime().getEquals() != null) {
            criteria.andCreatedTimeEqualTo(this.getCreatedTime().getEquals());
        } else {
            if (this.getCreatedTime().getGreaterOrEqualThan() != null) {
                criteria.andCreatedTimeGreaterThanOrEqualTo(this.getCreatedTime().getGreaterOrEqualThan());
            }
            if (this.getCreatedTime().getLessOrEqualThan() != null) {
                criteria.andCreatedTimeLessThanOrEqualTo(this.getCreatedTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public LongCriteria getCreatedBy() {
        return createdBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setCreatedBy(LongCriteria createdBy) {
        this. createdBy = createdBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildCreatedByCriteria(Criteria criteria) {
        if (this.getCreatedBy() == null) {
            return;
        }
        if (this.getCreatedBy().getEquals() != null) {
            criteria.andCreatedByEqualTo(this.getCreatedBy().getEquals());
        } else {
            if (this.getCreatedBy().getGreaterOrEqualThan() != null) {
                criteria.andCreatedByGreaterThanOrEqualTo(this.getCreatedBy().getGreaterOrEqualThan());
            }
            if (this.getCreatedBy().getLessOrEqualThan() != null) {
                criteria.andCreatedByLessThanOrEqualTo(this.getCreatedBy().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public ZonedDateTimeCriteria getUpdateTime() {
        return updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setUpdateTime(ZonedDateTimeCriteria updateTime) {
        this. updateTime = updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildUpdateTimeCriteria(Criteria criteria) {
        if (this.getUpdateTime() == null) {
            return;
        }
        if (this.getUpdateTime().getEquals() != null) {
            criteria.andUpdateTimeEqualTo(this.getUpdateTime().getEquals());
        } else {
            if (this.getUpdateTime().getGreaterOrEqualThan() != null) {
                criteria.andUpdateTimeGreaterThanOrEqualTo(this.getUpdateTime().getGreaterOrEqualThan());
            }
            if (this.getUpdateTime().getLessOrEqualThan() != null) {
                criteria.andUpdateTimeLessThanOrEqualTo(this.getUpdateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public LongCriteria getUpdateBy() {
        return updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setUpdateBy(LongCriteria updateBy) {
        this. updateBy = updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildUpdateByCriteria(Criteria criteria) {
        if (this.getUpdateBy() == null) {
            return;
        }
        if (this.getUpdateBy().getEquals() != null) {
            criteria.andUpdateByEqualTo(this.getUpdateBy().getEquals());
        } else {
            if (this.getUpdateBy().getGreaterOrEqualThan() != null) {
                criteria.andUpdateByGreaterThanOrEqualTo(this.getUpdateBy().getGreaterOrEqualThan());
            }
            if (this.getUpdateBy().getLessOrEqualThan() != null) {
                criteria.andUpdateByLessThanOrEqualTo(this.getUpdateBy().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getDelFlag() {
        return delFlag;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setDelFlag(StringCriteria delFlag) {
        this. delFlag = delFlag;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildDelFlagCriteria(Criteria criteria) {
        if (this.getDelFlag() == null) {
            return;
        }
        if (this.getDelFlag().getEquals() != null) {
            criteria.andDelFlagEqualTo(this.getDelFlag().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getDelFlag().getContains())) {
                criteria.andDelFlagLike(String.format(LIKE_FORMAT, this.getDelFlag().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public StringCriteria getStatus() {
        return status;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setStatus(StringCriteria status) {
        this. status = status;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildStatusCriteria(Criteria criteria) {
        if (this.getStatus() == null) {
            return;
        }
        if (this.getStatus().getEquals() != null) {
            criteria.andStatusEqualTo(this.getStatus().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getStatus().getContains())) {
                criteria.andStatusLike(String.format(LIKE_FORMAT, this.getStatus().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public IntegerCriteria getFieldType() {
        return fieldType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public void setFieldType(IntegerCriteria fieldType) {
        this. fieldType = fieldType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    private void buildFieldTypeCriteria(Criteria criteria) {
        if (this.getFieldType() == null) {
            return;
        }
        if (this.getFieldType().getEquals() != null) {
            criteria.andFieldTypeEqualTo(this.getFieldType().getEquals());
        } else {
            if (this.getFieldType().getGreaterOrEqualThan() != null) {
                criteria.andFieldTypeGreaterThanOrEqualTo(this.getFieldType().getGreaterOrEqualThan());
            }
            if (this.getFieldType().getLessOrEqualThan() != null) {
                criteria.andFieldTypeLessThanOrEqualTo(this.getFieldType().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_form_column
     *
     * @date Thu Feb 17 14:02:06 CST 2022
     */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildFieldIdCriteria(criteria);
        this.buildFormIdCriteria(criteria);
        this.buildFieldNameCriteria(criteria);
        this.buildFieldCommentCriteria(criteria);
        this.buildFieldQueryCriteria(criteria);
        this.buildQueryTypeCriteria(criteria);
        this.buildControlTypeCriteria(criteria);
        this.buildFieldListCriteria(criteria);
        this.buildFieldWidthCriteria(criteria);
        this.buildFieldOrderCriteria(criteria);
        this.buildFieldDicCriteria(criteria);
        this.buildFieldOptionsCriteria(criteria);
        this.buildTenantIdCriteria(criteria);
        this.buildCreatedTimeCriteria(criteria);
        this.buildCreatedByCriteria(criteria);
        this.buildUpdateTimeCriteria(criteria);
        this.buildUpdateByCriteria(criteria);
        this.buildDelFlagCriteria(criteria);
        this.buildStatusCriteria(criteria);
        this.buildFieldTypeCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andFieldIdIsNull() {
            addCriterion("field_id is null");
            return (Criteria) this;
        }

        public Criteria andFieldIdIsNotNull() {
            addCriterion("field_id is not null");
            return (Criteria) this;
        }

        public Criteria andFieldIdEqualTo(Long value) {
            addCriterion("field_id =", value, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdNotEqualTo(Long value) {
            addCriterion("field_id <>", value, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdGreaterThan(Long value) {
            addCriterion("field_id >", value, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdGreaterThanOrEqualTo(Long value) {
            addCriterion("field_id >=", value, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdLessThan(Long value) {
            addCriterion("field_id <", value, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdLessThanOrEqualTo(Long value) {
            addCriterion("field_id <=", value, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdIn(List<Long> values) {
            addCriterion("field_id in", values, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdNotIn(List<Long> values) {
            addCriterion("field_id not in", values, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdBetween(Long value1, Long value2) {
            addCriterion("field_id between", value1, value2, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFieldIdNotBetween(Long value1, Long value2) {
            addCriterion("field_id not between", value1, value2, "fieldId");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNull() {
            addCriterion("form_id is null");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNotNull() {
            addCriterion("form_id is not null");
            return (Criteria) this;
        }

        public Criteria andFormIdEqualTo(Long value) {
            addCriterion("form_id =", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotEqualTo(Long value) {
            addCriterion("form_id <>", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThan(Long value) {
            addCriterion("form_id >", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThanOrEqualTo(Long value) {
            addCriterion("form_id >=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThan(Long value) {
            addCriterion("form_id <", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThanOrEqualTo(Long value) {
            addCriterion("form_id <=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdIn(List<Long> values) {
            addCriterion("form_id in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotIn(List<Long> values) {
            addCriterion("form_id not in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdBetween(Long value1, Long value2) {
            addCriterion("form_id between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotBetween(Long value1, Long value2) {
            addCriterion("form_id not between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andFieldNameIsNull() {
            addCriterion("field_name is null");
            return (Criteria) this;
        }

        public Criteria andFieldNameIsNotNull() {
            addCriterion("field_name is not null");
            return (Criteria) this;
        }

        public Criteria andFieldNameEqualTo(String value) {
            addCriterion("field_name =", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotEqualTo(String value) {
            addCriterion("field_name <>", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameGreaterThan(String value) {
            addCriterion("field_name >", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameGreaterThanOrEqualTo(String value) {
            addCriterion("field_name >=", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLessThan(String value) {
            addCriterion("field_name <", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLessThanOrEqualTo(String value) {
            addCriterion("field_name <=", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLike(String value) {
            addCriterion("field_name like", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotLike(String value) {
            addCriterion("field_name not like", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameIn(List<String> values) {
            addCriterion("field_name in", values, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotIn(List<String> values) {
            addCriterion("field_name not in", values, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameBetween(String value1, String value2) {
            addCriterion("field_name between", value1, value2, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotBetween(String value1, String value2) {
            addCriterion("field_name not between", value1, value2, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldCommentIsNull() {
            addCriterion("field_comment is null");
            return (Criteria) this;
        }

        public Criteria andFieldCommentIsNotNull() {
            addCriterion("field_comment is not null");
            return (Criteria) this;
        }

        public Criteria andFieldCommentEqualTo(String value) {
            addCriterion("field_comment =", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentNotEqualTo(String value) {
            addCriterion("field_comment <>", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentGreaterThan(String value) {
            addCriterion("field_comment >", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentGreaterThanOrEqualTo(String value) {
            addCriterion("field_comment >=", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentLessThan(String value) {
            addCriterion("field_comment <", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentLessThanOrEqualTo(String value) {
            addCriterion("field_comment <=", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentLike(String value) {
            addCriterion("field_comment like", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentNotLike(String value) {
            addCriterion("field_comment not like", value, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentIn(List<String> values) {
            addCriterion("field_comment in", values, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentNotIn(List<String> values) {
            addCriterion("field_comment not in", values, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentBetween(String value1, String value2) {
            addCriterion("field_comment between", value1, value2, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldCommentNotBetween(String value1, String value2) {
            addCriterion("field_comment not between", value1, value2, "fieldComment");
            return (Criteria) this;
        }

        public Criteria andFieldQueryIsNull() {
            addCriterion("field_query is null");
            return (Criteria) this;
        }

        public Criteria andFieldQueryIsNotNull() {
            addCriterion("field_query is not null");
            return (Criteria) this;
        }

        public Criteria andFieldQueryEqualTo(String value) {
            addCriterion("field_query =", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryNotEqualTo(String value) {
            addCriterion("field_query <>", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryGreaterThan(String value) {
            addCriterion("field_query >", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryGreaterThanOrEqualTo(String value) {
            addCriterion("field_query >=", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryLessThan(String value) {
            addCriterion("field_query <", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryLessThanOrEqualTo(String value) {
            addCriterion("field_query <=", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryLike(String value) {
            addCriterion("field_query like", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryNotLike(String value) {
            addCriterion("field_query not like", value, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryIn(List<String> values) {
            addCriterion("field_query in", values, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryNotIn(List<String> values) {
            addCriterion("field_query not in", values, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryBetween(String value1, String value2) {
            addCriterion("field_query between", value1, value2, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andFieldQueryNotBetween(String value1, String value2) {
            addCriterion("field_query not between", value1, value2, "fieldQuery");
            return (Criteria) this;
        }

        public Criteria andQueryTypeIsNull() {
            addCriterion("query_type is null");
            return (Criteria) this;
        }

        public Criteria andQueryTypeIsNotNull() {
            addCriterion("query_type is not null");
            return (Criteria) this;
        }

        public Criteria andQueryTypeEqualTo(String value) {
            addCriterion("query_type =", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeNotEqualTo(String value) {
            addCriterion("query_type <>", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeGreaterThan(String value) {
            addCriterion("query_type >", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeGreaterThanOrEqualTo(String value) {
            addCriterion("query_type >=", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeLessThan(String value) {
            addCriterion("query_type <", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeLessThanOrEqualTo(String value) {
            addCriterion("query_type <=", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeLike(String value) {
            addCriterion("query_type like", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeNotLike(String value) {
            addCriterion("query_type not like", value, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeIn(List<String> values) {
            addCriterion("query_type in", values, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeNotIn(List<String> values) {
            addCriterion("query_type not in", values, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeBetween(String value1, String value2) {
            addCriterion("query_type between", value1, value2, "queryType");
            return (Criteria) this;
        }

        public Criteria andQueryTypeNotBetween(String value1, String value2) {
            addCriterion("query_type not between", value1, value2, "queryType");
            return (Criteria) this;
        }

        public Criteria andControlTypeIsNull() {
            addCriterion("control_type is null");
            return (Criteria) this;
        }

        public Criteria andControlTypeIsNotNull() {
            addCriterion("control_type is not null");
            return (Criteria) this;
        }

        public Criteria andControlTypeEqualTo(String value) {
            addCriterion("control_type =", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeNotEqualTo(String value) {
            addCriterion("control_type <>", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeGreaterThan(String value) {
            addCriterion("control_type >", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeGreaterThanOrEqualTo(String value) {
            addCriterion("control_type >=", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeLessThan(String value) {
            addCriterion("control_type <", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeLessThanOrEqualTo(String value) {
            addCriterion("control_type <=", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeLike(String value) {
            addCriterion("control_type like", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeNotLike(String value) {
            addCriterion("control_type not like", value, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeIn(List<String> values) {
            addCriterion("control_type in", values, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeNotIn(List<String> values) {
            addCriterion("control_type not in", values, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeBetween(String value1, String value2) {
            addCriterion("control_type between", value1, value2, "controlType");
            return (Criteria) this;
        }

        public Criteria andControlTypeNotBetween(String value1, String value2) {
            addCriterion("control_type not between", value1, value2, "controlType");
            return (Criteria) this;
        }

        public Criteria andFieldListIsNull() {
            addCriterion("field_list is null");
            return (Criteria) this;
        }

        public Criteria andFieldListIsNotNull() {
            addCriterion("field_list is not null");
            return (Criteria) this;
        }

        public Criteria andFieldListEqualTo(String value) {
            addCriterion("field_list =", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListNotEqualTo(String value) {
            addCriterion("field_list <>", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListGreaterThan(String value) {
            addCriterion("field_list >", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListGreaterThanOrEqualTo(String value) {
            addCriterion("field_list >=", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListLessThan(String value) {
            addCriterion("field_list <", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListLessThanOrEqualTo(String value) {
            addCriterion("field_list <=", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListLike(String value) {
            addCriterion("field_list like", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListNotLike(String value) {
            addCriterion("field_list not like", value, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListIn(List<String> values) {
            addCriterion("field_list in", values, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListNotIn(List<String> values) {
            addCriterion("field_list not in", values, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListBetween(String value1, String value2) {
            addCriterion("field_list between", value1, value2, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldListNotBetween(String value1, String value2) {
            addCriterion("field_list not between", value1, value2, "fieldList");
            return (Criteria) this;
        }

        public Criteria andFieldWidthIsNull() {
            addCriterion("field_width is null");
            return (Criteria) this;
        }

        public Criteria andFieldWidthIsNotNull() {
            addCriterion("field_width is not null");
            return (Criteria) this;
        }

        public Criteria andFieldWidthEqualTo(Double value) {
            addCriterion("field_width =", value, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthNotEqualTo(Double value) {
            addCriterion("field_width <>", value, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthGreaterThan(Double value) {
            addCriterion("field_width >", value, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthGreaterThanOrEqualTo(Double value) {
            addCriterion("field_width >=", value, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthLessThan(Double value) {
            addCriterion("field_width <", value, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthLessThanOrEqualTo(Double value) {
            addCriterion("field_width <=", value, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthIn(List<Double> values) {
            addCriterion("field_width in", values, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthNotIn(List<Double> values) {
            addCriterion("field_width not in", values, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthBetween(Double value1, Double value2) {
            addCriterion("field_width between", value1, value2, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldWidthNotBetween(Double value1, Double value2) {
            addCriterion("field_width not between", value1, value2, "fieldWidth");
            return (Criteria) this;
        }

        public Criteria andFieldOrderIsNull() {
            addCriterion("field_order is null");
            return (Criteria) this;
        }

        public Criteria andFieldOrderIsNotNull() {
            addCriterion("field_order is not null");
            return (Criteria) this;
        }

        public Criteria andFieldOrderEqualTo(Integer value) {
            addCriterion("field_order =", value, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderNotEqualTo(Integer value) {
            addCriterion("field_order <>", value, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderGreaterThan(Integer value) {
            addCriterion("field_order >", value, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderGreaterThanOrEqualTo(Integer value) {
            addCriterion("field_order >=", value, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderLessThan(Integer value) {
            addCriterion("field_order <", value, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderLessThanOrEqualTo(Integer value) {
            addCriterion("field_order <=", value, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderIn(List<Integer> values) {
            addCriterion("field_order in", values, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderNotIn(List<Integer> values) {
            addCriterion("field_order not in", values, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderBetween(Integer value1, Integer value2) {
            addCriterion("field_order between", value1, value2, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldOrderNotBetween(Integer value1, Integer value2) {
            addCriterion("field_order not between", value1, value2, "fieldOrder");
            return (Criteria) this;
        }

        public Criteria andFieldDicIsNull() {
            addCriterion("field_dic is null");
            return (Criteria) this;
        }

        public Criteria andFieldDicIsNotNull() {
            addCriterion("field_dic is not null");
            return (Criteria) this;
        }

        public Criteria andFieldDicEqualTo(String value) {
            addCriterion("field_dic =", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicNotEqualTo(String value) {
            addCriterion("field_dic <>", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicGreaterThan(String value) {
            addCriterion("field_dic >", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicGreaterThanOrEqualTo(String value) {
            addCriterion("field_dic >=", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicLessThan(String value) {
            addCriterion("field_dic <", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicLessThanOrEqualTo(String value) {
            addCriterion("field_dic <=", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicLike(String value) {
            addCriterion("field_dic like", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicNotLike(String value) {
            addCriterion("field_dic not like", value, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicIn(List<String> values) {
            addCriterion("field_dic in", values, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicNotIn(List<String> values) {
            addCriterion("field_dic not in", values, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicBetween(String value1, String value2) {
            addCriterion("field_dic between", value1, value2, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldDicNotBetween(String value1, String value2) {
            addCriterion("field_dic not between", value1, value2, "fieldDic");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsIsNull() {
            addCriterion("field_options is null");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsIsNotNull() {
            addCriterion("field_options is not null");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsEqualTo(String value) {
            addCriterion("field_options =", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsNotEqualTo(String value) {
            addCriterion("field_options <>", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsGreaterThan(String value) {
            addCriterion("field_options >", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsGreaterThanOrEqualTo(String value) {
            addCriterion("field_options >=", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsLessThan(String value) {
            addCriterion("field_options <", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsLessThanOrEqualTo(String value) {
            addCriterion("field_options <=", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsLike(String value) {
            addCriterion("field_options like", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsNotLike(String value) {
            addCriterion("field_options not like", value, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsIn(List<String> values) {
            addCriterion("field_options in", values, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsNotIn(List<String> values) {
            addCriterion("field_options not in", values, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsBetween(String value1, String value2) {
            addCriterion("field_options between", value1, value2, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andFieldOptionsNotBetween(String value1, String value2) {
            addCriterion("field_options not between", value1, value2, "fieldOptions");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(Long value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(Long value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(Long value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(Long value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(Long value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(Long value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<Long> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<Long> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(Long value1, Long value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(Long value1, Long value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIsNull() {
            addCriterion("created_time is null");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIsNotNull() {
            addCriterion("created_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeEqualTo(ZonedDateTime value) {
            addCriterion("created_time =", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("created_time <>", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeGreaterThan(ZonedDateTime value) {
            addCriterion("created_time >", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("created_time >=", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeLessThan(ZonedDateTime value) {
            addCriterion("created_time <", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("created_time <=", value, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeIn(List<ZonedDateTime> values) {
            addCriterion("created_time in", values, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("created_time not in", values, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("created_time between", value1, value2, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("created_time not between", value1, value2, "createdTime");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("created_by is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("created_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(Long value) {
            addCriterion("created_by =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(Long value) {
            addCriterion("created_by <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(Long value) {
            addCriterion("created_by >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("created_by >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(Long value) {
            addCriterion("created_by <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(Long value) {
            addCriterion("created_by <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<Long> values) {
            addCriterion("created_by in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<Long> values) {
            addCriterion("created_by not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(Long value1, Long value2) {
            addCriterion("created_by between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(Long value1, Long value2) {
            addCriterion("created_by not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(ZonedDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(ZonedDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<ZonedDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(Long value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(Long value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(Long value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(Long value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(Long value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(Long value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<Long> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<Long> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(Long value1, Long value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(Long value1, Long value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andDelFlagIsNull() {
            addCriterion("del_flag is null");
            return (Criteria) this;
        }

        public Criteria andDelFlagIsNotNull() {
            addCriterion("del_flag is not null");
            return (Criteria) this;
        }

        public Criteria andDelFlagEqualTo(String value) {
            addCriterion("del_flag =", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagNotEqualTo(String value) {
            addCriterion("del_flag <>", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagGreaterThan(String value) {
            addCriterion("del_flag >", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagGreaterThanOrEqualTo(String value) {
            addCriterion("del_flag >=", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagLessThan(String value) {
            addCriterion("del_flag <", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagLessThanOrEqualTo(String value) {
            addCriterion("del_flag <=", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagLike(String value) {
            addCriterion("del_flag like", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagNotLike(String value) {
            addCriterion("del_flag not like", value, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagIn(List<String> values) {
            addCriterion("del_flag in", values, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagNotIn(List<String> values) {
            addCriterion("del_flag not in", values, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagBetween(String value1, String value2) {
            addCriterion("del_flag between", value1, value2, "delFlag");
            return (Criteria) this;
        }

        public Criteria andDelFlagNotBetween(String value1, String value2) {
            addCriterion("del_flag not between", value1, value2, "delFlag");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andFieldTypeIsNull() {
            addCriterion("field_type is null");
            return (Criteria) this;
        }

        public Criteria andFieldTypeIsNotNull() {
            addCriterion("field_type is not null");
            return (Criteria) this;
        }

        public Criteria andFieldTypeEqualTo(Integer value) {
            addCriterion("field_type =", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeNotEqualTo(Integer value) {
            addCriterion("field_type <>", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeGreaterThan(Integer value) {
            addCriterion("field_type >", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("field_type >=", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeLessThan(Integer value) {
            addCriterion("field_type <", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeLessThanOrEqualTo(Integer value) {
            addCriterion("field_type <=", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeIn(List<Integer> values) {
            addCriterion("field_type in", values, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeNotIn(List<Integer> values) {
            addCriterion("field_type not in", values, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeBetween(Integer value1, Integer value2) {
            addCriterion("field_type between", value1, value2, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("field_type not between", value1, value2, "fieldType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_customize_vfield
     *
     * @date do_not_delete_during_merge 2022-06-01 16:19:31
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_customize_vfield
     *
     * @date 2022-06-01 16:19:31
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
