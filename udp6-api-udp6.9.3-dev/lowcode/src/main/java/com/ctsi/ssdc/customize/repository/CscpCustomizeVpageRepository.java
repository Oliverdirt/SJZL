package com.ctsi.ssdc.customize.repository;


import com.ctsi.ssdc.customize.domain.CscpCustomizeVfieldPage;
import com.ctsi.ssdc.customize.domain.CscpCustomizeVpage;
import com.ctsi.ssdc.customize.domain.CscpCustomizeVpageExample;
import com.ctsi.ssdc.customize.domain.CscpHxDformColumn;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

/**
 * CscpCustomizeVpageRepository
 *
 * @author hx
 * @date 2022-09-01 14:40:59
 */

@Mapper
public interface CscpCustomizeVpageRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpCustomizeVpage, Long, CscpCustomizeVpageExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @SelectProvider(type= CscpCustomizeVpageSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpCustomizeVpageExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @DeleteProvider(type= CscpCustomizeVpageSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpCustomizeVpageExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @Delete({
            "delete from cscp_customize_vpage",
            "where page_id = #{pageId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long pageId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     *
     * @date 2022-09-01 14:40:59
     */
    @Insert({
            "insert into cscp_customize_vpage (",
            "page_id,",
            "module_id,",
            "page_name,",
            "page_type,",
            "page_database,",
            "page_table,",
            "page_json,",
            "page_option,",
            "created_by,",
            "created_time,",
            "update_by,",
            "update_time,",
            "tenant_id,",
            "del_flag,",
            "status,",
            "table_type,",
            "main_page_id,",
            "sort_num,",
            "sub_page_fk,",
            "table_desc,",
            "model_id,",
            "model_name,",
            "module_name",
            ") values (",
            "#{pageId,jdbcType=BIGINT}, ",
            "#{moduleId,jdbcType=BIGINT}, ",
            "#{pageName,jdbcType=VARCHAR}, ",
            "#{pageType,jdbcType=VARCHAR}, ",
            "#{pageDatabase,jdbcType=VARCHAR}, ",
            "#{pageTable,jdbcType=VARCHAR}, ",
            "#{pageJson,jdbcType=VARCHAR}, ",
            "#{pageOption,jdbcType=VARCHAR}, ",
            "#{createdBy,jdbcType=BIGINT}, ",
            "#{createdTime,jdbcType=DATE}, ",
            "#{updateBy,jdbcType=BIGINT}, ",
            "#{updateTime,jdbcType=DATE}, ",
            "#{tenantId,jdbcType=BIGINT}, ",
            "#{delFlag,jdbcType=VARCHAR}, ",
            "#{status,jdbcType=VARCHAR}, ",
            "#{tableType,jdbcType=VARCHAR}, ",
            "#{mainPageId,jdbcType=BIGINT}, ",
            "#{sortNum,jdbcType=INTEGER}, ",
            "#{subPageFk,jdbcType=VARCHAR}, ",
            "#{tableDesc,jdbcType=VARCHAR},",
            "#{modelId,jdbcType=BIGINT}, ",
            "#{modelName,jdbcType=VARCHAR}, ",
            "#{moduleName,jdbcType=VARCHAR} ",
            ")"

    })
    @Override
    int insert(CscpCustomizeVpage record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @InsertProvider(type=CscpCustomizeVpageSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpCustomizeVpage record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @SelectProvider(type=CscpCustomizeVpageSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="page_id", property="pageId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="module_id", property="moduleId", jdbcType=JdbcType.BIGINT),
            @Result(column="page_name", property="pageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_type", property="pageType", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_database", property="pageDatabase", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_table", property="pageTable", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_json", property="pageJson", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_option", property="pageOption", jdbcType=JdbcType.VARCHAR),
            @Result(column="created_by", property="createdBy", jdbcType=JdbcType.BIGINT),
            @Result(column="created_time", property="createdTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.BIGINT),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
            @Result(column="del_flag", property="delFlag", jdbcType=JdbcType.VARCHAR),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_type", property="tableType", jdbcType=JdbcType.VARCHAR),
            @Result(column="main_page_id", property="mainPageId", jdbcType=JdbcType.BIGINT),
            @Result(column="sort_num", property="sortNum", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_page_fk", property="subPageFk", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_desc", property="tableDesc", jdbcType=JdbcType.VARCHAR),
            @Result(column="model_id", property="modelId", jdbcType=JdbcType.BIGINT),
            @Result(column="model_name", property="modelName", jdbcType=JdbcType.VARCHAR),
            @Result(column="module_name", property="moduleName", jdbcType=JdbcType.VARCHAR),
    })

    @Override
    List<CscpCustomizeVpage> selectByExample(CscpCustomizeVpageExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @Select({
            "select",
            "page_id,",
            "module_id,",
            "page_name,",
            "page_type,",
            "page_database,",
            "page_table,",
            "page_json,",
            "page_option,",
            "created_by,",
            "created_time,",
            "update_by,",
            "update_time,",
            "tenant_id,",
            "del_flag,",
            "status,",
            "table_type,",
            "main_page_id,",
            "sort_num,",
            "sub_page_fk,",
            "table_desc,",
            "model_id,",
            "model_name,",
            "module_name ",
            "from cscp_customize_vpage",
            "where page_id = #{pageId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="page_id", property="pageId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="module_id", property="moduleId", jdbcType=JdbcType.BIGINT),
            @Result(column="page_name", property="pageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_type", property="pageType", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_database", property="pageDatabase", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_table", property="pageTable", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_json", property="pageJson", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_option", property="pageOption", jdbcType=JdbcType.VARCHAR),
            @Result(column="created_by", property="createdBy", jdbcType=JdbcType.BIGINT),
            @Result(column="created_time", property="createdTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.BIGINT),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
            @Result(column="del_flag", property="delFlag", jdbcType=JdbcType.VARCHAR),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_type", property="tableType", jdbcType=JdbcType.VARCHAR),
            @Result(column="main_page_id", property="mainPageId", jdbcType=JdbcType.BIGINT),
            @Result(column="sort_num", property="sortNum", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_page_fk", property="subPageFk", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_desc", property="tableDesc", jdbcType=JdbcType.VARCHAR),
            @Result(column="model_id", property="moduleId", jdbcType=JdbcType.BIGINT),
            @Result(column="model_name", property="pageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="module_name", property="pageName", jdbcType=JdbcType.VARCHAR)

    })
    @Override
    CscpCustomizeVpage selectByPrimaryKey(Long pageId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @UpdateProvider(type=CscpCustomizeVpageSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpCustomizeVpage record, @Param("example") CscpCustomizeVpageExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @UpdateProvider(type=CscpCustomizeVpageSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpCustomizeVpage record, @Param("example") CscpCustomizeVpageExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     *@date 2022-09-01 14:40:59
     */
    @UpdateProvider(type=CscpCustomizeVpageSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpCustomizeVpage record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_customize_vpage
     *
     * @date 2022-09-01 14:40:59
     */
    @Update({
            "update cscp_customize_vpage",
            "set ",
            "page_id = #{pageId,jdbcType=BIGINT},",
            "model_id = #{modelId,jdbcType=BIGINT},",
            "module_id = #{moduleId,jdbcType=BIGINT},",
            "page_name = #{pageName,jdbcType=VARCHAR},",
            "model_name = #{modelName,jdbcType=VARCHAR},",
            "module_name = #{moduleName,jdbcType=VARCHAR},",
            "page_type = #{pageType,jdbcType=VARCHAR},",
            "page_database = #{pageDatabase,jdbcType=VARCHAR},",
            "page_table = #{pageTable,jdbcType=VARCHAR},",
            "page_json = #{pageJson,jdbcType=VARCHAR},",
            "page_option = #{pageOption,jdbcType=VARCHAR},",
            "created_by = #{createdBy,jdbcType=BIGINT},",
            "created_time = #{createdTime,jdbcType=DATE},",
            "update_by = #{updateBy,jdbcType=BIGINT},",
            "update_time = #{updateTime,jdbcType=DATE},",
            "tenant_id = #{tenantId,jdbcType=BIGINT},",
            "del_flag = #{delFlag,jdbcType=VARCHAR},",
            "status = #{status,jdbcType=VARCHAR},",
            "table_type = #{tableType,jdbcType=VARCHAR},",
            "main_page_id = #{mainPageId,jdbcType=BIGINT},",
            "sort_num = #{sortNum,jdbcType=INTEGER},",
            "sub_page_fk = #{subPageFk,jdbcType=VARCHAR},",
            "table_desc = #{tableDesc,jdbcType=VARCHAR}",
            "where page_id = #{pageId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpCustomizeVpage record);

    /**
     * 批量删除
     * @param pageIds
     */
    @Delete("<script>" +
            "delete from cscp_customize_vpage where page_id in" +
            "<foreach collection=\"pageIds\" item=\"pageId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{pageId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("pageIds") List<Long> pageIds);

    /**
     * 根据module_id批量删除
     * @param moduleIds
     */
    @Delete("<script>" +
            "delete from cscp_customize_vpage where module_id in" +
            "<foreach collection=\"moduleIds\" item=\"moduleId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{moduleId}" +
            "</foreach>" +
            "</script>")
    void deleteByModuleIds(@Param("moduleIds") List<Long> moduleIds);


    @Select({
            "<script>",
            "select",
            "page_id,",
            "page_name,",
            "page_database,",
            "page_table,",
            "page_json,",
            "page_option,",
            "created_by,",
            "created_time,",
            "update_by,",
            "update_time,",
            "tenant_id,",
            "del_flag,",
            "status,",
            "page_type,",
            "main_page_id,",
            "sort_num,",
            "sub_page_fk,",
            "table_desc",
            "from cscp_customize_vpage where main_page_id in " ,
            "<foreach collection=\"mainPageIds\" item=\"mainPageId\" open=\"(\" separator=\",\" close=\")\">" ,
            "#{mainPageId} ",
            "</foreach>" ,
            "ORDER BY sort_num",
            "</script>"
    })
    @Results(id="pages",value={@Result(column="page_id", property="pageId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="page_name", property="pageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_database", property="fpageDatabase", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_table", property="pageTable", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_json", property="pageJson", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_option", property="pageOption", jdbcType=JdbcType.VARCHAR),
            @Result(column="created_by", property="createdBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="created_time", property="createdTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
            @Result(column="del_flag", property="delFlag", jdbcType=JdbcType.VARCHAR),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="page_type", property="pageType", jdbcType=JdbcType.VARCHAR),
            @Result(column="main_page_id", property="mainPageId", jdbcType=JdbcType.BIGINT),
            @Result(column="sort_num", property="sortNum", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_page_fk", property="subPageFk", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_desc", property="tableDesc", jdbcType=JdbcType.VARCHAR)})
    List<CscpCustomizeVpage> getCscpCustomizeVpagesByMainPageIds(@Param("mainPageIds") List<Long> mainPageIds);



    @Select({
            "select",
            "tb.table_name,",
            "dc.column_id,",
            "dc.table_id,",
            "dc.column_name,",
            "dc.column_name_old,",
            "dc.column_comment,",
            "dc.column_type,",
            "dc.column_length,",
            "dc.point_length,",
            "dc.is_pk,",
            "dc.default_value,",
            "dc.is_null,",
            "dc.order_num,",
            "dc.is_form,",
            "dc.is_list,",
            "dc.is_query,",
            "dc.show_type,",
            "dc.query_type,",
            "dc.control_length,",
            "dc.dic_code,",
            "dc.validate_rule,",
            "dc.is_fk,",
            "dc.column_relation,",
            "dc.is_bk ",
            "from cscp_customize_vpage pg, " +
                 "cscp_customize_model md, " +
                 "cscp_hx_dform_table  tb, " +
                 "cscp_hx_dform_column dc ",
            "where pg.model_id = md.model_id " +
                    "and   md.table_id = tb.main_table_id " +
                    "and   pg.page_table = tb.table_name " +
                    "and   tb.table_id = dc.table_id " +
                    "and pg.page_id = #{pageId,jdbcType=BIGINT}"
    })
    @Results(id="columnsMap",value = {
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_id", property="columnId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT),
            @Result(column="column_name", property="columnName", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_name_old", property="columnNameOld", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_comment", property="columnComment", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_type", property="columnType", jdbcType=JdbcType.BIGINT),
            @Result(column="column_length", property="columnLength", jdbcType=JdbcType.BIGINT),
            @Result(column="point_length", property="pointLength", jdbcType=JdbcType.BIGINT),
            @Result(column="is_pk", property="isPk", jdbcType=JdbcType.BIGINT),
            @Result(column="default_value", property="defaultValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_null", property="isNull", jdbcType=JdbcType.BIGINT),
            @Result(column="order_num", property="orderNum", jdbcType=JdbcType.BIGINT),
            @Result(column="is_form", property="isForm", jdbcType=JdbcType.BIGINT),
            @Result(column="is_list", property="isList", jdbcType=JdbcType.BIGINT),
            @Result(column="is_query", property="isQuery", jdbcType=JdbcType.BIGINT),
            @Result(column="show_type", property="showType", jdbcType=JdbcType.BIGINT),
            @Result(column="query_type", property="queryType", jdbcType=JdbcType.BIGINT),
            @Result(column="control_length", property="controlLength", jdbcType=JdbcType.BIGINT),
            @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="validate_rule", property="validateRule", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_fk", property="isFk", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_relation", property="columnRelation", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_bk", property="isBk", jdbcType=JdbcType.VARCHAR)

    })
    List<CscpHxDformColumn> selectColumnByPageId(Long pageId);

    @Select({
            "<script>",
            "select",
            "tb.table_name,",
            "dc.column_id,",
            "dc.table_id,",
            "dc.column_name,",
            "dc.column_name_old,",
            "dc.column_comment,",
            "dc.column_type,",
            "dc.column_length,",
            "dc.point_length,",
            "dc.is_pk,",
            "dc.default_value,",
            "dc.is_null,",
            "dc.order_num,",
            "dc.is_form,",
            "dc.is_list,",
            "dc.is_query,",
            "dc.show_type,",
            "dc.query_type,",
            "dc.control_length,",
            "dc.dic_code,",
            "dc.validate_rule,",
            "dc.is_fk,",
            "dc.column_relation,",
            "dc.is_bk ",
            "from  cscp_hx_dform_table tb ," +
                    "cscp_hx_dform_column dc ",
            "where 1 = 1 " +
             "and   tb.table_id = dc.table_id " +
             "and tb.table_name in "+
             "<foreach collection=\"tableNames\" item=\"tableName\" open=\"(\" separator=\",\" close=\")\">" ,
                 "#{tableName} ",
              "</foreach>" ,
            "</script>"
    })
    @Results(id="columnssMap",value = {
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_id", property="columnId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT),
            @Result(column="column_name", property="columnName", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_name_old", property="columnNameOld", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_comment", property="columnComment", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_type", property="columnType", jdbcType=JdbcType.BIGINT),
            @Result(column="column_length", property="columnLength", jdbcType=JdbcType.BIGINT),
            @Result(column="point_length", property="pointLength", jdbcType=JdbcType.BIGINT),
            @Result(column="is_pk", property="isPk", jdbcType=JdbcType.BIGINT),
            @Result(column="default_value", property="defaultValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_null", property="isNull", jdbcType=JdbcType.BIGINT),
            @Result(column="order_num", property="orderNum", jdbcType=JdbcType.BIGINT),
            @Result(column="is_form", property="isForm", jdbcType=JdbcType.BIGINT),
            @Result(column="is_list", property="isList", jdbcType=JdbcType.BIGINT),
            @Result(column="is_query", property="isQuery", jdbcType=JdbcType.BIGINT),
            @Result(column="show_type", property="showType", jdbcType=JdbcType.BIGINT),
            @Result(column="query_type", property="queryType", jdbcType=JdbcType.BIGINT),
            @Result(column="control_length", property="controlLength", jdbcType=JdbcType.BIGINT),
            @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="validate_rule", property="validateRule", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_fk", property="isFk", jdbcType=JdbcType.VARCHAR),
            @Result(column="column_relation", property="columnRelation", jdbcType=JdbcType.VARCHAR),
            @Result(column="is_bk", property="isBk", jdbcType=JdbcType.VARCHAR)

    })
    List<CscpHxDformColumn> selectColumnByTableNames(@Param("tableNames") List<String> tableNames);

    @Select({
            "<script>",
            "select",
            "page_id,",
            "module_id,",
            "main_page_id,",
            "sort_num,",
            "sub_page_fk,",
            "table_desc",
            "from cscp_customize_vpage where module_id in " ,
            "<foreach collection=\"moduleIds\" item=\"moduleId\" open=\"(\" separator=\",\" close=\")\">" ,
            "#{moduleId} ",
            "</foreach>" ,
            "ORDER BY sort_num",
            "</script>"
    })
    @Results({
            @Result(column="page_id", property="pageId", jdbcType=JdbcType.BIGINT ),
            @Result(column="sort_num", property="sortNum", jdbcType=JdbcType.INTEGER),
            @Result(column="module_id", property="moduleId", jdbcType=JdbcType.BIGINT),
            @Result(column="table_desc", property="tableDesc", jdbcType=JdbcType.VARCHAR)})
    List<CscpCustomizeVpage> getCscpCustomizeVpagesByModuleIds(@Param("moduleIds") List<Long> moduleIds);


    @Select({
            "<script>",
            "select",
            "page_id,",
            "model_id,",
            "main_page_id,",
            "sort_num,",
            "sub_page_fk,",
            "table_desc",
            "from cscp_customize_vpage where model_id in " ,
            "<foreach collection=\"modelIds\" item=\"modelId\" open=\"(\" separator=\",\" close=\")\">" ,
            "#{modelId} ",
            "</foreach>" ,
            "ORDER BY sort_num",
            "</script>"
    })
    @Results({
            @Result(column="page_id", property="pageId", jdbcType=JdbcType.BIGINT ),
            @Result(column="sort_num", property="sortNum", jdbcType=JdbcType.INTEGER),
            @Result(column="model_id", property="modelId", jdbcType=JdbcType.BIGINT),
            @Result(column="table_desc", property="tableDesc", jdbcType=JdbcType.VARCHAR)})
    List<CscpCustomizeVpage> getCscpCustomizevPagesByModelIds(@Param("modelIds") List<Long> modelIds);


    /**
     * 根据mainPageId查询pageId列表
     */

    @Select({
            "<script>" +
                    "select page_id from cscp_customize_vpage where main_page_id in " +
                    "<foreach collection=\"mainPageIds\" item=\"mainPageId\" open=\"(\" separator=\",\" close=\")\">" +
                    "#{mainPageId}" +
                    "</foreach>" +
                    "</script>"})
    @Results(id="batchFormIds",value={
            @Result(column="form_id", jdbcType=JdbcType.BIGINT)
    })
    List<Long> selectPageIdsByMainPageIdList(@Param("mainPageIds") List<Long> mainPageIds);
}





