package com.ctsi.ssdc.log.domain;

import com.ctsi.ssdc.criteria.DateCriteria;
import com.ctsi.ssdc.criteria.IntegerCriteria;
import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import org.apache.commons.lang3.StringUtils;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * CscpComponentCallLogExample
 *
 * @author hx
 * @date 2022-03-19 11:01:42
 */

public class CscpComponentCallLogExample extends BaseExample {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private static final String LIKE_FORMAT = "%%%s%%";


        /**
         *
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database column cscp_component_call_log.id
         *
         * @date 2022-03-19 11:01:42
         */
    private LongCriteria id;

        /**
         *
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database column cscp_component_call_log.company
         *
         * @date 2022-03-19 11:01:42
         */
    private StringCriteria company;

        /**
         *
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database column cscp_component_call_log.project_name
         *
         * @date 2022-03-19 11:01:42
         */
    private StringCriteria projectName;

        /**
         *
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database column cscp_component_call_log.component_name
         *
         * @date 2022-03-19 11:01:42
         */
    private StringCriteria componentName;

        /**
         *
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database column cscp_component_call_log.component_method_name
         *
         * @date 2022-03-19 11:01:42
         */
    private StringCriteria componentMethodName;

        /**
         *
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database column cscp_component_call_log.call_time
         *
         * @date 2022-03-19 11:01:42
         */
    private DateCriteria callTime;

        /**
         *
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database column cscp_component_call_log.upload_flag
         *
         * @date 2022-03-19 11:01:42
         */
    private IntegerCriteria uploadFlag;


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public CscpComponentCallLogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public LongCriteria getId() {
        return id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setId(LongCriteria id) {
        this. id = id;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private void buildIdCriteria(Criteria criteria) {
        if (this.getId() == null) {
            return;
        }
        if (this.getId().getEquals() != null) {
            criteria.andIdEqualTo(this.getId().getEquals());
        } else {
            if (this.getId().getGreaterOrEqualThan() != null) {
                criteria.andIdGreaterThanOrEqualTo(this.getId().getGreaterOrEqualThan());
            }
            if (this.getId().getLessOrEqualThan() != null) {
                criteria.andIdLessThanOrEqualTo(this.getId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public StringCriteria getCompany() {
        return company;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setCompany(StringCriteria company) {
        this. company = company;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private void buildCompanyCriteria(Criteria criteria) {
        if (this.getCompany() == null) {
            return;
        }
        if (this.getCompany().getEquals() != null) {
            criteria.andCompanyEqualTo(this.getCompany().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getCompany().getContains())) {
                criteria.andCompanyLike(String.format(LIKE_FORMAT, this.getCompany().getContains()));
            }
        }
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public StringCriteria getProjectName() {
        return projectName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setProjectName(StringCriteria projectName) {
        this. projectName = projectName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private void buildProjectNameCriteria(Criteria criteria) {
        if (this.getProjectName() == null) {
            return;
        }
        if (this.getProjectName().getEquals() != null) {
            criteria.andProjectNameEqualTo(this.getProjectName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getProjectName().getContains())) {
                criteria.andProjectNameLike(String.format(LIKE_FORMAT, this.getProjectName().getContains()));
            }
        }
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public StringCriteria getComponentName() {
        return componentName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setComponentName(StringCriteria componentName) {
        this. componentName = componentName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private void buildComponentNameCriteria(Criteria criteria) {
        if (this.getComponentName() == null) {
            return;
        }
        if (this.getComponentName().getEquals() != null) {
            criteria.andComponentNameEqualTo(this.getComponentName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getComponentName().getContains())) {
                criteria.andComponentNameLike(String.format(LIKE_FORMAT, this.getComponentName().getContains()));
            }
        }
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public StringCriteria getComponentMethodName() {
        return componentMethodName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setComponentMethodName(StringCriteria componentMethodName) {
        this. componentMethodName = componentMethodName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private void buildComponentMethodNameCriteria(Criteria criteria) {
        if (this.getComponentMethodName() == null) {
            return;
        }
        if (this.getComponentMethodName().getEquals() != null) {
            criteria.andComponentMethodNameEqualTo(this.getComponentMethodName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getComponentMethodName().getContains())) {
                criteria.andComponentMethodNameLike(String.format(LIKE_FORMAT, this.getComponentMethodName().getContains()));
            }
        }
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public DateCriteria getCallTime() {
        return callTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setCallTime(DateCriteria callTime) {
        this. callTime = callTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private void buildCallTimeCriteria(Criteria criteria) {
        if (this.getCallTime() == null) {
            return;
        }
        if (this.getCallTime().getEquals() != null) {
            criteria.andCallTimeEqualTo(this.getCallTime().getEquals());
        } else {
            if (this.getCallTime().getGreaterOrEqualThan() != null) {
                criteria.andCallTimeGreaterThanOrEqualTo(this.getCallTime().getGreaterOrEqualThan());
            }
            if (this.getCallTime().getLessOrEqualThan() != null) {
                criteria.andCallTimeLessThanOrEqualTo(this.getCallTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public IntegerCriteria getUploadFlag() {
        return uploadFlag;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public void setUploadFlag(IntegerCriteria uploadFlag) {
        this. uploadFlag = uploadFlag;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    private void buildUploadFlagCriteria(Criteria criteria) {
        if (this.getUploadFlag() == null) {
            return;
        }
        if (this.getUploadFlag().getEquals() != null) {
            criteria.andUploadFlagEqualTo(this.getUploadFlag().getEquals());
        } else {
            if (this.getUploadFlag().getGreaterOrEqualThan() != null) {
                criteria.andUploadFlagGreaterThanOrEqualTo(this.getUploadFlag().getGreaterOrEqualThan());
            }
            if (this.getUploadFlag().getLessOrEqualThan() != null) {
                criteria.andUploadFlagLessThanOrEqualTo(this.getUploadFlag().getLessOrEqualThan());
            }
        }
    }
    /**
      * This method was generated by MyBatis Generator.
      * This method corresponds to the database table cscp_hx_form_column
      *
      * @date Thu Feb 17 14:02:06 CST 2022
      */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildIdCriteria(criteria);
        this.buildCompanyCriteria(criteria);
        this.buildProjectNameCriteria(criteria);
        this.buildComponentNameCriteria(criteria);
        this.buildComponentMethodNameCriteria(criteria);
        this.buildCallTimeCriteria(criteria);
        this.buildUploadFlagCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCompanyIsNull() {
            addCriterion("company is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIsNotNull() {
            addCriterion("company is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyEqualTo(String value) {
            addCriterion("company =", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotEqualTo(String value) {
            addCriterion("company <>", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyGreaterThan(String value) {
            addCriterion("company >", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyGreaterThanOrEqualTo(String value) {
            addCriterion("company >=", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyLessThan(String value) {
            addCriterion("company <", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyLessThanOrEqualTo(String value) {
            addCriterion("company <=", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyLike(String value) {
            addCriterion("company like", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotLike(String value) {
            addCriterion("company not like", value, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyIn(List<String> values) {
            addCriterion("company in", values, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotIn(List<String> values) {
            addCriterion("company not in", values, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyBetween(String value1, String value2) {
            addCriterion("company between", value1, value2, "company");
            return (Criteria) this;
        }

        public Criteria andCompanyNotBetween(String value1, String value2) {
            addCriterion("company not between", value1, value2, "company");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNull() {
            addCriterion("project_name is null");
            return (Criteria) this;
        }

        public Criteria andProjectNameIsNotNull() {
            addCriterion("project_name is not null");
            return (Criteria) this;
        }

        public Criteria andProjectNameEqualTo(String value) {
            addCriterion("project_name =", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotEqualTo(String value) {
            addCriterion("project_name <>", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThan(String value) {
            addCriterion("project_name >", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameGreaterThanOrEqualTo(String value) {
            addCriterion("project_name >=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThan(String value) {
            addCriterion("project_name <", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLessThanOrEqualTo(String value) {
            addCriterion("project_name <=", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameLike(String value) {
            addCriterion("project_name like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotLike(String value) {
            addCriterion("project_name not like", value, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameIn(List<String> values) {
            addCriterion("project_name in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotIn(List<String> values) {
            addCriterion("project_name not in", values, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameBetween(String value1, String value2) {
            addCriterion("project_name between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andProjectNameNotBetween(String value1, String value2) {
            addCriterion("project_name not between", value1, value2, "projectName");
            return (Criteria) this;
        }

        public Criteria andComponentNameIsNull() {
            addCriterion("component_name is null");
            return (Criteria) this;
        }

        public Criteria andComponentNameIsNotNull() {
            addCriterion("component_name is not null");
            return (Criteria) this;
        }

        public Criteria andComponentNameEqualTo(String value) {
            addCriterion("component_name =", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameNotEqualTo(String value) {
            addCriterion("component_name <>", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameGreaterThan(String value) {
            addCriterion("component_name >", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameGreaterThanOrEqualTo(String value) {
            addCriterion("component_name >=", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameLessThan(String value) {
            addCriterion("component_name <", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameLessThanOrEqualTo(String value) {
            addCriterion("component_name <=", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameLike(String value) {
            addCriterion("component_name like", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameNotLike(String value) {
            addCriterion("component_name not like", value, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameIn(List<String> values) {
            addCriterion("component_name in", values, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameNotIn(List<String> values) {
            addCriterion("component_name not in", values, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameBetween(String value1, String value2) {
            addCriterion("component_name between", value1, value2, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentNameNotBetween(String value1, String value2) {
            addCriterion("component_name not between", value1, value2, "componentName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameIsNull() {
            addCriterion("component_method_name is null");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameIsNotNull() {
            addCriterion("component_method_name is not null");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameEqualTo(String value) {
            addCriterion("component_method_name =", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameNotEqualTo(String value) {
            addCriterion("component_method_name <>", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameGreaterThan(String value) {
            addCriterion("component_method_name >", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameGreaterThanOrEqualTo(String value) {
            addCriterion("component_method_name >=", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameLessThan(String value) {
            addCriterion("component_method_name <", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameLessThanOrEqualTo(String value) {
            addCriterion("component_method_name <=", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameLike(String value) {
            addCriterion("component_method_name like", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameNotLike(String value) {
            addCriterion("component_method_name not like", value, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameIn(List<String> values) {
            addCriterion("component_method_name in", values, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameNotIn(List<String> values) {
            addCriterion("component_method_name not in", values, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameBetween(String value1, String value2) {
            addCriterion("component_method_name between", value1, value2, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andComponentMethodNameNotBetween(String value1, String value2) {
            addCriterion("component_method_name not between", value1, value2, "componentMethodName");
            return (Criteria) this;
        }

        public Criteria andCallTimeIsNull() {
            addCriterion("call_time is null");
            return (Criteria) this;
        }

        public Criteria andCallTimeIsNotNull() {
            addCriterion("call_time is not null");
            return (Criteria) this;
        }

        public Criteria andCallTimeEqualTo(Date value) {
            addCriterion("call_time =", value, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeNotEqualTo(Date value) {
            addCriterion("call_time <>", value, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeGreaterThan(Date value) {
            addCriterion("call_time >", value, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("call_time >=", value, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeLessThan(Date value) {
            addCriterion("call_time <", value, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeLessThanOrEqualTo(Date value) {
            addCriterion("call_time <=", value, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeIn(List<Date> values) {
            addCriterion("call_time in", values, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeNotIn(List<Date> values) {
            addCriterion("call_time not in", values, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeBetween(Date value1, Date value2) {
            addCriterion("call_time between", value1, value2, "callTime");
            return (Criteria) this;
        }

        public Criteria andCallTimeNotBetween(Date value1, Date value2) {
            addCriterion("call_time not between", value1, value2, "callTime");
            return (Criteria) this;
        }

        public Criteria andUploadFlagIsNull() {
            addCriterion("upload_flag is null");
            return (Criteria) this;
        }

        public Criteria andUploadFlagIsNotNull() {
            addCriterion("upload_flag is not null");
            return (Criteria) this;
        }

        public Criteria andUploadFlagEqualTo(Integer value) {
            addCriterion("upload_flag =", value, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagNotEqualTo(Integer value) {
            addCriterion("upload_flag <>", value, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagGreaterThan(Integer value) {
            addCriterion("upload_flag >", value, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagGreaterThanOrEqualTo(Integer value) {
            addCriterion("upload_flag >=", value, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagLessThan(Integer value) {
            addCriterion("upload_flag <", value, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagLessThanOrEqualTo(Integer value) {
            addCriterion("upload_flag <=", value, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagIn(List<Integer> values) {
            addCriterion("upload_flag in", values, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagNotIn(List<Integer> values) {
            addCriterion("upload_flag not in", values, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagBetween(Integer value1, Integer value2) {
            addCriterion("upload_flag between", value1, value2, "uploadFlag");
            return (Criteria) this;
        }

        public Criteria andUploadFlagNotBetween(Integer value1, Integer value2) {
            addCriterion("upload_flag not between", value1, value2, "uploadFlag");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table  cscp_component_call_log
     *
     * @date do_not_delete_during_merge 2022-03-19 11:01:42
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table  cscp_component_call_log
     *
     * @date 2022-03-19 11:01:42
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
