package com.ctsi.ssdc.dic.repository;

import com.ctsi.ssdc.dic.domain.CscpHxDic;
import com.ctsi.ssdc.dic.domain.CscpHxDicExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;
import java.util.List;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
public interface CscpHxDicRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpHxDic, Long, CscpHxDicExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @SelectProvider(type=CscpHxDicSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpHxDicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @DeleteProvider(type=CscpHxDicSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpHxDicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @Delete({
        "delete from cscp_hx_dic",
        "where dic_id = #{dicId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long dicId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @Insert({
        "insert into cscp_hx_dic (dic_id, dic_name, ",
        "dic_code, dic_sort, ",
        "dic_attr, description) ",
        "values (#{dicId,jdbcType=BIGINT}, #{dicName,jdbcType=VARCHAR}, ",
        "#{dicCode,jdbcType=VARCHAR}, #{dicSort,jdbcType=INTEGER}, ",
        "#{dicAttr,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}) "
    })
    @Override
    int insert(CscpHxDic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @InsertProvider(type=CscpHxDicSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpHxDic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @SelectProvider(type=CscpHxDicSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="dic_id", property="dicId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="dic_name", property="dicName", jdbcType=JdbcType.VARCHAR),
        @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="dic_sort", property="dicSort", jdbcType=JdbcType.INTEGER),
        @Result(column="dic_attr", property="dicAttr", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    List<CscpHxDic> selectByExample(CscpHxDicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @Select({
        "select",
        "dic_id, dic_name, dic_code, dic_sort, dic_attr, description ",
        "from cscp_hx_dic",
        "where dic_id = #{dicId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="dic_id", property="dicId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="dic_name", property="dicName", jdbcType=JdbcType.VARCHAR),
        @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="dic_sort", property="dicSort", jdbcType=JdbcType.INTEGER),
        @Result(column="dic_attr", property="dicAttr", jdbcType=JdbcType.VARCHAR),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    CscpHxDic selectByPrimaryKey(Long dicId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @UpdateProvider(type=CscpHxDicSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpHxDic record, @Param("example") CscpHxDicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @UpdateProvider(type=CscpHxDicSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpHxDic record, @Param("example") CscpHxDicExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @UpdateProvider(type=CscpHxDicSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpHxDic record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic
     *
     * @mbg.generated Thu Feb 10 14:19:22 CST 2022
     */
    @Update({
        "update cscp_hx_dic",
        "set dic_name = #{dicName,jdbcType=VARCHAR},",
          "dic_code = #{dicCode,jdbcType=VARCHAR},",
          "dic_sort = #{dicSort,jdbcType=INTEGER},",
          "dic_attr = #{dicAttr,jdbcType=VARCHAR},",
          "description = #{description,jdbcType=VARCHAR},",
        "where dic_id = #{dicId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpHxDic record);


    /**
     * 批量删除
     * @param delList
     */
    @Delete("<script>" +
            "delete from cscp_hx_dic where dic_id in" +
            "<foreach collection=\"delList\" item=\"dicId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{dicId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("delList") List<Long> delList);

    @Select({"select * from cscp_hx_dic where dic_name = #{dicName} limit 1 "})
    @Results({
            @Result(column="dic_id", property="dicId", jdbcType=JdbcType.BIGINT),
            @Result(column="dic_name", property="dicName", jdbcType=JdbcType.VARCHAR),
            @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="dic_sort", property="dicSort", jdbcType=JdbcType.INTEGER),
            @Result(column="dic_attr", property="dicAttr", jdbcType=JdbcType.VARCHAR),
            @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
    })
    List<CscpHxDic> selectByDicName(String name);

    @Select({"select * from cscp_hx_dic where dic_code = #{dicCode} limit 1 "})
    @Results({
            @Result(column="dic_id", property="dicId", jdbcType=JdbcType.BIGINT),
            @Result(column="dic_name", property="dicName", jdbcType=JdbcType.VARCHAR),
            @Result(column="dic_code", property="dicCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="dic_sort", property="dicSort", jdbcType=JdbcType.INTEGER),
            @Result(column="dic_attr", property="dicAttr", jdbcType=JdbcType.VARCHAR),
            @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
    })
    List<CscpHxDic> selectByDicCode(String name);

    @Select({"<script>" ,
            "select count(1) from cscp_hx_dic where dic_name = #{dicName} and dic_attr = #{dicAttr}",
            "</script>"
    })
    int checkCscpHxDicName(CscpHxDic cscpHxDic);

    @Select({"<script>",
            "select count(1) from cscp_hx_dic where dic_code= #{dicCode} and dic_attr = #{dicAttr}",
            "</script>"
    })
    int checkCscpHxDicCode(CscpHxDic cscpHxDic);
}
