package com.ctsi.ssdc.dic.repository;

import com.ctsi.ssdc.dic.domain.CscpHxDicItem;
import com.ctsi.ssdc.dic.domain.CscpHxDicItemExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
public interface CscpHxDicItemRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpHxDicItem, Long, CscpHxDicItemExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @SelectProvider(type=CscpHxDicItemSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpHxDicItemExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @DeleteProvider(type=CscpHxDicItemSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpHxDicItemExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @Delete({
        "delete from cscp_hx_dic_item",
        "where item_id = #{itemId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long itemId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @Insert({
        "insert into cscp_hx_dic_item (item_id, dic_id, ",
        "item_code, item_value, ",
        "item_sort, description, ",
        "item_parent_id, ancestors)",
        "values (#{itemId,jdbcType=BIGINT}, #{dicId,jdbcType=BIGINT}, ",
        "#{itemCode,jdbcType=VARCHAR}, #{itemValue,jdbcType=VARCHAR}, ",
        "#{itemSort,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, ",
        "#{itemParentId,jdbcType=BIGINT}, #{ancestors,jdbcType=VARCHAR})"
    })
    @Override
    int insert(CscpHxDicItem record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @InsertProvider(type=CscpHxDicItemSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpHxDicItem record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @SelectProvider(type=CscpHxDicItemSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="item_id", property="itemId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="dic_id", property="dicId", jdbcType=JdbcType.BIGINT),
        @Result(column="item_code", property="itemCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="item_value", property="itemValue", jdbcType=JdbcType.VARCHAR),
        @Result(column="item_sort", property="itemSort", jdbcType=JdbcType.INTEGER),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="item_parent_id", property="itemParentId", jdbcType=JdbcType.BIGINT),
        @Result(column="ancestors", property="ancestors", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    List<CscpHxDicItem> selectByExample(CscpHxDicItemExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @Select({
        "select",
        "item_id, dic_id, item_code, item_value, item_sort, description, item_parent_id, ",
        "ancestors",
        "from cscp_hx_dic_item",
        "where item_id = #{itemId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="item_id", property="itemId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="dic_id", property="dicId", jdbcType=JdbcType.BIGINT),
        @Result(column="item_code", property="itemCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="item_value", property="itemValue", jdbcType=JdbcType.VARCHAR),
        @Result(column="item_sort", property="itemSort", jdbcType=JdbcType.INTEGER),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="item_parent_id", property="itemParentId", jdbcType=JdbcType.BIGINT),
        @Result(column="ancestors", property="ancestors", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    CscpHxDicItem selectByPrimaryKey(Long itemId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @UpdateProvider(type=CscpHxDicItemSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpHxDicItem record, @Param("example") CscpHxDicItemExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @UpdateProvider(type=CscpHxDicItemSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpHxDicItem record, @Param("example") CscpHxDicItemExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @UpdateProvider(type=CscpHxDicItemSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpHxDicItem record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_item
     *
     * @mbg.generated Thu Feb 10 18:11:40 CST 2022
     */
    @Update({
        "update cscp_hx_dic_item",
        "set dic_id = #{dicId,jdbcType=BIGINT},",
          "item_code = #{itemCode,jdbcType=VARCHAR},",
          "item_value = #{itemValue,jdbcType=VARCHAR},",
          "item_sort = #{itemSort,jdbcType=INTEGER},",
          "description = #{description,jdbcType=VARCHAR},",
          "item_parent_id = #{itemParentId,jdbcType=BIGINT},",
          "ancestors = #{ancestors,jdbcType=VARCHAR}",
        "where item_id = #{itemId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpHxDicItem record);

    @Select({"select * from cscp_hx_dic_item where dic_id = #{dicId} "})
    @Results({
            @Result(column="item_id", property="itemId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="dic_id", property="dicId", jdbcType=JdbcType.BIGINT),
            @Result(column="item_code", property="itemCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="item_value", property="itemValue", jdbcType=JdbcType.VARCHAR),
            @Result(column="item_sort", property="itemSort", jdbcType=JdbcType.INTEGER),
            @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
            @Result(column="item_parent_id", property="itemParentId", jdbcType=JdbcType.BIGINT),
            @Result(column="ancestors", property="ancestors", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpHxDicItem> selectByDicId(Long dicId);

    /**
     * 批量删除
     * @param delList
     */
    @Delete("<script>" +
            "delete from cscp_hx_dic_item where item_id in" +
            "<foreach collection=\"delList\" item=\"itemId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{itemId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("delList") List<Long> delList);


    /**
     * 删除根据dicId
     * @param dicId
     */
    @Delete("<script>" +
            "delete from cscp_hx_dic_item where dic_id = #{dicId}"+
            "</script>")
    void deleteByDicId(@Param("dicId") Long dicId);
    /**
     * 批量删除根据dicId
     * @param delList
     */
    @Delete("<script>" +
            "delete from cscp_hx_dic_item where dic_id in" +
            "<foreach collection=\"delList\" item=\"dicId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{dicId}" +
            "</foreach>" +
            "</script>")
    void deleteByDicIds(@Param("delList") List<Long> delList);



    @Select({"<script>",
            "select count(1) from cscp_hx_dic_item where item_code= #{itemCode} and dic_Id = #{dicId}",
            "</script>"
    })
    int checkCscpHxItemCode(CscpHxDicItem item);

    @Select({"<script>",
            "select * from cscp_hx_dic_item where item_parent_id= #{itemCode}",
            "</script>"
    })
    List<CscpHxDicItem> checkIsTreeItemDel(Long itemId);
}
