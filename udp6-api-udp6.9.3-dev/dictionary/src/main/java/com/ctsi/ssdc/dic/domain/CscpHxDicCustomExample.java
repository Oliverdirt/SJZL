package com.ctsi.ssdc.dic.domain;

import com.ctsi.ssdc.criteria.IntegerCriteria;
import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * @author ctsi-biyi-generator
*/
public class CscpHxDicCustomExample extends BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private static final String LIKE_FORMAT = "%%%s%%";

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_hx_dic_custom.dic_id
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private LongCriteria dicId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_hx_dic_custom.dic_name
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private StringCriteria dicName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_hx_dic_custom.dic_code
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private StringCriteria dicCode;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_hx_dic_custom.dic_sort
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private IntegerCriteria dicSort;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_hx_dic_custom.dic_class
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private StringCriteria dicClass;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_hx_dic_custom.dic_method
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private StringCriteria dicMethod;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_hx_dic_custom.description
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private StringCriteria description;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public CscpHxDicCustomExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public LongCriteria getDicId() {
        return dicId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDicId(LongCriteria dicId) {
        this. dicId = dicId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private void buildDicIdCriteria(Criteria criteria) {
        if (this.getDicId() == null) {
            return;
        }
        if (this.getDicId().getEquals() != null) {
            criteria.andDicIdEqualTo(this.getDicId().getEquals());
        } else {
            if (this.getDicId().getGreaterOrEqualThan() != null) {
                criteria.andDicIdGreaterThanOrEqualTo(this.getDicId().getGreaterOrEqualThan());
            }
            if (this.getDicId().getLessOrEqualThan() != null) {
                criteria.andDicIdLessThanOrEqualTo(this.getDicId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public StringCriteria getDicName() {
        return dicName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDicName(StringCriteria dicName) {
        this. dicName = dicName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private void buildDicNameCriteria(Criteria criteria) {
        if (this.getDicName() == null) {
            return;
        }
        if (this.getDicName().getEquals() != null) {
            criteria.andDicNameEqualTo(this.getDicName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getDicName().getContains())) {
                criteria.andDicNameLike(String.format(LIKE_FORMAT, this.getDicName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public StringCriteria getDicCode() {
        return dicCode;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDicCode(StringCriteria dicCode) {
        this. dicCode = dicCode;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private void buildDicCodeCriteria(Criteria criteria) {
        if (this.getDicCode() == null) {
            return;
        }
        if (this.getDicCode().getEquals() != null) {
            criteria.andDicCodeEqualTo(this.getDicCode().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getDicCode().getContains())) {
                criteria.andDicCodeLike(String.format(LIKE_FORMAT, this.getDicCode().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public IntegerCriteria getDicSort() {
        return dicSort;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDicSort(IntegerCriteria dicSort) {
        this. dicSort = dicSort;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private void buildDicSortCriteria(Criteria criteria) {
        if (this.getDicSort() == null) {
            return;
        }
        if (this.getDicSort().getEquals() != null) {
            criteria.andDicSortEqualTo(this.getDicSort().getEquals());
        } else {
            if (this.getDicSort().getGreaterOrEqualThan() != null) {
                criteria.andDicSortGreaterThanOrEqualTo(this.getDicSort().getGreaterOrEqualThan());
            }
            if (this.getDicSort().getLessOrEqualThan() != null) {
                criteria.andDicSortLessThanOrEqualTo(this.getDicSort().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public StringCriteria getDicClass() {
        return dicClass;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDicClass(StringCriteria dicClass) {
        this. dicClass = dicClass;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private void buildDicClassCriteria(Criteria criteria) {
        if (this.getDicClass() == null) {
            return;
        }
        if (this.getDicClass().getEquals() != null) {
            criteria.andDicClassEqualTo(this.getDicClass().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getDicClass().getContains())) {
                criteria.andDicClassLike(String.format(LIKE_FORMAT, this.getDicClass().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public StringCriteria getDicMethod() {
        return dicMethod;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDicMethod(StringCriteria dicMethod) {
        this. dicMethod = dicMethod;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private void buildDicMethodCriteria(Criteria criteria) {
        if (this.getDicMethod() == null) {
            return;
        }
        if (this.getDicMethod().getEquals() != null) {
            criteria.andDicMethodEqualTo(this.getDicMethod().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getDicMethod().getContains())) {
                criteria.andDicMethodLike(String.format(LIKE_FORMAT, this.getDicMethod().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public StringCriteria getDescription() {
        return description;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public void setDescription(StringCriteria description) {
        this. description = description;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    private void buildDescriptionCriteria(Criteria criteria) {
        if (this.getDescription() == null) {
            return;
        }
        if (this.getDescription().getEquals() != null) {
            criteria.andDescriptionEqualTo(this.getDescription().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getDescription().getContains())) {
                criteria.andDescriptionLike(String.format(LIKE_FORMAT, this.getDescription().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildDicIdCriteria(criteria);
        this.buildDicNameCriteria(criteria);
        this.buildDicCodeCriteria(criteria);
        this.buildDicSortCriteria(criteria);
        this.buildDicClassCriteria(criteria);
        this.buildDicMethodCriteria(criteria);
        this.buildDescriptionCriteria(criteria);
        return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDicIdIsNull() {
            addCriterion("dic_id is null");
            return (Criteria) this;
        }

        public Criteria andDicIdIsNotNull() {
            addCriterion("dic_id is not null");
            return (Criteria) this;
        }

        public Criteria andDicIdEqualTo(Long value) {
            addCriterion("dic_id =", value, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdNotEqualTo(Long value) {
            addCriterion("dic_id <>", value, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdGreaterThan(Long value) {
            addCriterion("dic_id >", value, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdGreaterThanOrEqualTo(Long value) {
            addCriterion("dic_id >=", value, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdLessThan(Long value) {
            addCriterion("dic_id <", value, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdLessThanOrEqualTo(Long value) {
            addCriterion("dic_id <=", value, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdIn(List<Long> values) {
            addCriterion("dic_id in", values, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdNotIn(List<Long> values) {
            addCriterion("dic_id not in", values, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdBetween(Long value1, Long value2) {
            addCriterion("dic_id between", value1, value2, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicIdNotBetween(Long value1, Long value2) {
            addCriterion("dic_id not between", value1, value2, "dicId");
            return (Criteria) this;
        }

        public Criteria andDicNameIsNull() {
            addCriterion("dic_name is null");
            return (Criteria) this;
        }

        public Criteria andDicNameIsNotNull() {
            addCriterion("dic_name is not null");
            return (Criteria) this;
        }

        public Criteria andDicNameEqualTo(String value) {
            addCriterion("dic_name =", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameNotEqualTo(String value) {
            addCriterion("dic_name <>", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameGreaterThan(String value) {
            addCriterion("dic_name >", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameGreaterThanOrEqualTo(String value) {
            addCriterion("dic_name >=", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameLessThan(String value) {
            addCriterion("dic_name <", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameLessThanOrEqualTo(String value) {
            addCriterion("dic_name <=", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameLike(String value) {
            addCriterion("dic_name like", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameNotLike(String value) {
            addCriterion("dic_name not like", value, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameIn(List<String> values) {
            addCriterion("dic_name in", values, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameNotIn(List<String> values) {
            addCriterion("dic_name not in", values, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameBetween(String value1, String value2) {
            addCriterion("dic_name between", value1, value2, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicNameNotBetween(String value1, String value2) {
            addCriterion("dic_name not between", value1, value2, "dicName");
            return (Criteria) this;
        }

        public Criteria andDicCodeIsNull() {
            addCriterion("dic_code is null");
            return (Criteria) this;
        }

        public Criteria andDicCodeIsNotNull() {
            addCriterion("dic_code is not null");
            return (Criteria) this;
        }

        public Criteria andDicCodeEqualTo(String value) {
            addCriterion("dic_code =", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeNotEqualTo(String value) {
            addCriterion("dic_code <>", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeGreaterThan(String value) {
            addCriterion("dic_code >", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeGreaterThanOrEqualTo(String value) {
            addCriterion("dic_code >=", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeLessThan(String value) {
            addCriterion("dic_code <", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeLessThanOrEqualTo(String value) {
            addCriterion("dic_code <=", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeLike(String value) {
            addCriterion("dic_code like", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeNotLike(String value) {
            addCriterion("dic_code not like", value, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeIn(List<String> values) {
            addCriterion("dic_code in", values, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeNotIn(List<String> values) {
            addCriterion("dic_code not in", values, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeBetween(String value1, String value2) {
            addCriterion("dic_code between", value1, value2, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicCodeNotBetween(String value1, String value2) {
            addCriterion("dic_code not between", value1, value2, "dicCode");
            return (Criteria) this;
        }

        public Criteria andDicSortIsNull() {
            addCriterion("dic_sort is null");
            return (Criteria) this;
        }

        public Criteria andDicSortIsNotNull() {
            addCriterion("dic_sort is not null");
            return (Criteria) this;
        }

        public Criteria andDicSortEqualTo(Integer value) {
            addCriterion("dic_sort =", value, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortNotEqualTo(Integer value) {
            addCriterion("dic_sort <>", value, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortGreaterThan(Integer value) {
            addCriterion("dic_sort >", value, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("dic_sort >=", value, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortLessThan(Integer value) {
            addCriterion("dic_sort <", value, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortLessThanOrEqualTo(Integer value) {
            addCriterion("dic_sort <=", value, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortIn(List<Integer> values) {
            addCriterion("dic_sort in", values, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortNotIn(List<Integer> values) {
            addCriterion("dic_sort not in", values, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortBetween(Integer value1, Integer value2) {
            addCriterion("dic_sort between", value1, value2, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicSortNotBetween(Integer value1, Integer value2) {
            addCriterion("dic_sort not between", value1, value2, "dicSort");
            return (Criteria) this;
        }

        public Criteria andDicClassIsNull() {
            addCriterion("dic_class is null");
            return (Criteria) this;
        }

        public Criteria andDicClassIsNotNull() {
            addCriterion("dic_class is not null");
            return (Criteria) this;
        }

        public Criteria andDicClassEqualTo(String value) {
            addCriterion("dic_class =", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassNotEqualTo(String value) {
            addCriterion("dic_class <>", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassGreaterThan(String value) {
            addCriterion("dic_class >", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassGreaterThanOrEqualTo(String value) {
            addCriterion("dic_class >=", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassLessThan(String value) {
            addCriterion("dic_class <", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassLessThanOrEqualTo(String value) {
            addCriterion("dic_class <=", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassLike(String value) {
            addCriterion("dic_class like", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassNotLike(String value) {
            addCriterion("dic_class not like", value, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassIn(List<String> values) {
            addCriterion("dic_class in", values, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassNotIn(List<String> values) {
            addCriterion("dic_class not in", values, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassBetween(String value1, String value2) {
            addCriterion("dic_class between", value1, value2, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicClassNotBetween(String value1, String value2) {
            addCriterion("dic_class not between", value1, value2, "dicClass");
            return (Criteria) this;
        }

        public Criteria andDicMethodIsNull() {
            addCriterion("dic_method is null");
            return (Criteria) this;
        }

        public Criteria andDicMethodIsNotNull() {
            addCriterion("dic_method is not null");
            return (Criteria) this;
        }

        public Criteria andDicMethodEqualTo(String value) {
            addCriterion("dic_method =", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodNotEqualTo(String value) {
            addCriterion("dic_method <>", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodGreaterThan(String value) {
            addCriterion("dic_method >", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodGreaterThanOrEqualTo(String value) {
            addCriterion("dic_method >=", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodLessThan(String value) {
            addCriterion("dic_method <", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodLessThanOrEqualTo(String value) {
            addCriterion("dic_method <=", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodLike(String value) {
            addCriterion("dic_method like", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodNotLike(String value) {
            addCriterion("dic_method not like", value, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodIn(List<String> values) {
            addCriterion("dic_method in", values, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodNotIn(List<String> values) {
            addCriterion("dic_method not in", values, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodBetween(String value1, String value2) {
            addCriterion("dic_method between", value1, value2, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDicMethodNotBetween(String value1, String value2) {
            addCriterion("dic_method not between", value1, value2, "dicMethod");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("description is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("description is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("description =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("description <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("description >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("description >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("description <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("description <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("description like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("description not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("description in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("description not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("description between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("description not between", value1, value2, "description");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated do_not_delete_during_merge Fri Feb 11 14:36:02 CST 2022
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cscp_hx_dic_custom
     *
     * @mbg.generated Fri Feb 11 14:36:02 CST 2022
     */
    public static class Criterion {
        @ApiParam(hidden=true)
        private String condition;

        @ApiParam(hidden=true)
        private Object value;

        @ApiParam(hidden=true)
        private Object secondValue;

        @ApiParam(hidden=true)
        private boolean noValue;

        @ApiParam(hidden=true)
        private boolean singleValue;

        @ApiParam(hidden=true)
        private boolean betweenValue;

        @ApiParam(hidden=true)
        private boolean listValue;

        @ApiParam(hidden=true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}