package com.ctsi.ssdc.admin.repository;

import com.ctsi.ssdc.admin.domain.CscpLogLogin;
import com.ctsi.ssdc.admin.domain.CscpLogLoginExample;
import com.ctsi.ssdc.database.annotation.InjectByDataBaseType;
import com.ctsi.ssdc.database.enums.EnumDatabaseName;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

/**
 * @author MyBatis Generator
*/
@InjectByDataBaseType(includes= {EnumDatabaseName.ORACLE})
public interface CscpLogLoginRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @SelectProvider(type=CscpLogLoginSqlProvider.class, method="countByExample")
    long countByExample(CscpLogLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @DeleteProvider(type=CscpLogLoginSqlProvider.class, method="deleteByExample")
    int deleteByExample(CscpLogLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @Delete({
        "delete from cscp_log_login",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @Insert({
        "insert into cscp_log_login (id,user_name, ip, ",
        "message, time, ",
        "status,tenant_id)",
        "values (#{id,jdbcType=BIGINT},#{userName,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, ",
        "#{message,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, ",
        "#{status,jdbcType=VARCHAR},#{tenantId,jdbcType=BIGINT})"
    })
    //@Options(useGeneratedKeys=true, keyProperty="id")
    Long insert(CscpLogLogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @InsertProvider(type=CscpLogLoginSqlProvider.class, method="insertSelective")
    //@Options(useGeneratedKeys=true, keyProperty="id")
    Long insertSelective(CscpLogLogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @SelectProvider(type=CscpLogLoginSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BINARY, id=true),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="message", property="message", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpLogLogin> selectByExample(CscpLogLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @Select({
        "select",
        "id, user_name, ip, message, time, status",
        "from cscp_log_login",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="message", property="message", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR)
    })
    CscpLogLogin selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @UpdateProvider(type=CscpLogLoginSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CscpLogLogin record, @Param("example") CscpLogLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @UpdateProvider(type=CscpLogLoginSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CscpLogLogin record, @Param("example") CscpLogLoginExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @UpdateProvider(type=CscpLogLoginSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CscpLogLogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @Update({
        "update cscp_log_login",
        "set user_name = #{userName,jdbcType=VARCHAR},",
          "ip = #{ip,jdbcType=VARCHAR},",
          "message = #{message,jdbcType=VARCHAR},",
          "time = #{time,jdbcType=TIMESTAMP},",
          "status = #{status,jdbcType=VARCHAR}",
          "tenant_id = #{tenantId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT} and tenant_id = #{tenantId,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CscpLogLogin record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_log_login
     *
     * @mbg.generated Fri Aug 03 08:51:06 CST 2018
     */
    @SelectProvider(type=CscpLogLoginSqlProvider.class, method="selectByExampleWithPage")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
        @Result(column="user_name", property="userName", jdbcType=JdbcType.VARCHAR),
        @Result(column="ip", property="ip", jdbcType=JdbcType.VARCHAR),
        @Result(column="message", property="message", jdbcType=JdbcType.VARCHAR),
        @Result(column="time", property="time", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpLogLogin> selectByExamplewithPage(CscpLogLoginExample example);
}