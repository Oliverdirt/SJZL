package com.ctsi.ssdc.admin.repository;

import com.ctsi.ssdc.admin.domain.CscpPost;
import com.ctsi.ssdc.admin.domain.CscpPostExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

/**
 * CscpPostRepository
 *
 * @author hx
 * @date 2022-08-31 15:23:50
 */

@Mapper
public interface CscpPostRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpPost, Long, CscpPostExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @SelectProvider(type=CscpPostSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpPostExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @DeleteProvider(type=CscpPostSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpPostExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @Delete({
            "delete from cscp_post",
            "where post_id = #{postId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long postId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     *
     * @date 2022-08-31 15:23:50
     */
    @Insert({
            "insert into cscp_post (",
            "post_id,",
            "post_code,",
            "post_name,",
            "post_sort,",
            "status,",
            "create_by,",
            "create_time,",
            "update_by,",
            "update_time,",
            "remark,",
            "tenant_id",
            ") values (",
            "#{postId,jdbcType=BIGINT}, ",
            "#{postCode,jdbcType=VARCHAR}, ",
            "#{postName,jdbcType=VARCHAR}, ",
            "#{postSort,jdbcType=INTEGER}, ",
            "#{status,jdbcType=VARCHAR}, ",
            "#{createBy,jdbcType=VARCHAR}, ",
            "#{createTime,jdbcType=DATE}, ",
            "#{updateBy,jdbcType=VARCHAR}, ",
            "#{updateTime,jdbcType=DATE}, ",
            "#{remark,jdbcType=VARCHAR}, ",
            "#{tenantId,jdbcType=BIGINT}",
            ")"

    })
    @Override
    int insert(CscpPost record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @InsertProvider(type=CscpPostSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpPost record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @SelectProvider(type=CscpPostSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="post_id", property="postId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="post_code", property="postCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_name", property="postName", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_sort", property="postSort", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT)
    })

    @Override
    List<CscpPost> selectByExample(CscpPostExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @Select({
            "select",
            "post_id,",
            "post_code,",
            "post_name,",
            "post_sort,",
            "status,",
            "create_by,",
            "create_time,",
            "update_by,",
            "update_time,",
            "remark,",
            "tenant_id",
            "from cscp_post",
            "where post_id = #{postId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="post_id", property="postId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="post_code", property="postCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_name", property="postName", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_sort", property="postSort", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT)
    })
    @Override
    CscpPost selectByPrimaryKey(Long postId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @UpdateProvider(type=CscpPostSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpPost record, @Param("example") CscpPostExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @UpdateProvider(type=CscpPostSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpPost record, @Param("example") CscpPostExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     *@date 2022-08-31 15:23:50
     */
    @UpdateProvider(type=CscpPostSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpPost record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @Update({
            "update cscp_post",
            "set ",
            "post_id = #{postId,jdbcType=BIGINT},",
            "post_code = #{postCode,jdbcType=VARCHAR},",
            "post_name = #{postName,jdbcType=VARCHAR},",
            "post_sort = #{postSort,jdbcType=INTEGER},",
            "status = #{status,jdbcType=VARCHAR},",
            "create_by = #{createBy,jdbcType=VARCHAR},",
            "create_time = #{createTime,jdbcType=DATE},",
            "update_by = #{updateBy,jdbcType=VARCHAR},",
            "update_time = #{updateTime,jdbcType=DATE},",
            "remark = #{remark,jdbcType=VARCHAR},",
            "tenant_id = #{tenantId,jdbcType=BIGINT}",

            "where post_id = #{postId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpPost record);

    /**
     * 批量删除
     * @param postIds
     */
    @Delete("<script>" +
            "delete from cscp_post where post_id in" +
            "<foreach collection=\"postIds\" item=\"postId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{postId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("postIds") List<Long> postIds);

    @Select({"<script>",
            "select * from cscp_post",
            "<where>  1=1 ",
            "<if test = 'postCode != null and postCode != \"\"'> and post_code like concat('%',#{postCode},'%')</if> ",
            "<if test = 'postName != null and postName != \"\"'> and post_name like concat('%',#{postName},'%')</if> ",
            //"<if test = 'status != null and status != \"\"'> and status like concat('%',#{status},'%')</if> ",
            "</where>",
            "order by post_sort",
            "</script>"
    })
    @Results({
            @Result(column="post_id", property="postId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="post_code", property="postCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_name", property="postName", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_sort", property="postSort", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT)
    })
    List<CscpPost> getCscpPosts(CscpPost post);

    @Select({"<script>",
            "select count(1) from cscp_post where post_code= #{postCode}",
            "</script>"
    })
    int checkCscpPostCode(CscpPost cscpPost);

    @Select({"<script>",
            "select count(1) from cscp_post where post_name= #{postName}",
            "</script>"
    })
    int checkCscpPostName(CscpPost cscpPost);


    @SelectProvider(type=CscpPostSqlProvider.class, method="selectByExampleWithPage")
    @Results({
            @Result(column="post_id", property="postId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="post_code", property="postCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_name", property="postName", jdbcType=JdbcType.VARCHAR),
            @Result(column="post_sort", property="postSort", jdbcType=JdbcType.INTEGER),
            @Result(column="status", property="status", jdbcType=JdbcType.CHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT)
    })
    List<CscpPost> selectByExamplewithPage(CscpPostExample example);

}





