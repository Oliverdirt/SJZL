package com.ctsi.ssdc.admin.repository;

import java.util.ArrayList;
import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

import com.ctsi.ssdc.admin.domain.CscpUser;
import com.ctsi.ssdc.admin.domain.CscpUserExample;
import com.ctsi.ssdc.database.annotation.InjectByDataBaseType;
import com.ctsi.ssdc.database.enums.EnumDatabaseName;

/**
 * @author MyBatis Generator
*/
@InjectByDataBaseType(includes= {EnumDatabaseName.ORACLE})
public interface CscpUserRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @SelectProvider(type=CscpUserSqlProvider.class, method="countByExample")
    Long countByExample(CscpUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @DeleteProvider(type=CscpUserSqlProvider.class, method="deleteByExample")
    int deleteByExample(CscpUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @Delete({
        "delete from cscp_user",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @Insert({
        "insert into cscp_user (id,username, password)",
        "values (#{id,jdbcType=BIGINT},#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})"
    })
    //@Options(useGeneratedKeys=true, keyProperty="id")
    Long insert(CscpUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @InsertProvider(type=CscpUserSqlProvider.class, method="insertSelective")
    //@Options(useGeneratedKeys=true, keyProperty="id")
    Long insertSelective(CscpUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @SelectProvider(type=CscpUserSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.BIGINT),
        @Result(column="password", property="password", jdbcType=JdbcType.BIGINT)
    })
    List<CscpUser> selectByExample(CscpUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @Select({
        "select",
        "id, username, password",
        "from cscp_user",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    CscpUser selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @UpdateProvider(type=CscpUserSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CscpUser record, @Param("example") CscpUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @UpdateProvider(type=CscpUserSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CscpUser record, @Param("example") CscpUserExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @UpdateProvider(type=CscpUserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CscpUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @Update({
        "update cscp_user",
        "set username = #{username,jdbcType=VARCHAR},",
        "password = #{password,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CscpUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_user
     *
     * @mbg.generated Mon Apr 23 08:56:34 CST 2018
     */
    @SelectProvider(type=CscpUserSqlProvider.class, method="selectByExampleWithPage")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="username", property="username", jdbcType=JdbcType.VARCHAR),
        @Result(column="password", property="password", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpUser> selectByExamplewithPage(CscpUserExample example);


    /**
     * 批量删除
     * @param delUserIds
     */
    @Delete("<script>" +
            "delete from cscp_user where id in" +
            "<foreach collection=\"delUserIds\" item=\"id\" open=\"(\" separator=\",\" close=\")\">" +
            "#{id}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("delUserIds")List<Long> delUserIds);

    @Select({
            "select count(*) from cscp_user cu ,cscp_user_detail cud " +
                    "where cu.id = cud.user_id and cud.tenant_id = #{tenantId} " +
                    "and cu.username = #{userName}"
    })
    Long countUserByName(@Param("userName") String userName, @Param("tenantId") Long tenantId);
}