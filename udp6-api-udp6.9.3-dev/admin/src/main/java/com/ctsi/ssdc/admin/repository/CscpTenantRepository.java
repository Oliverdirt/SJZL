package com.ctsi.ssdc.admin.repository;

import com.ctsi.ssdc.admin.domain.CscpTenant;
import com.ctsi.ssdc.admin.domain.CscpTenantExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

/**
 * @author ctsi-biyi-generator
 */
@Mapper
public interface CscpTenantRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpTenant, Long, CscpTenantExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @SelectProvider(type=CscpTenantSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpTenantExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @DeleteProvider(type=CscpTenantSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpTenantExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @Delete({
            "delete from cscp_tenant",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(@Param("id")Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @Insert({
            "insert into cscp_tenant (id, tenant_account, ",
            "tenant_name, contacts, ",
            "phone, expire_time, ",
            "active_flag)",
            "values (#{id,jdbcType=BIGINT}, #{tenantAccount,jdbcType=VARCHAR}, ",
            "#{tenantName,jdbcType=VARCHAR}, #{contacts,jdbcType=VARCHAR}, ",
            "#{phone,jdbcType=VARCHAR}, #{expireTime,jdbcType=TIMESTAMP}, ",
            "#{activeFlag,jdbcType=CHAR})"
    })
    @Override
    int insert(CscpTenant record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @InsertProvider(type=CscpTenantSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpTenant record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @SelectProvider(type=CscpTenantSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="tenant_account", property="tenantAccount", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_name", property="tenantName", jdbcType=JdbcType.VARCHAR),
            @Result(column="contacts", property="contacts", jdbcType=JdbcType.VARCHAR),
            @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
            @Result(column="expire_time", property="expireTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="active_flag", property="activeFlag", jdbcType=JdbcType.CHAR)
    })
    @Override
    List<CscpTenant> selectByExample(CscpTenantExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @Select({
            "select",
            "id, tenant_account, tenant_name, contacts, phone, expire_time, active_flag",
            "from cscp_tenant",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="tenant_account", property="tenantAccount", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_name", property="tenantName", jdbcType=JdbcType.VARCHAR),
            @Result(column="contacts", property="contacts", jdbcType=JdbcType.VARCHAR),
            @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
            @Result(column="expire_time", property="expireTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="active_flag", property="activeFlag", jdbcType=JdbcType.CHAR)
    })
    @Override
    CscpTenant selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @UpdateProvider(type=CscpTenantSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpTenant record, @Param("example") CscpTenantExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @UpdateProvider(type=CscpTenantSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpTenant record, @Param("example") CscpTenantExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @UpdateProvider(type=CscpTenantSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpTenant record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_tenant
     *
     * @mbg.generated Thu Jan 06 14:30:38 CST 2022
     */
    @Update({
            "update cscp_tenant",
            "set tenant_account = #{tenantAccount,jdbcType=VARCHAR},",
            "tenant_name = #{tenantName,jdbcType=VARCHAR},",
            "contacts = #{contacts,jdbcType=VARCHAR},",
            "phone = #{phone,jdbcType=VARCHAR},",
            "expire_time = #{expireTime,jdbcType=TIMESTAMP},",
            "active_flag = #{activeFlag,jdbcType=CHAR}",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpTenant record);


    @Select("select * from cscp_tenant where tenant_account = #{tenantAccount} and active_flag = '1' limit 1")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="tenant_account", property="tenantAccount", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_name", property="tenantName", jdbcType=JdbcType.VARCHAR),
            @Result(column="contacts", property="contacts", jdbcType=JdbcType.VARCHAR),
            @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
            @Result(column="expire_time", property="expireTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="active_flag", property="activeFlag", jdbcType=JdbcType.CHAR)
    })
    CscpTenant selectByTenantAccount(String tenantAccount);


    /**
     * 批量删除
     * @param tenantIds
     */
    @Delete("<script>" +
            "delete from cscp_tenant where id in" +
            "<foreach collection=\"tenantIds\" item=\"id\" open=\"(\" separator=\",\" close=\")\">" +
            "#{id}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("tenantIds") List<Long> tenantIds);

    @Select("SELECT\n" +
            "\tcount( * ) \n" +
            "FROM\n" +
            "\tcscp_user_detail t1,\n" +
            "\tcscp_user t2,\n" +
            "\tcscp_tenant t3 \n" +
            "WHERE\n" +
            "\tt1.user_id = t2.id \n" +
            "\tAND t3.active_flag = '1' \n" +
            "\tAND t1.tenant_id = t3.id \n" +
            "\tAND t2.username = #{username}\n" +
            "\tAND t3.tenant_account = #{tenantAccount}")
    int checkUserTenant(@Param("tenantAccount") String tenantAccount ,@Param("username") String username);

    @Select({"<script>",
            "select count(1) from cscp_tenant ",
            "<where>",
            "<if test='tenantAccount != null and tenantAccount != \"\"'>tenant_account = #{tenantAccount}</if>",
            "</where>",
            "</script>"
    })
    int checkTenantAccountExist(CscpTenant tenant);

    @Update({
            "update cscp_tenant",
            "set active_flag = #{activeFlag,jdbcType=VARCHAR}",
            "where id = #{tenantId,jdbcType=BIGINT}"
    })
    int changeStatus(@Param("tenantId") Long tenantId,@Param("activeFlag") String activeFlag);

    @Select({"select * from cscp_tenant where tenant_account like concat('%',#{name,jdbcType=VARCHAR},'%')"})
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="tenant_account", property="tenantAccount", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_name", property="tenantName", jdbcType=JdbcType.VARCHAR),
            @Result(column="contacts", property="contacts", jdbcType=JdbcType.VARCHAR),
            @Result(column="phone", property="phone", jdbcType=JdbcType.VARCHAR),
            @Result(column="expire_time", property="expireTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="active_flag", property="activeFlag", jdbcType=JdbcType.CHAR)
    })
    List<CscpTenant> getAll (@Param("name") String name);

    @Select({"SELECT tenant_account from cscp_tenant where id in \n" +
            "(SELECT tenant_id from cscp_user_detail where user_id in \n" +
            "(select id from cscp_user where username = #{username}))\n"})
    @Results({
            @Result(column="tenant_account", property="tenantAccount", jdbcType=JdbcType.VARCHAR),
    })
    List<CscpTenant> selectByUsername (@Param("username") String username);

}