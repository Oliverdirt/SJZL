package com.ctsi.ssdc.admin.repository;

import com.ctsi.ssdc.admin.domain.CscpRoles;
import com.ctsi.ssdc.admin.domain.CscpRolesExample;
import com.ctsi.ssdc.database.annotation.InjectByDataBaseType;
import com.ctsi.ssdc.database.enums.EnumDatabaseName;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;

/**
 * @author MyBatis Generator
*/
@InjectByDataBaseType(includes= {EnumDatabaseName.ORACLE})
public interface CscpRolesRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpRoles, Long, CscpRolesExample>{
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @SelectProvider(type=CscpRolesSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpRolesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @DeleteProvider(type=CscpRolesSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpRolesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @Delete({
            "delete from cscp_roles",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @Insert({
            "insert into cscp_roles (id, name, ",
            "role_extent, parent_id, ",
            "icon, tenant_id,data_scope)",
            "values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, ",
            "#{roleExtent,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, ",
            "#{icon,jdbcType=VARCHAR}, #{tenantId,jdbcType=BIGINT}," ,
            "#{dataScope,jdbcType=VARCHAR})"
    })
    @Override
    int insert(CscpRoles record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @InsertProvider(type=CscpRolesSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpRoles record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @SelectProvider(type=CscpRolesSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="role_extent", property="roleExtent", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
            @Result(column="data_scope", property="dataScope", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    List<CscpRoles> selectByExample(CscpRolesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @Select({
            "select",
            "id, name, role_extent, parent_id, icon, tenant_id,data_scope",
            "from cscp_roles",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="role_extent", property="roleExtent", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
            @Result(column="data_scope", property="dataScope", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    CscpRoles selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @UpdateProvider(type=CscpRolesSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpRoles record, @Param("example") CscpRolesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @UpdateProvider(type=CscpRolesSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpRoles record, @Param("example") CscpRolesExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @UpdateProvider(type=CscpRolesSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpRoles record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Thu Jan 06 14:50:15 CST 2022
     */
    @Update({
            "update cscp_roles",
            "set name = #{name,jdbcType=VARCHAR},",
            "role_extent = #{roleExtent,jdbcType=VARCHAR},",
            "parent_id = #{parentId,jdbcType=BIGINT},",
            "icon = #{icon,jdbcType=VARCHAR},",
            "tenant_id = #{tenantId,jdbcType=BIGINT},",
            "data_scope = #{dataScope,jdbcType=VARCHAR}",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpRoles record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_roles
     *
     * @mbg.generated Mon May 07 08:50:31 CST 2018
     */
    @SelectProvider(type=CscpRolesSqlProvider.class, method="selectByExampleWithPage")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="role_extent", property="roleExtent", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
        @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
        @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
        @Result(column="data_scope", property="dataScope", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpRoles> selectByExamplewithPage(CscpRolesExample example);


    @Select({"<script>" ,
            "select * from cscp_roles where name = #{name}",
            " and tenant_id = #{tenantId}",
            "</script>"})
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="role_extent", property="roleExtent", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="tenant_id", property="tenantId", jdbcType=JdbcType.BIGINT),
            @Result(column="data_scope", property="dataScope", jdbcType=JdbcType.VARCHAR)
    })
    CscpRoles getRoleByTenant(CscpRoles roles);


    /**
     * 根据租户id，查询角色id；
     * @param tenantId
     * @return
     */
    @Select({
            "select id from cscp_roles where tenant_id =#{tenantId} "
    })
    List<Long> selectRolesByTenantId(@Param("tenantId") Long tenantId);


    /**
     * 批量删除角色
     * @param roleIds
     */

    @Delete("<script>" +
            "delete from cscp_roles where id in" +
            "<foreach collection=\"roleIds\" item=\"id\" open=\"(\" separator=\",\" close=\")\">" +
            "#{id}" +
            "</foreach>" +
            "</script>")
    void deleteRolesByRoleIds(@Param("roleIds")List<Long> roleIds);


    /**
     * 根据租户ids，查询部门ids
     * @param tenantIds
     */
    @Select("<script>" +
            "select id from cscp_roles where tenant_id in" +
            "<foreach collection=\"tenantIds\" item=\"tenantId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{tenantId}" +
            "</foreach>" +
            "</script>")
    List<Long> selectRolesByTenantIds(@Param("tenantIds") List<Long> tenantIds);

    @Select({"<script> select id,name from cscp_roles where id in (<foreach collection='list' item='id' index='index' separator=','> (#{id})</foreach>) </script>"})
    List<CscpRoles> getNameById(@Param("list") List<Long> ids );

    @Select({"<script> select id,name from cscp_roles where tenant_id = #{tenantId,jdbcType=BIGINT} </script>"})
    List<CscpRoles> selectAllRoles(@Param("tenantId")Long tenantId);
}