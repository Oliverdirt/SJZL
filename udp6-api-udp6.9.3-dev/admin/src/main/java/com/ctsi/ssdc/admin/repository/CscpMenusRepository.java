package com.ctsi.ssdc.admin.repository;

import com.ctsi.ssdc.admin.domain.CscpMenus;
import com.ctsi.ssdc.admin.domain.CscpMenusExample;
import com.ctsi.ssdc.admin.domain.dto.CscpMenusDTO;
import com.ctsi.ssdc.database.annotation.InjectByDataBaseType;
import com.ctsi.ssdc.database.enums.EnumDatabaseName;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.util.List;
import java.util.Map;

/**
 * @author MyBatis Generator
*/
@InjectByDataBaseType(includes= {EnumDatabaseName.ORACLE})
public interface CscpMenusRepository {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @SelectProvider(type=CscpMenusSqlProvider.class, method="countByExample")
    long countByExample(CscpMenusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @DeleteProvider(type=CscpMenusSqlProvider.class, method="deleteByExample")
    int deleteByExample(CscpMenusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @Delete({
        "delete from cscp_menus",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @Insert({
        "insert into cscp_menus (id,name, icon, ",
        "title, url, http_method, ",
        "component, parent_id, ",
        "type, permission_code, ",
        "orderby)",
        "values (#{id,jdbcType=BIGINT},#{name,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, ",
        "#{title,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{httpMethod,jdbcType=VARCHAR}, ",
        "#{component,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}, ",
        "#{type,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, ",
        "#{orderby,jdbcType=BIGINT})"
    })
    @Options(useGeneratedKeys=true, keyProperty="id")
    Long insert(CscpMenus record);

    @Insert({
            "<script>" +
                    "insert into cscp_menus " +
                    "(id," +
                    "name," +
                    "icon," +
                    "title," +
                    "url,"+
                    "http_method," +
                    "component," +
                    "parent_id," +
                    "type," +
                    "permission_code," +
                    "orderby) " +
                    "values " +
                    "<foreach collection='list' item='c' separator=',' > " +
                    "(#{c.id,jdbcType=BIGINT}," +
                    "#{c.name,jdbcType=VARCHAR}," +
                    "#{c.icon,jdbcType=VARCHAR}," +
                    "#{c.title,jdbcType=VARCHAR}," +
                    "#{c.url,jdbcType=VARCHAR}," +
                    "#{c.httpMethod,jdbcType=VARCHAR}," +
                    "#{c.component,jdbcType=VARCHAR}," +
                    "#{c.parentId,jdbcType=BIGINT}," +
                    "#{c.type,jdbcType=VARCHAR}, " +
                    "#{c.permissionCode,jdbcType=VARCHAR}," +
                    "#{c.orderby,jdbcType=BIGINT})" +
                    "</foreach>" +
                    "</script>"
    })
    @Options(useGeneratedKeys=true, keyProperty="id")
    Long insertBatch(@Param("list") List<CscpMenus> cscpMenusList);

    @Delete({
            "<script>",
//            "delete from cscp_menus where permission_code in",
//            "<foreach collection=\"permisionCodeList\" item=\"permisionCode\" open=\"(\" separator=\",\" close=\")\">" ,
//            "#{permisionCode} ",
//            "</foreach> " ,
//            "and type = 'button'; ",
            "delete t1 ,t2  from  cscp_role_menu t1, cscp_menus t2  where t1.menu_id = t2.id and t2.type = 'button' and t2.permission_code in ",
            "<foreach collection=\"permisionCodeList\" item=\"permisionCode\" open=\"(\" separator=\",\" close=\")\">" ,
            "#{permisionCode} ",
            "</foreach> ",
            "</script>"
    })
    void deleteMenuAndMenuRole(@Param("permisionCodeList") List<String> permisionCodeList);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @InsertProvider(type=CscpMenusSqlProvider.class, method="insertSelective")
   // @Options(useGeneratedKeys=true, keyProperty="id")
    Long insertSelective(CscpMenus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @SelectProvider(type=CscpMenusSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
        @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> selectByExample(CscpMenusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @Select({
        "select",
        "id, name, icon, title, url, http_method, component, parent_id, type, permission_code, ",
        "orderby",
        "from cscp_menus",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
        @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    CscpMenus selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @UpdateProvider(type=CscpMenusSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") CscpMenus record, @Param("example") CscpMenusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @UpdateProvider(type=CscpMenusSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") CscpMenus record, @Param("example") CscpMenusExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @UpdateProvider(type=CscpMenusSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(CscpMenus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @Update({
        "update cscp_menus",
        "set name = #{name,jdbcType=VARCHAR},",
          "icon = #{icon,jdbcType=VARCHAR},",
          "title = #{title,jdbcType=VARCHAR},",
          "url = #{url,jdbcType=VARCHAR},",
          "http_method = #{httpMethod,jdbcType=VARCHAR},",
          "component = #{component,jdbcType=VARCHAR},",
          "parent_id = #{parentId,jdbcType=BIGINT},",
          "type = #{type,jdbcType=VARCHAR},",
          "permission_code = #{permissionCode,jdbcType=VARCHAR},",
          "orderby = #{orderby,jdbcType=BIGINT}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(CscpMenus record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_menus
     *
     * @mbg.generated Tue Aug 28 09:53:39 CST 2018
     */
    @SelectProvider(type=CscpMenusSqlProvider.class, method="selectByExampleWithPage")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
        @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> selectByExamplewithPage(CscpMenusExample example);

    @Select({
            "select DISTINCT cm.*  ",
            "FROM cscp_menus cm  ",
            "left join cscp_role_menu crm on cm.id = crm.menu_id  ",
            "left join cscp_user_role cur on crm.role_id = cur.role_id  ",
            "where cur.user_id=#{userId,jdbcType=BIGINT}  ",
            "order by orderby,id"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
        @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
        @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> selectByUserId(Long userId);
    
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
        @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT),
        @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR)
    })
    @Select("<script>  select distinct c.id, c.title, c.icon, c.url, c.parent_id, c.type, c.orderby, "
    		+"c.component  FROM cscp_role_menu b, cscp_menus c, cscp_roles d "
    		+"where b.menu_id = c.id and  b.role_id = d.id " +

            " <if test=\"roleId != null and roleId != 0 \" >" +
            "and b.role_id = #{roleId,jdbcType=BIGINT} " +
            " </if>" +


            " <if test=\"tenantId != null and tenantId != '' \" >" +
            "and d.tenant_id = #{tenantId,jdbcType=BIGINT} " +
            " </if>" +
            "order by c.orderby"+
            "</script>")
    @MapKey("id")
    Map<Long, CscpMenusDTO> menusByRole(@Param("roleId") Long roleId,@Param("tenantId") Long tenantId );


    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR)
    })
    @Select("<script>  select distinct c.id, c.title, c.icon, c.url, c.parent_id, c.type, c.orderby, "
            +"c.component  FROM cscp_role_menu b, cscp_menus c, cscp_roles d "
            +"where b.menu_id = c.id and  b.role_id = d.id " +
            " <if test=\"roleId != null and roleId != 0 \" >" +
            "and b.role_id = #{roleId,jdbcType=BIGINT} " +
            " </if>" +
            "order by c.orderby"+
            "</script>")
    List<CscpMenusDTO> menusByRoleIdAndTenantId(@Param("roleId") Long roleId);

    //按照父id搜索
    @Select({"select * from  cscp_menus where  parent_id = #{parentId,jdbcType=BIGINT} order by orderby"})
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> selectByParentId(Long parentId);



    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    @Select({
           "SELECT c.id, c.NAME, c.icon, c.title, c.url, c.http_method, c.component, c.parent_id, c.type, c.permission_code \n" +
                   "FROM cscp_role_menu b, cscp_menus c " +
                   "WHERE " +
                   "b.menu_id = c.id " +
                   "\tAND b.role_id = #{roleId} \n" +
                   "ORDER BY\n" +
                   "\tc.orderby"
    })
    List<CscpMenus> selectAllMenusByAdminId(@Param("roleId") Long roleId);

    @Select("select * from cscp_menus where url = #{url} limit 1")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    CscpMenus getMenuByUrl(String url);

    @Select({"<script>" +
            "select * from cscp_menus where url in " +
            "<foreach collection=\"urlList\" item=\"url\" open=\"(\" separator=\",\" close=\")\">" +
            "#{url}" +
            "</foreach>" +
            "</script>"})
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> getMenuByUrlBatch(@Param("urlList") List<String> urlList);

    @Select(
            {
                    "<script>" +
                            "select * from cscp_menus where parent_id in" +
                            "<foreach collection=\"parentIdList\" item=\"parentId\" open=\"(\" separator=\",\" close=\")\">" +
                            "#{parentId}" +
                            "</foreach>" +
                            "</script>"})
    @Results({
            @Result(column="id", jdbcType=JdbcType.BIGINT, id=true)
    })
    List<Long> getMenuChildIdParentBatch(@Param("parentIdList") List<Long> parentIdList);


    /**
     * 根据菜单id 批量删除菜单
     * @param idList 菜单id 列表
     */
    @Delete("<script>" +
            "delete from cscp_menus where id in" +
            "<foreach collection=\"idList\" item=\"id\" open=\"(\" separator=\",\" close=\")\">" +
            "#{id}" +
            "</foreach>" +
            "</script>")
    void deleteByPrimaryKeyBatch(@Param("idList") List<Long> idList);


    @Select({"select * from  cscp_menus where  id = #{parentId,jdbcType=BIGINT} order by orderby"})
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> selectIdByParentId(Long parentId);

    @Select({"select * from  cscp_menus where  id = #{parentId,jdbcType=BIGINT}"})
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    CscpMenus selectOneById(Long parentId);

    @Select({"select * from  cscp_menus where  parent_id = #{id,jdbcType=BIGINT} order by orderby"})
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> selectById(Long id);

    @Select({
            "select",
            "main_form_id",
            "from cscp_customize_vform",
            "where form_id = #{formId,jdbcType=BIGINT}"
    })
    Long selectMainFormIdByPrimaryKey(Long formId);


    @Select({
            "select",
            "main_page_id",
            "from cscp_customize_vpage",
            "where page_id = #{pageId,jdbcType=BIGINT}"
    })
    Long selectMainPageIdByPrimaryKey(Long pageId);

    @Select({
            "select",
            "t1.*",
            "from cscp_menus t1,cscp_customize_module t2",
            "where t1.id = t2.menu_id and t2.module_id = #{moduleId,jdbcType=VARCHAR}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="icon", property="icon", jdbcType=JdbcType.VARCHAR),
            @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
            @Result(column="url", property="url", jdbcType=JdbcType.VARCHAR),
            @Result(column="http_method", property="httpMethod", jdbcType=JdbcType.VARCHAR),
            @Result(column="component", property="component", jdbcType=JdbcType.VARCHAR),
            @Result(column="parent_id", property="parentId", jdbcType=JdbcType.BIGINT),
            @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
            @Result(column="permission_code", property="permissionCode", jdbcType=JdbcType.VARCHAR),
            @Result(column="orderby", property="orderby", jdbcType=JdbcType.BIGINT)
    })
    List<CscpMenus> qryMenuByModuleId(@Param("moduleId") String moduleId);
}