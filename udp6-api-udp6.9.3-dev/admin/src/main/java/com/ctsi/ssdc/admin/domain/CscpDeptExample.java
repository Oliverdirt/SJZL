package com.ctsi.ssdc.admin.domain;

import com.ctsi.ssdc.criteria.IntegerCriteria;
import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.criteria.ZonedDateTimeCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * @author ctsi-biyi-generator
*/
public class CscpDeptExample extends BaseExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private static final String LIKE_FORMAT = "%%%s%%";

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.dept_id
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private LongCriteria deptId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.parent_id
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private LongCriteria parentId;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.ancestors
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria ancestors;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.dept_name
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria deptName;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.order_num
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private IntegerCriteria orderNum;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.leader
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria leader;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.phone
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria phone;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.email
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria email;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.status
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria status;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.create_by
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria createBy;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.create_time
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private ZonedDateTimeCriteria createTime;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.update_by
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private StringCriteria updateBy;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.update_time
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private ZonedDateTimeCriteria updateTime;

    /**
     *
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database column cscp_dept.tenant_id
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private LongCriteria tenantId;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public CscpDeptExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public LongCriteria getDeptId() {
        return deptId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setDeptId(LongCriteria deptId) {
        this. deptId = deptId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildDeptIdCriteria(Criteria criteria) {
        if (this.getDeptId() == null) {
            return;
        }
        if (this.getDeptId().getEquals() != null) {
            criteria.andDeptIdEqualTo(this.getDeptId().getEquals());
        } else {
            if (this.getDeptId().getGreaterOrEqualThan() != null) {
                criteria.andDeptIdGreaterThanOrEqualTo(this.getDeptId().getGreaterOrEqualThan());
            }
            if (this.getDeptId().getLessOrEqualThan() != null) {
                criteria.andDeptIdLessThanOrEqualTo(this.getDeptId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public LongCriteria getParentId() {
        return parentId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setParentId(LongCriteria parentId) {
        this. parentId = parentId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildParentIdCriteria(Criteria criteria) {
        if (this.getParentId() == null) {
            return;
        }
        if (this.getParentId().getEquals() != null) {
            criteria.andParentIdEqualTo(this.getParentId().getEquals());
        } else {
            if (this.getParentId().getGreaterOrEqualThan() != null) {
                criteria.andParentIdGreaterThanOrEqualTo(this.getParentId().getGreaterOrEqualThan());
            }
            if (this.getParentId().getLessOrEqualThan() != null) {
                criteria.andParentIdLessThanOrEqualTo(this.getParentId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getAncestors() {
        return ancestors;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setAncestors(StringCriteria ancestors) {
        this. ancestors = ancestors;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildAncestorsCriteria(Criteria criteria) {
        if (this.getAncestors() == null) {
            return;
        }
        if (this.getAncestors().getEquals() != null) {
            criteria.andAncestorsEqualTo(this.getAncestors().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getAncestors().getContains())) {
                criteria.andAncestorsLike(String.format(LIKE_FORMAT, this.getAncestors().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getDeptName() {
        return deptName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setDeptName(StringCriteria deptName) {
        this. deptName = deptName;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildDeptNameCriteria(Criteria criteria) {
        if (this.getDeptName() == null) {
            return;
        }
        if (this.getDeptName().getEquals() != null) {
            criteria.andDeptNameEqualTo(this.getDeptName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getDeptName().getContains())) {
                criteria.andDeptNameLike(String.format(LIKE_FORMAT, this.getDeptName().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public IntegerCriteria getOrderNum() {
        return orderNum;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setOrderNum(IntegerCriteria orderNum) {
        this. orderNum = orderNum;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildOrderNumCriteria(Criteria criteria) {
        if (this.getOrderNum() == null) {
            return;
        }
        if (this.getOrderNum().getEquals() != null) {
            criteria.andOrderNumEqualTo(this.getOrderNum().getEquals());
        } else {
            if (this.getOrderNum().getGreaterOrEqualThan() != null) {
                criteria.andOrderNumGreaterThanOrEqualTo(this.getOrderNum().getGreaterOrEqualThan());
            }
            if (this.getOrderNum().getLessOrEqualThan() != null) {
                criteria.andOrderNumLessThanOrEqualTo(this.getOrderNum().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getLeader() {
        return leader;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setLeader(StringCriteria leader) {
        this. leader = leader;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildLeaderCriteria(Criteria criteria) {
        if (this.getLeader() == null) {
            return;
        }
        if (this.getLeader().getEquals() != null) {
            criteria.andLeaderEqualTo(this.getLeader().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getLeader().getContains())) {
                criteria.andLeaderLike(String.format(LIKE_FORMAT, this.getLeader().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getPhone() {
        return phone;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setPhone(StringCriteria phone) {
        this. phone = phone;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildPhoneCriteria(Criteria criteria) {
        if (this.getPhone() == null) {
            return;
        }
        if (this.getPhone().getEquals() != null) {
            criteria.andPhoneEqualTo(this.getPhone().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getPhone().getContains())) {
                criteria.andPhoneLike(String.format(LIKE_FORMAT, this.getPhone().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getEmail() {
        return email;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setEmail(StringCriteria email) {
        this. email = email;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildEmailCriteria(Criteria criteria) {
        if (this.getEmail() == null) {
            return;
        }
        if (this.getEmail().getEquals() != null) {
            criteria.andEmailEqualTo(this.getEmail().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getEmail().getContains())) {
                criteria.andEmailLike(String.format(LIKE_FORMAT, this.getEmail().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getStatus() {
        return status;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setStatus(StringCriteria status) {
        this. status = status;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildStatusCriteria(Criteria criteria) {
        if (this.getStatus() == null) {
            return;
        }
        if (this.getStatus().getEquals() != null) {
            criteria.andStatusEqualTo(this.getStatus().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getStatus().getContains())) {
                criteria.andStatusLike(String.format(LIKE_FORMAT, this.getStatus().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getCreateBy() {
        return createBy;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setCreateBy(StringCriteria createBy) {
        this. createBy = createBy;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildCreateByCriteria(Criteria criteria) {
        if (this.getCreateBy() == null) {
            return;
        }
        if (this.getCreateBy().getEquals() != null) {
            criteria.andCreateByEqualTo(this.getCreateBy().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getCreateBy().getContains())) {
                criteria.andCreateByLike(String.format(LIKE_FORMAT, this.getCreateBy().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public ZonedDateTimeCriteria getCreateTime() {
        return createTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setCreateTime(ZonedDateTimeCriteria createTime) {
        this. createTime = createTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildCreateTimeCriteria(Criteria criteria) {
        if (this.getCreateTime() == null) {
            return;
        }
        if (this.getCreateTime().getEquals() != null) {
            criteria.andCreateTimeEqualTo(this.getCreateTime().getEquals());
        } else {
            if (this.getCreateTime().getGreaterOrEqualThan() != null) {
                criteria.andCreateTimeGreaterThanOrEqualTo(this.getCreateTime().getGreaterOrEqualThan());
            }
            if (this.getCreateTime().getLessOrEqualThan() != null) {
                criteria.andCreateTimeLessThanOrEqualTo(this.getCreateTime().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public StringCriteria getUpdateBy() {
        return updateBy;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setUpdateBy(StringCriteria updateBy) {
        this. updateBy = updateBy;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildUpdateByCriteria(Criteria criteria) {
        if (this.getUpdateBy() == null) {
            return;
        }
        if (this.getUpdateBy().getEquals() != null) {
            criteria.andUpdateByEqualTo(this.getUpdateBy().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUpdateBy().getContains())) {
                criteria.andUpdateByLike(String.format(LIKE_FORMAT, this.getUpdateBy().getContains()));
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public ZonedDateTimeCriteria getUpdateTime() {
        return updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setUpdateTime(ZonedDateTimeCriteria updateTime) {
        this. updateTime = updateTime;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildUpdateTimeCriteria(Criteria criteria) {
        if (this.getUpdateTime() == null) {
            return;
        }
        if (this.getUpdateTime().getEquals() != null) {
            criteria.andUpdateTimeEqualTo(this.getUpdateTime().getEquals());
        } else {
            if (this.getUpdateTime().getGreaterOrEqualThan() != null) {
                criteria.andUpdateTimeGreaterThanOrEqualTo(this.getUpdateTime().getGreaterOrEqualThan());
            }
            if (this.getUpdateTime().getLessOrEqualThan() != null) {
                criteria.andUpdateTimeLessThanOrEqualTo(this.getUpdateTime().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public LongCriteria getTenantId() {
        return tenantId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public void setTenantId(LongCriteria tenantId) {
        this. tenantId = tenantId;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    private void buildTenantIdCriteria(Criteria criteria) {
        if (this.getTenantId() == null) {
            return;
        }
        if (this.getTenantId().getEquals() != null) {
            criteria.andTenantIdEqualTo(this.getTenantId().getEquals());
        } else {
            if (this.getTenantId().getGreaterOrEqualThan() != null) {
                criteria.andTenantIdGreaterThanOrEqualTo(this.getTenantId().getGreaterOrEqualThan());
            }
            if (this.getTenantId().getLessOrEqualThan() != null) {
                criteria.andTenantIdLessThanOrEqualTo(this.getTenantId().getLessOrEqualThan());
            }
        }
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildDeptIdCriteria(criteria);
        this.buildParentIdCriteria(criteria);
        this.buildAncestorsCriteria(criteria);
        this.buildDeptNameCriteria(criteria);
        this.buildOrderNumCriteria(criteria);
        this.buildLeaderCriteria(criteria);
        this.buildPhoneCriteria(criteria);
        this.buildEmailCriteria(criteria);
        this.buildStatusCriteria(criteria);
        this.buildCreateByCriteria(criteria);
        this.buildCreateTimeCriteria(criteria);
        this.buildUpdateByCriteria(criteria);
        this.buildUpdateTimeCriteria(criteria);
        this.buildTenantIdCriteria(criteria);
        return criteria;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDeptIdIsNull() {
            addCriterion("dept_id is null");
            return (Criteria) this;
        }

        public Criteria andDeptIdIsNotNull() {
            addCriterion("dept_id is not null");
            return (Criteria) this;
        }

        public Criteria andDeptIdEqualTo(Long value) {
            addCriterion("dept_id =", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotEqualTo(Long value) {
            addCriterion("dept_id <>", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThan(Long value) {
            addCriterion("dept_id >", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdGreaterThanOrEqualTo(Long value) {
            addCriterion("dept_id >=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThan(Long value) {
            addCriterion("dept_id <", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdLessThanOrEqualTo(Long value) {
            addCriterion("dept_id <=", value, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdIn(List<Long> values) {
            addCriterion("dept_id in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotIn(List<Long> values) {
            addCriterion("dept_id not in", values, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdBetween(Long value1, Long value2) {
            addCriterion("dept_id between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andDeptIdNotBetween(Long value1, Long value2) {
            addCriterion("dept_id not between", value1, value2, "deptId");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNull() {
            addCriterion("parent_id is null");
            return (Criteria) this;
        }

        public Criteria andParentIdIsNotNull() {
            addCriterion("parent_id is not null");
            return (Criteria) this;
        }

        public Criteria andParentIdEqualTo(Long value) {
            addCriterion("parent_id =", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotEqualTo(Long value) {
            addCriterion("parent_id <>", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThan(Long value) {
            addCriterion("parent_id >", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("parent_id >=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThan(Long value) {
            addCriterion("parent_id <", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdLessThanOrEqualTo(Long value) {
            addCriterion("parent_id <=", value, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdIn(List<Long> values) {
            addCriterion("parent_id in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotIn(List<Long> values) {
            addCriterion("parent_id not in", values, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdBetween(Long value1, Long value2) {
            addCriterion("parent_id between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andParentIdNotBetween(Long value1, Long value2) {
            addCriterion("parent_id not between", value1, value2, "parentId");
            return (Criteria) this;
        }

        public Criteria andAncestorsIsNull() {
            addCriterion("ancestors is null");
            return (Criteria) this;
        }

        public Criteria andAncestorsIsNotNull() {
            addCriterion("ancestors is not null");
            return (Criteria) this;
        }

        public Criteria andAncestorsEqualTo(String value) {
            addCriterion("ancestors =", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsNotEqualTo(String value) {
            addCriterion("ancestors <>", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsGreaterThan(String value) {
            addCriterion("ancestors >", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsGreaterThanOrEqualTo(String value) {
            addCriterion("ancestors >=", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsLessThan(String value) {
            addCriterion("ancestors <", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsLessThanOrEqualTo(String value) {
            addCriterion("ancestors <=", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsLike(String value) {
            addCriterion("ancestors like", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsNotLike(String value) {
            addCriterion("ancestors not like", value, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsIn(List<String> values) {
            addCriterion("ancestors in", values, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsNotIn(List<String> values) {
            addCriterion("ancestors not in", values, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsBetween(String value1, String value2) {
            addCriterion("ancestors between", value1, value2, "ancestors");
            return (Criteria) this;
        }

        public Criteria andAncestorsNotBetween(String value1, String value2) {
            addCriterion("ancestors not between", value1, value2, "ancestors");
            return (Criteria) this;
        }

        public Criteria andDeptNameIsNull() {
            addCriterion("dept_name is null");
            return (Criteria) this;
        }

        public Criteria andDeptNameIsNotNull() {
            addCriterion("dept_name is not null");
            return (Criteria) this;
        }

        public Criteria andDeptNameEqualTo(String value) {
            addCriterion("dept_name =", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameNotEqualTo(String value) {
            addCriterion("dept_name <>", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameGreaterThan(String value) {
            addCriterion("dept_name >", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameGreaterThanOrEqualTo(String value) {
            addCriterion("dept_name >=", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameLessThan(String value) {
            addCriterion("dept_name <", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameLessThanOrEqualTo(String value) {
            addCriterion("dept_name <=", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameLike(String value) {
            addCriterion("dept_name like", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameNotLike(String value) {
            addCriterion("dept_name not like", value, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameIn(List<String> values) {
            addCriterion("dept_name in", values, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameNotIn(List<String> values) {
            addCriterion("dept_name not in", values, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameBetween(String value1, String value2) {
            addCriterion("dept_name between", value1, value2, "deptName");
            return (Criteria) this;
        }

        public Criteria andDeptNameNotBetween(String value1, String value2) {
            addCriterion("dept_name not between", value1, value2, "deptName");
            return (Criteria) this;
        }

        public Criteria andOrderNumIsNull() {
            addCriterion("order_num is null");
            return (Criteria) this;
        }

        public Criteria andOrderNumIsNotNull() {
            addCriterion("order_num is not null");
            return (Criteria) this;
        }

        public Criteria andOrderNumEqualTo(Integer value) {
            addCriterion("order_num =", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotEqualTo(Integer value) {
            addCriterion("order_num <>", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThan(Integer value) {
            addCriterion("order_num >", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("order_num >=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThan(Integer value) {
            addCriterion("order_num <", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumLessThanOrEqualTo(Integer value) {
            addCriterion("order_num <=", value, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumIn(List<Integer> values) {
            addCriterion("order_num in", values, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotIn(List<Integer> values) {
            addCriterion("order_num not in", values, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumBetween(Integer value1, Integer value2) {
            addCriterion("order_num between", value1, value2, "orderNum");
            return (Criteria) this;
        }

        public Criteria andOrderNumNotBetween(Integer value1, Integer value2) {
            addCriterion("order_num not between", value1, value2, "orderNum");
            return (Criteria) this;
        }

        public Criteria andLeaderIsNull() {
            addCriterion("leader is null");
            return (Criteria) this;
        }

        public Criteria andLeaderIsNotNull() {
            addCriterion("leader is not null");
            return (Criteria) this;
        }

        public Criteria andLeaderEqualTo(String value) {
            addCriterion("leader =", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderNotEqualTo(String value) {
            addCriterion("leader <>", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderGreaterThan(String value) {
            addCriterion("leader >", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderGreaterThanOrEqualTo(String value) {
            addCriterion("leader >=", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderLessThan(String value) {
            addCriterion("leader <", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderLessThanOrEqualTo(String value) {
            addCriterion("leader <=", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderLike(String value) {
            addCriterion("leader like", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderNotLike(String value) {
            addCriterion("leader not like", value, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderIn(List<String> values) {
            addCriterion("leader in", values, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderNotIn(List<String> values) {
            addCriterion("leader not in", values, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderBetween(String value1, String value2) {
            addCriterion("leader between", value1, value2, "leader");
            return (Criteria) this;
        }

        public Criteria andLeaderNotBetween(String value1, String value2) {
            addCriterion("leader not between", value1, value2, "leader");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNull() {
            addCriterion("phone is null");
            return (Criteria) this;
        }

        public Criteria andPhoneIsNotNull() {
            addCriterion("phone is not null");
            return (Criteria) this;
        }

        public Criteria andPhoneEqualTo(String value) {
            addCriterion("phone =", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotEqualTo(String value) {
            addCriterion("phone <>", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThan(String value) {
            addCriterion("phone >", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneGreaterThanOrEqualTo(String value) {
            addCriterion("phone >=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThan(String value) {
            addCriterion("phone <", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLessThanOrEqualTo(String value) {
            addCriterion("phone <=", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneLike(String value) {
            addCriterion("phone like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotLike(String value) {
            addCriterion("phone not like", value, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneIn(List<String> values) {
            addCriterion("phone in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotIn(List<String> values) {
            addCriterion("phone not in", values, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneBetween(String value1, String value2) {
            addCriterion("phone between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andPhoneNotBetween(String value1, String value2) {
            addCriterion("phone not between", value1, value2, "phone");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("create_by is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("create_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(String value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(String value) {
            addCriterion("create_by <>", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(String value) {
            addCriterion("create_by >", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(String value) {
            addCriterion("create_by >=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(String value) {
            addCriterion("create_by <", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(String value) {
            addCriterion("create_by <=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLike(String value) {
            addCriterion("create_by like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotLike(String value) {
            addCriterion("create_by not like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<String> values) {
            addCriterion("create_by in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<String> values) {
            addCriterion("create_by not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(String value1, String value2) {
            addCriterion("create_by between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(String value1, String value2) {
            addCriterion("create_by not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(ZonedDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(ZonedDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<ZonedDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(String value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(String value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(String value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(String value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(String value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(String value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLike(String value) {
            addCriterion("update_by like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotLike(String value) {
            addCriterion("update_by not like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<String> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<String> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(String value1, String value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(String value1, String value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(ZonedDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(ZonedDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<ZonedDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(Long value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(Long value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(Long value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(Long value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(Long value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(Long value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<Long> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<Long> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(Long value1, Long value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(Long value1, Long value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cscp_dept
     *
     * @mbg.generated do_not_delete_during_merge Thu Jan 06 10:56:42 CST 2022
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table cscp_dept
     *
     * @mbg.generated Thu Jan 06 10:56:42 CST 2022
     */
    public static class Criterion {
        @ApiParam(hidden=true)
        private String condition;

        @ApiParam(hidden=true)
        private Object value;

        @ApiParam(hidden=true)
        private Object secondValue;

        @ApiParam(hidden=true)
        private boolean noValue;

        @ApiParam(hidden=true)
        private boolean singleValue;

        @ApiParam(hidden=true)
        private boolean betweenValue;

        @ApiParam(hidden=true)
        private boolean listValue;

        @ApiParam(hidden=true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}