package com.ctsi.ssdc.admin.domain;

import com.ctsi.ssdc.criteria.*;

import java.time.ZonedDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * CscpPostExample
 *
 * @author hx
 * @date 2022-08-31 15:23:50
 */

public class CscpPostExample extends BaseExample {


    protected org.springframework.data.domain.Pageable page;
    public void setPage(org.springframework.data.domain.Pageable page) {
        this.page = page;
    }
    public org.springframework.data.domain.Pageable getPage() {
        return page;
    }

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private static final String LIKE_FORMAT = "%%%s%%";


    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.post_id
     *
     * @date 2022-08-31 15:23:50
     */
    private LongCriteria postId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.post_code
     *
     * @date 2022-08-31 15:23:50
     */
    private StringCriteria postCode;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.post_name
     *
     * @date 2022-08-31 15:23:50
     */
    private StringCriteria postName;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.post_sort
     *
     * @date 2022-08-31 15:23:50
     */
    private IntegerCriteria postSort;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.status
     *
     * @date 2022-08-31 15:23:50
     */
    private StringCriteria status;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.create_by
     *
     * @date 2022-08-31 15:23:50
     */
    private StringCriteria createBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.create_time
     *
     * @date 2022-08-31 15:23:50
     */
    private ZonedDateTimeCriteria createTime;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.update_by
     *
     * @date 2022-08-31 15:23:50
     */
    private StringCriteria updateBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.update_time
     *
     * @date 2022-08-31 15:23:50
     */
    private ZonedDateTimeCriteria updateTime;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.remark
     *
     * @date 2022-08-31 15:23:50
     */
    private StringCriteria remark;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_post.tenant_id
     *
     * @date 2022-08-31 15:23:50
     */
    private LongCriteria tenantId;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public CscpPostExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public LongCriteria getPostId() {
        return postId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setPostId(LongCriteria postId) {
        this. postId = postId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildPostIdCriteria(Criteria criteria) {
        if (this.getPostId() == null) {
            return;
        }
        if (this.getPostId().getEquals() != null) {
            criteria.andPostIdEqualTo(this.getPostId().getEquals());
        } else {
            if (this.getPostId().getGreaterOrEqualThan() != null) {
                criteria.andPostIdGreaterThanOrEqualTo(this.getPostId().getGreaterOrEqualThan());
            }
            if (this.getPostId().getLessOrEqualThan() != null) {
                criteria.andPostIdLessThanOrEqualTo(this.getPostId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public StringCriteria getPostCode() {
        return postCode;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setPostCode(StringCriteria postCode) {
        this. postCode = postCode;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildPostCodeCriteria(Criteria criteria) {
        if (this.getPostCode() == null) {
            return;
        }
        if (this.getPostCode().getEquals() != null) {
            criteria.andPostCodeEqualTo(this.getPostCode().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getPostCode().getContains())) {
                criteria.andPostCodeLike(String.format(LIKE_FORMAT, this.getPostCode().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public StringCriteria getPostName() {
        return postName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setPostName(StringCriteria postName) {
        this. postName = postName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildPostNameCriteria(Criteria criteria) {
        if (this.getPostName() == null) {
            return;
        }
        if (this.getPostName().getEquals() != null) {
            criteria.andPostNameEqualTo(this.getPostName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getPostName().getContains())) {
                criteria.andPostNameLike(String.format(LIKE_FORMAT, this.getPostName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public IntegerCriteria getPostSort() {
        return postSort;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setPostSort(IntegerCriteria postSort) {
        this. postSort = postSort;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildPostSortCriteria(Criteria criteria) {
        if (this.getPostSort() == null) {
            return;
        }
        if (this.getPostSort().getEquals() != null) {
            criteria.andPostSortEqualTo(this.getPostSort().getEquals());
        } else {
            if (this.getPostSort().getGreaterOrEqualThan() != null) {
                criteria.andPostSortGreaterThanOrEqualTo(this.getPostSort().getGreaterOrEqualThan());
            }
            if (this.getPostSort().getLessOrEqualThan() != null) {
                criteria.andPostSortLessThanOrEqualTo(this.getPostSort().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public StringCriteria getStatus() {
        return status;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setStatus(StringCriteria status) {
        this. status = status;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildStatusCriteria(Criteria criteria) {
        if (this.getStatus() == null) {
            return;
        }
        if (this.getStatus().getEquals() != null) {
            criteria.andStatusEqualTo(this.getStatus().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getStatus().getContains())) {
                criteria.andStatusLike(String.format(LIKE_FORMAT, this.getStatus().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public StringCriteria getCreateBy() {
        return createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setCreateBy(StringCriteria createBy) {
        this. createBy = createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildCreateByCriteria(Criteria criteria) {
        if (this.getCreateBy() == null) {
            return;
        }
        if (this.getCreateBy().getEquals() != null) {
            criteria.andCreateByEqualTo(this.getCreateBy().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getCreateBy().getContains())) {
                criteria.andCreateByLike(String.format(LIKE_FORMAT, this.getCreateBy().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public ZonedDateTimeCriteria getCreateTime() {
        return createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setCreateTime(ZonedDateTimeCriteria createTime) {
        this. createTime = createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildCreateTimeCriteria(Criteria criteria) {
        if (this.getCreateTime() == null) {
            return;
        }
        if (this.getCreateTime().getEquals() != null) {
            criteria.andCreateTimeEqualTo(this.getCreateTime().getEquals());
        } else {
            if (this.getCreateTime().getGreaterOrEqualThan() != null) {
                criteria.andCreateTimeGreaterThanOrEqualTo(this.getCreateTime().getGreaterOrEqualThan());
            }
            if (this.getCreateTime().getLessOrEqualThan() != null) {
                criteria.andCreateTimeLessThanOrEqualTo(this.getCreateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public StringCriteria getUpdateBy() {
        return updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setUpdateBy(StringCriteria updateBy) {
        this. updateBy = updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildUpdateByCriteria(Criteria criteria) {
        if (this.getUpdateBy() == null) {
            return;
        }
        if (this.getUpdateBy().getEquals() != null) {
            criteria.andUpdateByEqualTo(this.getUpdateBy().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUpdateBy().getContains())) {
                criteria.andUpdateByLike(String.format(LIKE_FORMAT, this.getUpdateBy().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public ZonedDateTimeCriteria getUpdateTime() {
        return updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setUpdateTime(ZonedDateTimeCriteria updateTime) {
        this. updateTime = updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildUpdateTimeCriteria(Criteria criteria) {
        if (this.getUpdateTime() == null) {
            return;
        }
        if (this.getUpdateTime().getEquals() != null) {
            criteria.andUpdateTimeEqualTo(this.getUpdateTime().getEquals());
        } else {
            if (this.getUpdateTime().getGreaterOrEqualThan() != null) {
                criteria.andUpdateTimeGreaterThanOrEqualTo(this.getUpdateTime().getGreaterOrEqualThan());
            }
            if (this.getUpdateTime().getLessOrEqualThan() != null) {
                criteria.andUpdateTimeLessThanOrEqualTo(this.getUpdateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public StringCriteria getRemark() {
        return remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setRemark(StringCriteria remark) {
        this. remark = remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildRemarkCriteria(Criteria criteria) {
        if (this.getRemark() == null) {
            return;
        }
        if (this.getRemark().getEquals() != null) {
            criteria.andRemarkEqualTo(this.getRemark().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getRemark().getContains())) {
                criteria.andRemarkLike(String.format(LIKE_FORMAT, this.getRemark().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public LongCriteria getTenantId() {
        return tenantId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public void setTenantId(LongCriteria tenantId) {
        this. tenantId = tenantId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    private void buildTenantIdCriteria(Criteria criteria) {
        if (this.getTenantId() == null) {
            return;
        }
        if (this.getTenantId().getEquals() != null) {
            criteria.andTenantIdEqualTo(this.getTenantId().getEquals());
        } else {
            if (this.getTenantId().getGreaterOrEqualThan() != null) {
                criteria.andTenantIdGreaterThanOrEqualTo(this.getTenantId().getGreaterOrEqualThan());
            }
            if (this.getTenantId().getLessOrEqualThan() != null) {
                criteria.andTenantIdLessThanOrEqualTo(this.getTenantId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_form_column
     *
     * @date Thu Feb 17 14:02:06 CST 2022
     */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildPostIdCriteria(criteria);
        this.buildPostCodeCriteria(criteria);
        this.buildPostNameCriteria(criteria);
        this.buildPostSortCriteria(criteria);
        this.buildStatusCriteria(criteria);
        this.buildCreateByCriteria(criteria);
        this.buildCreateTimeCriteria(criteria);
        this.buildUpdateByCriteria(criteria);
        this.buildUpdateTimeCriteria(criteria);
        this.buildRemarkCriteria(criteria);
        this.buildTenantIdCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andPostIdIsNull() {
            addCriterion("post_id is null");
            return (Criteria) this;
        }

        public Criteria andPostIdIsNotNull() {
            addCriterion("post_id is not null");
            return (Criteria) this;
        }

        public Criteria andPostIdEqualTo(Long value) {
            addCriterion("post_id =", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotEqualTo(Long value) {
            addCriterion("post_id <>", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdGreaterThan(Long value) {
            addCriterion("post_id >", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdGreaterThanOrEqualTo(Long value) {
            addCriterion("post_id >=", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdLessThan(Long value) {
            addCriterion("post_id <", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdLessThanOrEqualTo(Long value) {
            addCriterion("post_id <=", value, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdIn(List<Long> values) {
            addCriterion("post_id in", values, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotIn(List<Long> values) {
            addCriterion("post_id not in", values, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdBetween(Long value1, Long value2) {
            addCriterion("post_id between", value1, value2, "postId");
            return (Criteria) this;
        }

        public Criteria andPostIdNotBetween(Long value1, Long value2) {
            addCriterion("post_id not between", value1, value2, "postId");
            return (Criteria) this;
        }

        public Criteria andPostCodeIsNull() {
            addCriterion("post_code is null");
            return (Criteria) this;
        }

        public Criteria andPostCodeIsNotNull() {
            addCriterion("post_code is not null");
            return (Criteria) this;
        }

        public Criteria andPostCodeEqualTo(String value) {
            addCriterion("post_code =", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeNotEqualTo(String value) {
            addCriterion("post_code <>", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeGreaterThan(String value) {
            addCriterion("post_code >", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeGreaterThanOrEqualTo(String value) {
            addCriterion("post_code >=", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeLessThan(String value) {
            addCriterion("post_code <", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeLessThanOrEqualTo(String value) {
            addCriterion("post_code <=", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeLike(String value) {
            addCriterion("post_code like", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeNotLike(String value) {
            addCriterion("post_code not like", value, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeIn(List<String> values) {
            addCriterion("post_code in", values, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeNotIn(List<String> values) {
            addCriterion("post_code not in", values, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeBetween(String value1, String value2) {
            addCriterion("post_code between", value1, value2, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostCodeNotBetween(String value1, String value2) {
            addCriterion("post_code not between", value1, value2, "postCode");
            return (Criteria) this;
        }

        public Criteria andPostNameIsNull() {
            addCriterion("post_name is null");
            return (Criteria) this;
        }

        public Criteria andPostNameIsNotNull() {
            addCriterion("post_name is not null");
            return (Criteria) this;
        }

        public Criteria andPostNameEqualTo(String value) {
            addCriterion("post_name =", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameNotEqualTo(String value) {
            addCriterion("post_name <>", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameGreaterThan(String value) {
            addCriterion("post_name >", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameGreaterThanOrEqualTo(String value) {
            addCriterion("post_name >=", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameLessThan(String value) {
            addCriterion("post_name <", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameLessThanOrEqualTo(String value) {
            addCriterion("post_name <=", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameLike(String value) {
            addCriterion("post_name like", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameNotLike(String value) {
            addCriterion("post_name not like", value, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameIn(List<String> values) {
            addCriterion("post_name in", values, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameNotIn(List<String> values) {
            addCriterion("post_name not in", values, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameBetween(String value1, String value2) {
            addCriterion("post_name between", value1, value2, "postName");
            return (Criteria) this;
        }

        public Criteria andPostNameNotBetween(String value1, String value2) {
            addCriterion("post_name not between", value1, value2, "postName");
            return (Criteria) this;
        }

        public Criteria andPostSortIsNull() {
            addCriterion("post_sort is null");
            return (Criteria) this;
        }

        public Criteria andPostSortIsNotNull() {
            addCriterion("post_sort is not null");
            return (Criteria) this;
        }

        public Criteria andPostSortEqualTo(Integer value) {
            addCriterion("post_sort =", value, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortNotEqualTo(Integer value) {
            addCriterion("post_sort <>", value, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortGreaterThan(Integer value) {
            addCriterion("post_sort >", value, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortGreaterThanOrEqualTo(Integer value) {
            addCriterion("post_sort >=", value, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortLessThan(Integer value) {
            addCriterion("post_sort <", value, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortLessThanOrEqualTo(Integer value) {
            addCriterion("post_sort <=", value, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortIn(List<Integer> values) {
            addCriterion("post_sort in", values, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortNotIn(List<Integer> values) {
            addCriterion("post_sort not in", values, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortBetween(Integer value1, Integer value2) {
            addCriterion("post_sort between", value1, value2, "postSort");
            return (Criteria) this;
        }

        public Criteria andPostSortNotBetween(Integer value1, Integer value2) {
            addCriterion("post_sort not between", value1, value2, "postSort");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("create_by is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("create_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(String value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(String value) {
            addCriterion("create_by <>", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(String value) {
            addCriterion("create_by >", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(String value) {
            addCriterion("create_by >=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(String value) {
            addCriterion("create_by <", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(String value) {
            addCriterion("create_by <=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLike(String value) {
            addCriterion("create_by like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotLike(String value) {
            addCriterion("create_by not like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<String> values) {
            addCriterion("create_by in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<String> values) {
            addCriterion("create_by not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(String value1, String value2) {
            addCriterion("create_by between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(String value1, String value2) {
            addCriterion("create_by not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(ZonedDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(ZonedDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<ZonedDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(String value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(String value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(String value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(String value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(String value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(String value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLike(String value) {
            addCriterion("update_by like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotLike(String value) {
            addCriterion("update_by not like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<String> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<String> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(String value1, String value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(String value1, String value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(ZonedDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(ZonedDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<ZonedDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNull() {
            addCriterion("tenant_id is null");
            return (Criteria) this;
        }

        public Criteria andTenantIdIsNotNull() {
            addCriterion("tenant_id is not null");
            return (Criteria) this;
        }

        public Criteria andTenantIdEqualTo(Long value) {
            addCriterion("tenant_id =", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotEqualTo(Long value) {
            addCriterion("tenant_id <>", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThan(Long value) {
            addCriterion("tenant_id >", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdGreaterThanOrEqualTo(Long value) {
            addCriterion("tenant_id >=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThan(Long value) {
            addCriterion("tenant_id <", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdLessThanOrEqualTo(Long value) {
            addCriterion("tenant_id <=", value, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdIn(List<Long> values) {
            addCriterion("tenant_id in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotIn(List<Long> values) {
            addCriterion("tenant_id not in", values, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdBetween(Long value1, Long value2) {
            addCriterion("tenant_id between", value1, value2, "tenantId");
            return (Criteria) this;
        }

        public Criteria andTenantIdNotBetween(Long value1, Long value2) {
            addCriterion("tenant_id not between", value1, value2, "tenantId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_post
     *
     * @date do_not_delete_during_merge 2022-08-31 15:23:50
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_post
     *
     * @date 2022-08-31 15:23:50
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
