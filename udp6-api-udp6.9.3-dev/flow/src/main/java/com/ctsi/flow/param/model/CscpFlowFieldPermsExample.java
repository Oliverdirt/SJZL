package com.ctsi.flow.param.model;

import com.ctsi.ssdc.criteria.*;

import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * CscpFlowFieldPermsExample
 *
 * @author hx
 * @date 2022-10-24 15:47:57
 */

public class CscpFlowFieldPermsExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    private static final String LIKE_FORMAT = "%%%s%%";


        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_flow_field_perms.id
         *
         * @date 2022-10-24 15:47:57
         */
    private LongCriteria id;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_flow_field_perms.field_perms
         *
         * @date 2022-10-24 15:47:57
         */
    private StringCriteria fieldPerms;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_flow_field_perms.form_id
         *
         * @date 2022-10-24 15:47:57
         */
    private StringCriteria formId;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_flow_field_perms.field_name
         *
         * @date 2022-10-24 15:47:57
         */
    private StringCriteria fieldName;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_flow_field_perms.task_definition_key
         *
         * @date 2022-10-24 15:47:57
         */
    private StringCriteria taskDefinitionKey;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column cscp_flow_field_perms.task_definition_name
         *
         * @date 2022-10-24 15:47:57
         */
    private StringCriteria taskDefinitionName;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public CscpFlowFieldPermsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public LongCriteria getId() {
        return id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void setId(LongCriteria id) {
        this. id = id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    private void buildIdCriteria(Criteria criteria) {
        if (this.getId() == null) {
            return;
        }
        if (this.getId().getEquals() != null) {
            criteria.andIdEqualTo(this.getId().getEquals());
        } else {
            if (this.getId().getGreaterOrEqualThan() != null) {
                criteria.andIdGreaterThanOrEqualTo(this.getId().getGreaterOrEqualThan());
            }
            if (this.getId().getLessOrEqualThan() != null) {
                criteria.andIdLessThanOrEqualTo(this.getId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public StringCriteria getFieldPerms() {
        return fieldPerms;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void setFieldPerms(StringCriteria fieldPerms) {
        this. fieldPerms = fieldPerms;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    private void buildFieldPermsCriteria(Criteria criteria) {
        if (this.getFieldPerms() == null) {
            return;
        }
        if (this.getFieldPerms().getEquals() != null) {
            criteria.andFieldPermsEqualTo(this.getFieldPerms().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldPerms().getContains())) {
                criteria.andFieldPermsLike(String.format(LIKE_FORMAT, this.getFieldPerms().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public StringCriteria getFormId() {
        return formId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void setFormId(StringCriteria formId) {
        this. formId = formId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    private void buildFormIdCriteria(Criteria criteria) {
        if (this.getFormId() == null) {
            return;
        }
        if (this.getFormId().getEquals() != null) {
            criteria.andFormIdEqualTo(this.getFormId().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFormId().getContains())) {
                criteria.andFormIdLike(String.format(LIKE_FORMAT, this.getFormId().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public StringCriteria getFieldName() {
        return fieldName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void setFieldName(StringCriteria fieldName) {
        this. fieldName = fieldName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    private void buildFieldNameCriteria(Criteria criteria) {
        if (this.getFieldName() == null) {
            return;
        }
        if (this.getFieldName().getEquals() != null) {
            criteria.andFieldNameEqualTo(this.getFieldName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFieldName().getContains())) {
                criteria.andFieldNameLike(String.format(LIKE_FORMAT, this.getFieldName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public StringCriteria getTaskDefinitionKey() {
        return taskDefinitionKey;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void setTaskDefinitionKey(StringCriteria taskDefinitionKey) {
        this. taskDefinitionKey = taskDefinitionKey;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    private void buildTaskDefinitionKeyCriteria(Criteria criteria) {
        if (this.getTaskDefinitionKey() == null) {
            return;
        }
        if (this.getTaskDefinitionKey().getEquals() != null) {
            criteria.andTaskDefinitionKeyEqualTo(this.getTaskDefinitionKey().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getTaskDefinitionKey().getContains())) {
                criteria.andTaskDefinitionKeyLike(String.format(LIKE_FORMAT, this.getTaskDefinitionKey().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public StringCriteria getTaskDefinitionName() {
        return taskDefinitionName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public void setTaskDefinitionName(StringCriteria taskDefinitionName) {
        this. taskDefinitionName = taskDefinitionName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    private void buildTaskDefinitionNameCriteria(Criteria criteria) {
        if (this.getTaskDefinitionName() == null) {
            return;
        }
        if (this.getTaskDefinitionName().getEquals() != null) {
            criteria.andTaskDefinitionNameEqualTo(this.getTaskDefinitionName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getTaskDefinitionName().getContains())) {
                criteria.andTaskDefinitionNameLike(String.format(LIKE_FORMAT, this.getTaskDefinitionName().getContains()));
            }
        }
    }
    /**
      * This method was generated by  Generator.
      * This method corresponds to the database table cscp_hx_form_column
      *
      * @date Thu Feb 17 14:02:06 CST 2022
      */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildIdCriteria(criteria);
        this.buildFieldPermsCriteria(criteria);
        this.buildFormIdCriteria(criteria);
        this.buildFieldNameCriteria(criteria);
        this.buildTaskDefinitionKeyCriteria(criteria);
        this.buildTaskDefinitionNameCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andFieldPermsIsNull() {
            addCriterion("field_perms is null");
            return (Criteria) this;
        }

        public Criteria andFieldPermsIsNotNull() {
            addCriterion("field_perms is not null");
            return (Criteria) this;
        }

        public Criteria andFieldPermsEqualTo(String value) {
            addCriterion("field_perms =", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsNotEqualTo(String value) {
            addCriterion("field_perms <>", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsGreaterThan(String value) {
            addCriterion("field_perms >", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsGreaterThanOrEqualTo(String value) {
            addCriterion("field_perms >=", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsLessThan(String value) {
            addCriterion("field_perms <", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsLessThanOrEqualTo(String value) {
            addCriterion("field_perms <=", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsLike(String value) {
            addCriterion("field_perms like", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsNotLike(String value) {
            addCriterion("field_perms not like", value, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsIn(List<String> values) {
            addCriterion("field_perms in", values, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsNotIn(List<String> values) {
            addCriterion("field_perms not in", values, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsBetween(String value1, String value2) {
            addCriterion("field_perms between", value1, value2, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFieldPermsNotBetween(String value1, String value2) {
            addCriterion("field_perms not between", value1, value2, "fieldPerms");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNull() {
            addCriterion("form_id is null");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNotNull() {
            addCriterion("form_id is not null");
            return (Criteria) this;
        }

        public Criteria andFormIdEqualTo(String value) {
            addCriterion("form_id =", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotEqualTo(String value) {
            addCriterion("form_id <>", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThan(String value) {
            addCriterion("form_id >", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThanOrEqualTo(String value) {
            addCriterion("form_id >=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThan(String value) {
            addCriterion("form_id <", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThanOrEqualTo(String value) {
            addCriterion("form_id <=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLike(String value) {
            addCriterion("form_id like", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotLike(String value) {
            addCriterion("form_id not like", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdIn(List<String> values) {
            addCriterion("form_id in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotIn(List<String> values) {
            addCriterion("form_id not in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdBetween(String value1, String value2) {
            addCriterion("form_id between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotBetween(String value1, String value2) {
            addCriterion("form_id not between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andFieldNameIsNull() {
            addCriterion("field_name is null");
            return (Criteria) this;
        }

        public Criteria andFieldNameIsNotNull() {
            addCriterion("field_name is not null");
            return (Criteria) this;
        }

        public Criteria andFieldNameEqualTo(String value) {
            addCriterion("field_name =", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotEqualTo(String value) {
            addCriterion("field_name <>", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameGreaterThan(String value) {
            addCriterion("field_name >", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameGreaterThanOrEqualTo(String value) {
            addCriterion("field_name >=", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLessThan(String value) {
            addCriterion("field_name <", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLessThanOrEqualTo(String value) {
            addCriterion("field_name <=", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameLike(String value) {
            addCriterion("field_name like", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotLike(String value) {
            addCriterion("field_name not like", value, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameIn(List<String> values) {
            addCriterion("field_name in", values, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotIn(List<String> values) {
            addCriterion("field_name not in", values, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameBetween(String value1, String value2) {
            addCriterion("field_name between", value1, value2, "fieldName");
            return (Criteria) this;
        }

        public Criteria andFieldNameNotBetween(String value1, String value2) {
            addCriterion("field_name not between", value1, value2, "fieldName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyIsNull() {
            addCriterion("task_definition_key is null");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyIsNotNull() {
            addCriterion("task_definition_key is not null");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyEqualTo(String value) {
            addCriterion("task_definition_key =", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyNotEqualTo(String value) {
            addCriterion("task_definition_key <>", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyGreaterThan(String value) {
            addCriterion("task_definition_key >", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyGreaterThanOrEqualTo(String value) {
            addCriterion("task_definition_key >=", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyLessThan(String value) {
            addCriterion("task_definition_key <", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyLessThanOrEqualTo(String value) {
            addCriterion("task_definition_key <=", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyLike(String value) {
            addCriterion("task_definition_key like", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyNotLike(String value) {
            addCriterion("task_definition_key not like", value, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyIn(List<String> values) {
            addCriterion("task_definition_key in", values, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyNotIn(List<String> values) {
            addCriterion("task_definition_key not in", values, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyBetween(String value1, String value2) {
            addCriterion("task_definition_key between", value1, value2, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionKeyNotBetween(String value1, String value2) {
            addCriterion("task_definition_key not between", value1, value2, "taskDefinitionKey");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameIsNull() {
            addCriterion("task_definition_name is null");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameIsNotNull() {
            addCriterion("task_definition_name is not null");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameEqualTo(String value) {
            addCriterion("task_definition_name =", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameNotEqualTo(String value) {
            addCriterion("task_definition_name <>", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameGreaterThan(String value) {
            addCriterion("task_definition_name >", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameGreaterThanOrEqualTo(String value) {
            addCriterion("task_definition_name >=", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameLessThan(String value) {
            addCriterion("task_definition_name <", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameLessThanOrEqualTo(String value) {
            addCriterion("task_definition_name <=", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameLike(String value) {
            addCriterion("task_definition_name like", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameNotLike(String value) {
            addCriterion("task_definition_name not like", value, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameIn(List<String> values) {
            addCriterion("task_definition_name in", values, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameNotIn(List<String> values) {
            addCriterion("task_definition_name not in", values, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameBetween(String value1, String value2) {
            addCriterion("task_definition_name between", value1, value2, "taskDefinitionName");
            return (Criteria) this;
        }

        public Criteria andTaskDefinitionNameNotBetween(String value1, String value2) {
            addCriterion("task_definition_name not between", value1, value2, "taskDefinitionName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_flow_field_perms
     *
     * @date do_not_delete_during_merge 2022-10-24 15:47:57
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
