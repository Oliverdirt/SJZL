package com.ctsi.flow.approve.domain;

import com.ctsi.ssdc.criteria.*;

import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * ApproveExample
 *
 * @author hx
 * @date 2022-11-03 19:50:16
 */

public class ApproveExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private static final String LIKE_FORMAT = "%%%s%%";


        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column approve.id
         *
         * @date 2022-11-03 19:50:16
         */
    private LongCriteria id;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column approve.day
         *
         * @date 2022-11-03 19:50:16
         */
    private IntegerCriteria day;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column approve.reason
         *
         * @date 2022-11-03 19:50:16
         */
    private StringCriteria reason;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column approve.from_area
         *
         * @date 2022-11-03 19:50:16
         */
    private StringCriteria fromArea;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column approve.to_area
         *
         * @date 2022-11-03 19:50:16
         */
    private StringCriteria toArea;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column approve.user_id
         *
         * @date 2022-11-03 19:50:16
         */
    private IntegerCriteria userId;

        /**
         *
         * This field was generated by  Generator.
         * This field corresponds to the database column approve.instance_id
         *
         * @date 2022-11-03 19:50:16
         */
    private StringCriteria instanceId;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public ApproveExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public LongCriteria getId() {
        return id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setId(LongCriteria id) {
        this. id = id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private void buildIdCriteria(Criteria criteria) {
        if (this.getId() == null) {
            return;
        }
        if (this.getId().getEquals() != null) {
            criteria.andIdEqualTo(this.getId().getEquals());
        } else {
            if (this.getId().getGreaterOrEqualThan() != null) {
                criteria.andIdGreaterThanOrEqualTo(this.getId().getGreaterOrEqualThan());
            }
            if (this.getId().getLessOrEqualThan() != null) {
                criteria.andIdLessThanOrEqualTo(this.getId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public IntegerCriteria getDay() {
        return day;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setDay(IntegerCriteria day) {
        this. day = day;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private void buildDayCriteria(Criteria criteria) {
        if (this.getDay() == null) {
            return;
        }
        if (this.getDay().getEquals() != null) {
            criteria.andDayEqualTo(this.getDay().getEquals());
        } else {
            if (this.getDay().getGreaterOrEqualThan() != null) {
                criteria.andDayGreaterThanOrEqualTo(this.getDay().getGreaterOrEqualThan());
            }
            if (this.getDay().getLessOrEqualThan() != null) {
                criteria.andDayLessThanOrEqualTo(this.getDay().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public StringCriteria getReason() {
        return reason;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setReason(StringCriteria reason) {
        this. reason = reason;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private void buildReasonCriteria(Criteria criteria) {
        if (this.getReason() == null) {
            return;
        }
        if (this.getReason().getEquals() != null) {
            criteria.andReasonEqualTo(this.getReason().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getReason().getContains())) {
                criteria.andReasonLike(String.format(LIKE_FORMAT, this.getReason().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public StringCriteria getFromArea() {
        return fromArea;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setFromArea(StringCriteria fromArea) {
        this. fromArea = fromArea;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private void buildFromAreaCriteria(Criteria criteria) {
        if (this.getFromArea() == null) {
            return;
        }
        if (this.getFromArea().getEquals() != null) {
            criteria.andFromAreaEqualTo(this.getFromArea().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFromArea().getContains())) {
                criteria.andFromAreaLike(String.format(LIKE_FORMAT, this.getFromArea().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public StringCriteria getToArea() {
        return toArea;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setToArea(StringCriteria toArea) {
        this. toArea = toArea;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private void buildToAreaCriteria(Criteria criteria) {
        if (this.getToArea() == null) {
            return;
        }
        if (this.getToArea().getEquals() != null) {
            criteria.andToAreaEqualTo(this.getToArea().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getToArea().getContains())) {
                criteria.andToAreaLike(String.format(LIKE_FORMAT, this.getToArea().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public IntegerCriteria getUserId() {
        return userId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setUserId(IntegerCriteria userId) {
        this. userId = userId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private void buildUserIdCriteria(Criteria criteria) {
        if (this.getUserId() == null) {
            return;
        }
        if (this.getUserId().getEquals() != null) {
            criteria.andUserIdEqualTo(this.getUserId().getEquals());
        } else {
            if (this.getUserId().getGreaterOrEqualThan() != null) {
                criteria.andUserIdGreaterThanOrEqualTo(this.getUserId().getGreaterOrEqualThan());
            }
            if (this.getUserId().getLessOrEqualThan() != null) {
                criteria.andUserIdLessThanOrEqualTo(this.getUserId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public StringCriteria getInstanceId() {
        return instanceId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    public void setInstanceId(StringCriteria instanceId) {
        this. instanceId = instanceId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table approve
     *
     * @date 2022-11-03 19:50:16
     */
    private void buildInstanceIdCriteria(Criteria criteria) {
        if (this.getInstanceId() == null) {
            return;
        }
        if (this.getInstanceId().getEquals() != null) {
            criteria.andInstanceIdEqualTo(this.getInstanceId().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getInstanceId().getContains())) {
                criteria.andInstanceIdLike(String.format(LIKE_FORMAT, this.getInstanceId().getContains()));
            }
        }
    }
    /**
      * This method was generated by  Generator.
      * This method corresponds to the database table cscp_hx_form_column
      *
      * @date Thu Feb 17 14:02:06 CST 2022
      */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildIdCriteria(criteria);
        this.buildDayCriteria(criteria);
        this.buildReasonCriteria(criteria);
        this.buildFromAreaCriteria(criteria);
        this.buildToAreaCriteria(criteria);
        this.buildUserIdCriteria(criteria);
        this.buildInstanceIdCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDayIsNull() {
            addCriterion("day is null");
            return (Criteria) this;
        }

        public Criteria andDayIsNotNull() {
            addCriterion("day is not null");
            return (Criteria) this;
        }

        public Criteria andDayEqualTo(Integer value) {
            addCriterion("day =", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayNotEqualTo(Integer value) {
            addCriterion("day <>", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayGreaterThan(Integer value) {
            addCriterion("day >", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayGreaterThanOrEqualTo(Integer value) {
            addCriterion("day >=", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayLessThan(Integer value) {
            addCriterion("day <", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayLessThanOrEqualTo(Integer value) {
            addCriterion("day <=", value, "day");
            return (Criteria) this;
        }

        public Criteria andDayIn(List<Integer> values) {
            addCriterion("day in", values, "day");
            return (Criteria) this;
        }

        public Criteria andDayNotIn(List<Integer> values) {
            addCriterion("day not in", values, "day");
            return (Criteria) this;
        }

        public Criteria andDayBetween(Integer value1, Integer value2) {
            addCriterion("day between", value1, value2, "day");
            return (Criteria) this;
        }

        public Criteria andDayNotBetween(Integer value1, Integer value2) {
            addCriterion("day not between", value1, value2, "day");
            return (Criteria) this;
        }

        public Criteria andReasonIsNull() {
            addCriterion("reason is null");
            return (Criteria) this;
        }

        public Criteria andReasonIsNotNull() {
            addCriterion("reason is not null");
            return (Criteria) this;
        }

        public Criteria andReasonEqualTo(String value) {
            addCriterion("reason =", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotEqualTo(String value) {
            addCriterion("reason <>", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonGreaterThan(String value) {
            addCriterion("reason >", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonGreaterThanOrEqualTo(String value) {
            addCriterion("reason >=", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLessThan(String value) {
            addCriterion("reason <", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLessThanOrEqualTo(String value) {
            addCriterion("reason <=", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonLike(String value) {
            addCriterion("reason like", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotLike(String value) {
            addCriterion("reason not like", value, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonIn(List<String> values) {
            addCriterion("reason in", values, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotIn(List<String> values) {
            addCriterion("reason not in", values, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonBetween(String value1, String value2) {
            addCriterion("reason between", value1, value2, "reason");
            return (Criteria) this;
        }

        public Criteria andReasonNotBetween(String value1, String value2) {
            addCriterion("reason not between", value1, value2, "reason");
            return (Criteria) this;
        }

        public Criteria andFromAreaIsNull() {
            addCriterion("from_area is null");
            return (Criteria) this;
        }

        public Criteria andFromAreaIsNotNull() {
            addCriterion("from_area is not null");
            return (Criteria) this;
        }

        public Criteria andFromAreaEqualTo(String value) {
            addCriterion("from_area =", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaNotEqualTo(String value) {
            addCriterion("from_area <>", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaGreaterThan(String value) {
            addCriterion("from_area >", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaGreaterThanOrEqualTo(String value) {
            addCriterion("from_area >=", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaLessThan(String value) {
            addCriterion("from_area <", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaLessThanOrEqualTo(String value) {
            addCriterion("from_area <=", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaLike(String value) {
            addCriterion("from_area like", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaNotLike(String value) {
            addCriterion("from_area not like", value, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaIn(List<String> values) {
            addCriterion("from_area in", values, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaNotIn(List<String> values) {
            addCriterion("from_area not in", values, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaBetween(String value1, String value2) {
            addCriterion("from_area between", value1, value2, "fromArea");
            return (Criteria) this;
        }

        public Criteria andFromAreaNotBetween(String value1, String value2) {
            addCriterion("from_area not between", value1, value2, "fromArea");
            return (Criteria) this;
        }

        public Criteria andToAreaIsNull() {
            addCriterion("to_area is null");
            return (Criteria) this;
        }

        public Criteria andToAreaIsNotNull() {
            addCriterion("to_area is not null");
            return (Criteria) this;
        }

        public Criteria andToAreaEqualTo(String value) {
            addCriterion("to_area =", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaNotEqualTo(String value) {
            addCriterion("to_area <>", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaGreaterThan(String value) {
            addCriterion("to_area >", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaGreaterThanOrEqualTo(String value) {
            addCriterion("to_area >=", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaLessThan(String value) {
            addCriterion("to_area <", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaLessThanOrEqualTo(String value) {
            addCriterion("to_area <=", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaLike(String value) {
            addCriterion("to_area like", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaNotLike(String value) {
            addCriterion("to_area not like", value, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaIn(List<String> values) {
            addCriterion("to_area in", values, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaNotIn(List<String> values) {
            addCriterion("to_area not in", values, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaBetween(String value1, String value2) {
            addCriterion("to_area between", value1, value2, "toArea");
            return (Criteria) this;
        }

        public Criteria andToAreaNotBetween(String value1, String value2) {
            addCriterion("to_area not between", value1, value2, "toArea");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdIsNull() {
            addCriterion("instance_id is null");
            return (Criteria) this;
        }

        public Criteria andInstanceIdIsNotNull() {
            addCriterion("instance_id is not null");
            return (Criteria) this;
        }

        public Criteria andInstanceIdEqualTo(String value) {
            addCriterion("instance_id =", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdNotEqualTo(String value) {
            addCriterion("instance_id <>", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdGreaterThan(String value) {
            addCriterion("instance_id >", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdGreaterThanOrEqualTo(String value) {
            addCriterion("instance_id >=", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdLessThan(String value) {
            addCriterion("instance_id <", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdLessThanOrEqualTo(String value) {
            addCriterion("instance_id <=", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdLike(String value) {
            addCriterion("instance_id like", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdNotLike(String value) {
            addCriterion("instance_id not like", value, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdIn(List<String> values) {
            addCriterion("instance_id in", values, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdNotIn(List<String> values) {
            addCriterion("instance_id not in", values, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdBetween(String value1, String value2) {
            addCriterion("instance_id between", value1, value2, "instanceId");
            return (Criteria) this;
        }

        public Criteria andInstanceIdNotBetween(String value1, String value2) {
            addCriterion("instance_id not between", value1, value2, "instanceId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  approve
     *
     * @date do_not_delete_during_merge 2022-11-03 19:50:16
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  approve
     *
     * @date 2022-11-03 19:50:16
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
