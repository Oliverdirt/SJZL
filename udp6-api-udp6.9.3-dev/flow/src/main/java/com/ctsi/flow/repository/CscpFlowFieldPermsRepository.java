package com.ctsi.flow.repository;

import com.ctsi.flow.param.model.CscpFlowFieldPerms;
import com.ctsi.flow.param.model.CscpFlowFieldPermsExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

/**
 * CscpFlowFieldPermsRepository
 *
 * @author hx
 * @date 2022-10-24 15:47:57
 */

@Mapper
public interface CscpFlowFieldPermsRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpFlowFieldPerms, Long, CscpFlowFieldPermsExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @SelectProvider(type=CscpFlowFieldPermsSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpFlowFieldPermsExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @DeleteProvider(type=CscpFlowFieldPermsSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpFlowFieldPermsExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @Delete({
            "delete from cscp_flow_field_perms",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     *
     * @date 2022-10-24 15:47:57
     */
    @Insert({
            "insert into cscp_flow_field_perms (",
            "id,",
            "field_perms,",
            "form_id,",
            "field_name,",
            "task_definition_key,",
            "task_definition_name",
            ") values (",
            "#{id,jdbcType=BIGINT}, ",
            "#{fieldPerms,jdbcType=VARCHAR}, ",
            "#{formId,jdbcType=VARCHAR}, ",
            "#{fieldName,jdbcType=VARCHAR}, ",
            "#{taskDefinitionKey,jdbcType=VARCHAR}, ",
            "#{taskDefinitionName,jdbcType=VARCHAR}",

            ")"

    })
    @Override
    int insert(CscpFlowFieldPerms record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @InsertProvider(type=CscpFlowFieldPermsSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpFlowFieldPerms record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @SelectProvider(type=CscpFlowFieldPermsSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="field_perms", property="fieldPerms", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.VARCHAR),
            @Result(column="field_name", property="fieldName", jdbcType=JdbcType.VARCHAR),
            @Result(column="task_definition_key", property="taskDefinitionKey", jdbcType=JdbcType.VARCHAR),
            @Result(column="task_definition_name", property="taskDefinitionName", jdbcType=JdbcType.VARCHAR)
    })

    @Override
    List<CscpFlowFieldPerms> selectByExample(CscpFlowFieldPermsExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @Select({
            "select",
            "id,",
            "field_perms,",
            "form_id,",
            "field_name,",
            "task_definition_key,",
            "task_definition_name",
            "from cscp_flow_field_perms",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="field_perms", property="fieldPerms", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.VARCHAR),
            @Result(column="field_name", property="fieldName", jdbcType=JdbcType.VARCHAR),
            @Result(column="task_definition_key", property="taskDefinitionKey", jdbcType=JdbcType.VARCHAR),
            @Result(column="task_definition_name", property="taskDefinitionName", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    CscpFlowFieldPerms selectByPrimaryKey(Long id);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @UpdateProvider(type=CscpFlowFieldPermsSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpFlowFieldPerms record, @Param("example") CscpFlowFieldPermsExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @UpdateProvider(type=CscpFlowFieldPermsSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpFlowFieldPerms record, @Param("example") CscpFlowFieldPermsExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     *@date 2022-10-24 15:47:57
     */
    @UpdateProvider(type=CscpFlowFieldPermsSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpFlowFieldPerms record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_flow_field_perms
     *
     * @date 2022-10-24 15:47:57
     */
    @Update({
            "update cscp_flow_field_perms",
            "set ",
            "id = #{id,jdbcType=BIGINT},",
            "field_perms = #{fieldPerms,jdbcType=VARCHAR},",
            "form_id = #{formId,jdbcType=VARCHAR},",
            "field_name = #{fieldName,jdbcType=VARCHAR},",
            "task_definition_key = #{taskDefinitionKey,jdbcType=VARCHAR},",
            "task_definition_name = #{taskDefinitionName,jdbcType=VARCHAR}",

            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpFlowFieldPerms record);

    /**
     * 批量删除
     * @param ids
     */
    @Delete("<script>" +
            "delete from cscp_flow_field_perms where id in" +
            "<foreach collection=\"ids\" item=\"id\" open=\"(\" separator=\",\" close=\")\">" +
            "#{id}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("ids") List<Long> ids);



    @Update({
            "update cscp_flow_field_perms",
            "set ",
            "field_perms = #{fieldPerms,jdbcType=VARCHAR},",
            "form_id = #{formId,jdbcType=VARCHAR},",
            "task_definition_name = #{taskDefinitionName,jdbcType=VARCHAR}",
            "where task_definition_key = #{taskDefinitionKey,jdbcType=VARCHAR}"
    })
    void updateFieldsPerm(CscpFlowFieldPerms cscpFlowFieldPerms);


    @Select({
            "select",
            "id,",
            "field_perms,",
            "form_id,",
            "field_name,",
            "task_definition_key,",
            "task_definition_name",
            "from cscp_flow_field_perms",
            "where task_definition_key = #{taskDefinitionKey,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="field_perms", property="fieldPerms", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.VARCHAR),
            @Result(column="field_name", property="formName", jdbcType=JdbcType.VARCHAR),
            @Result(column="task_definition_key", property="taskDefinitionKey", jdbcType=JdbcType.VARCHAR),
            @Result(column="task_definition_name", property="taskDefinitionName", jdbcType=JdbcType.VARCHAR)
    })
    CscpFlowFieldPerms findByTaskDefKey(CscpFlowFieldPerms cscpFlowFieldPerms);
}





