package com.ctsi.flow.repository;

import com.ctsi.flow.param.model.CscpUserAct;
import com.ctsi.flow.param.model.CscpUserActExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.time.ZonedDateTime;
import java.util.List;

/**
 * CscpUserActRepository
 *
 * @author hx
 * @date 2022-07-26 15:55:12
 */

@Mapper
public interface CscpUserActRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpUserAct, Long, CscpUserActExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @SelectProvider(type= CscpUserActSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpUserActExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @DeleteProvider(type= CscpUserActSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpUserActExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @Delete({
            "delete from cscp_user_act",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     *
     * @date 2022-07-26 15:55:12
     */
    @Insert({
            "insert into cscp_user_act (",
            "id,",
            "user_id,",
            "proc_def_id,",
            "proc_def_name,",
            "form_id,",
            "defined_id",
            ") values (",
            "#{id,jdbcType=BIGINT}, ",
            "#{userId,jdbcType=BIGINT}, ",
            "#{procDefId,jdbcType=VARCHAR}, ",
            "#{procDefName,jdbcType=VARCHAR}, ",
            "#{formId,jdbcType=BIGINT}, ",
            "#{definedId,jdbcType=VARCHAR}",

            ")"

    })
    @Override
    int insert(CscpUserAct record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @InsertProvider(type= CscpUserActSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpUserAct record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @SelectProvider(type= CscpUserActSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
            @Result(column="proc_def_id", property="procDefId", jdbcType=JdbcType.VARCHAR),
            @Result(column="proc_def_name", property="procDefName", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.BIGINT),
            @Result(column="defined_id", property="definedId", jdbcType=JdbcType.VARCHAR)
    })

    @Override
    List<CscpUserAct> selectByExample(CscpUserActExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @Select({
            "select",
            "id,",
            "user_id,",
            "proc_def_id,",
            "proc_def_name,",
            "form_id,",
            "defined_id",
            "from cscp_user_act",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
            @Result(column="proc_def_id", property="procDefId", jdbcType=JdbcType.VARCHAR),
            @Result(column="proc_def_name", property="procDefName", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.BIGINT),
            @Result(column="defined_id", property="definedId", jdbcType=JdbcType.VARCHAR)
    })
    @Override
    CscpUserAct selectByPrimaryKey(Long id);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @UpdateProvider(type= CscpUserActSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpUserAct record, @Param("example") CscpUserActExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @UpdateProvider(type= CscpUserActSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpUserAct record, @Param("example") CscpUserActExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     *@date 2022-07-26 15:55:12
     */
    @UpdateProvider(type= CscpUserActSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpUserAct record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_user_act
     *
     * @date 2022-07-26 15:55:12
     */
    @Update({
            "update cscp_user_act",
            "set ",
            "id = #{id,jdbcType=BIGINT},",
            "user_id = #{userId,jdbcType=BIGINT},",
            "proc_def_id = #{procDefId,jdbcType=VARCHAR},",
            "proc_def_name = #{procDefName,jdbcType=VARCHAR},",
            "form_id = #{formId,jdbcType=BIGINT},",
            "defined_id = #{definedId,jdbcType=VARCHAR}",

            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpUserAct record);

    /**
     * 批量删除
     * @param ids
     */
    @Delete("<script>" +
            "delete from cscp_user_act where id in" +
            "<foreach collection=\"ids\" item=\"id\" open=\"(\" separator=\",\" close=\")\">" +
            "#{id}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("ids") List<Long> ids);

    @Select({
            "select",
            "id,",
            "user_id,",
            "proc_def_id,",
            "proc_def_name,",
            "form_id,",
            "defined_id",
            "from cscp_user_act",
            "where proc_def_id = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
            @Result(column="proc_def_id", property="procDefId", jdbcType=JdbcType.VARCHAR),
            @Result(column="proc_def_name", property="procDefName", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.BIGINT),
            @Result(column="defined_id", property="definedId", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpUserAct> findByProcDefId(String id);


    @Delete("delete from cscp_user_act where proc_def_id = #{id}")
    void deleteByProcDefId(@Param("id") String id);

    @Insert({"<script>insert into cscp_user_act (id,user_id,proc_def_id,proc_def_name,form_id,iscollect,process_id,publish_time) values <foreach collection='list' item='c' separator=',' > (#{c.id},#{c.userId},#{c.procDefId},#{c.procDefName},#{c.formId},#{c.isCollect},#{c.processId},#{c.publishTime})</foreach></script>"})
    @Options(useGeneratedKeys=true, keyProperty="id")
    int insertList(@Param("list") List<CscpUserAct> record);


    @Select({
            "select",
            "id,",
            "user_id,",
            "proc_def_id,",
            "proc_def_name,",
            "form_id,",
            "iscollect,",
            "publish_time,",
            "collect_time,",
            "defined_id",
            "from cscp_user_act",
            "where user_id = #{id,jdbcType=BIGINT} order by publish_time DESC "
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
            @Result(column="proc_def_id", property="procDefId", jdbcType=JdbcType.VARCHAR),
            @Result(column="proc_def_name", property="procDefName", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.BIGINT),
            @Result(column="iscollect", property="isCollect", jdbcType=JdbcType.VARCHAR),
            @Result(column="publish_time", property="publishTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="collect_time", property="collectTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="defined_id", property="definedId", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpUserAct> findByUserId(@Param("id")Long id);

    @Update({
            "update cscp_user_act",
            "set ",
            "iscollect = #{isCollect,jdbcType=VARCHAR},",
            "collect_time = #{collectTime,jdbcType=VARCHAR} ",

            "where proc_def_id = #{proDefId,jdbcType=VARCHAR} " +
                    "and user_id = #{userId,jdbcType=BIGINT} "
    })
    int updateByProDefId(@Param("proDefId")String proDefId,@Param("isCollect")String isCollect,@Param("userId")Long userId,@Param("collectTime") ZonedDateTime collectTime);

    @Select({
            "select",
            "id,",
            "user_id,",
            "proc_def_id,",
            "proc_def_name,",
            "form_id,",
            "iscollect,",
            "collect_time,",
            "publish_time,",
            "process_id,",
            "defined_id",
            "from cscp_user_act",
            "where user_id = #{userId,jdbcType=BIGINT} and iscollect='1' order by collect_time DESC"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="user_id", property="userId", jdbcType=JdbcType.BIGINT),
            @Result(column="proc_def_id", property="procDefId", jdbcType=JdbcType.VARCHAR),
            @Result(column="proc_def_name", property="procDefName", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_id", property="formId", jdbcType=JdbcType.BIGINT),
            @Result(column="iscollect", property="isCollect", jdbcType=JdbcType.VARCHAR),
            @Result(column="process_id", property="processId", jdbcType=JdbcType.VARCHAR),
            @Result(column="publish_time", property="publishTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="collect_time", property="collectTime", jdbcType=JdbcType.TIMESTAMP),
            @Result(column="defined_id", property="definedId", jdbcType=JdbcType.VARCHAR)
    })
    List<CscpUserAct> findMyCollect(@Param("userId")Long userId);


    @Select({
            "select",
            "form_id,",
            "process_id",
            "from cscp_user_act",
            "where user_id = #{userId,jdbcType=BIGINT} and proc_def_id = #{proDefId,jdbcType=VARCHAR}  "
    })
    @Results({
            @Result(column="form_id", property="formId", jdbcType=JdbcType.BIGINT),
            @Result(column="process_id", property="processId", jdbcType=JdbcType.VARCHAR),
    })
    CscpUserAct selectByUserIdAndProDefId(@Param("userId")Long userId, @Param("proDefId")String proDefId);
}





