package com.ctsi.flow.param.model;

import com.ctsi.ssdc.criteria.*;

import java.time.ZonedDateTime;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.annotations.ApiParam;
import java.util.ArrayList;
import java.util.List;
import org.apache.commons.lang3.StringUtils;

/**
 * ActRdTurnTaskExample
 *
 * @author hx
 * @date 2022-07-28 18:44:24
 */

public class ActRdTurnTaskExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private static final String LIKE_FORMAT = "%%%s%%";


    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.id
     *
     * @date 2022-07-28 18:44:24
     */
    private LongCriteria id;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.user_id
     *
     * @date 2022-07-28 18:44:24
     */
    private LongCriteria userId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.form_id
     *
     * @date 2022-07-28 18:44:24
     */
    private StringCriteria formId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.process_id
     *
     * @date 2022-07-28 18:44:24
     */
    private StringCriteria processId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.process_instid
     *
     * @date 2022-07-28 18:44:24
     */
    private StringCriteria processInstid;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.process_name
     *
     * @date 2022-07-28 18:44:24
     */
    private StringCriteria processName;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.type
     *
     * @date 2022-07-28 18:44:24
     */
    private StringCriteria type;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_rd_turn_task.create_time
     *
     * @date 2022-07-28 18:44:24
     */
    private ZonedDateTimeCriteria createTime;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public ActRdTurnTaskExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public LongCriteria getId() {
        return id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setId(LongCriteria id) {
        this. id = id;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildIdCriteria(Criteria criteria) {
        if (this.getId() == null) {
            return;
        }
        if (this.getId().getEquals() != null) {
            criteria.andIdEqualTo(this.getId().getEquals());
        } else {
            if (this.getId().getGreaterOrEqualThan() != null) {
                criteria.andIdGreaterThanOrEqualTo(this.getId().getGreaterOrEqualThan());
            }
            if (this.getId().getLessOrEqualThan() != null) {
                criteria.andIdLessThanOrEqualTo(this.getId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public LongCriteria getUserId() {
        return userId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setUserId(LongCriteria userId) {
        this. userId = userId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildUserIdCriteria(Criteria criteria) {
        if (this.getUserId() == null) {
            return;
        }
        if (this.getUserId().getEquals() != null) {
            criteria.andUserIdEqualTo(this.getUserId().getEquals());
        } else {
            if (this.getUserId().getGreaterOrEqualThan() != null) {
                criteria.andUserIdGreaterThanOrEqualTo(this.getUserId().getGreaterOrEqualThan());
            }
            if (this.getUserId().getLessOrEqualThan() != null) {
                criteria.andUserIdLessThanOrEqualTo(this.getUserId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public StringCriteria getFormId() {
        return formId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setFormId(StringCriteria formId) {
        this. formId = formId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildFormIdCriteria(Criteria criteria) {
        if (this.getFormId() == null) {
            return;
        }
        if (this.getFormId().getEquals() != null) {
            criteria.andFormIdEqualTo(this.getFormId().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getFormId().getContains())) {
                criteria.andFormIdLike(String.format(LIKE_FORMAT, this.getFormId().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public StringCriteria getProcessId() {
        return processId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setProcessId(StringCriteria processId) {
        this. processId = processId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildProcessIdCriteria(Criteria criteria) {
        if (this.getProcessId() == null) {
            return;
        }
        if (this.getProcessId().getEquals() != null) {
            criteria.andProcessIdEqualTo(this.getProcessId().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getProcessId().getContains())) {
                criteria.andProcessIdLike(String.format(LIKE_FORMAT, this.getProcessId().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public StringCriteria getProcessInstid() {
        return processInstid;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setProcessInstid(StringCriteria processInstid) {
        this. processInstid = processInstid;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildProcessInstidCriteria(Criteria criteria) {
        if (this.getProcessInstid() == null) {
            return;
        }
        if (this.getProcessInstid().getEquals() != null) {
            criteria.andProcessInstidEqualTo(this.getProcessInstid().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getProcessInstid().getContains())) {
                criteria.andProcessInstidLike(String.format(LIKE_FORMAT, this.getProcessInstid().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public StringCriteria getProcessName() {
        return processName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setProcessName(StringCriteria processName) {
        this. processName = processName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildProcessNameCriteria(Criteria criteria) {
        if (this.getProcessName() == null) {
            return;
        }
        if (this.getProcessName().getEquals() != null) {
            criteria.andProcessNameEqualTo(this.getProcessName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getProcessName().getContains())) {
                criteria.andProcessNameLike(String.format(LIKE_FORMAT, this.getProcessName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public StringCriteria getType() {
        return type;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setType(StringCriteria type) {
        this. type = type;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildTypeCriteria(Criteria criteria) {
        if (this.getType() == null) {
            return;
        }
        if (this.getType().getEquals() != null) {
            criteria.andTypeEqualTo(this.getType().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getType().getContains())) {
                criteria.andTypeLike(String.format(LIKE_FORMAT, this.getType().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public ZonedDateTimeCriteria getCreateTime() {
        return createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public void setCreateTime(ZonedDateTimeCriteria createTime) {
        this. createTime = createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    private void buildCreateTimeCriteria(Criteria criteria) {
        if (this.getCreateTime() == null) {
            return;
        }
        if (this.getCreateTime().getEquals() != null) {
            criteria.andCreateTimeEqualTo(this.getCreateTime().getEquals());
        } else {
            if (this.getCreateTime().getGreaterOrEqualThan() != null) {
                criteria.andCreateTimeGreaterThanOrEqualTo(this.getCreateTime().getGreaterOrEqualThan());
            }
            if (this.getCreateTime().getLessOrEqualThan() != null) {
                criteria.andCreateTimeLessThanOrEqualTo(this.getCreateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_form_column
     *
     * @date Thu Feb 17 14:02:06 CST 2022
     */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildIdCriteria(criteria);
        this.buildUserIdCriteria(criteria);
        this.buildFormIdCriteria(criteria);
        this.buildProcessIdCriteria(criteria);
        this.buildProcessInstidCriteria(criteria);
        this.buildProcessNameCriteria(criteria);
        this.buildTypeCriteria(criteria);
        this.buildCreateTimeCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Long value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Long value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Long value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Long value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Long value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Long value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Long> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Long> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Long value1, Long value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Long value1, Long value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNull() {
            addCriterion("form_id is null");
            return (Criteria) this;
        }

        public Criteria andFormIdIsNotNull() {
            addCriterion("form_id is not null");
            return (Criteria) this;
        }

        public Criteria andFormIdEqualTo(String value) {
            addCriterion("form_id =", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotEqualTo(String value) {
            addCriterion("form_id <>", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThan(String value) {
            addCriterion("form_id >", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdGreaterThanOrEqualTo(String value) {
            addCriterion("form_id >=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThan(String value) {
            addCriterion("form_id <", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLessThanOrEqualTo(String value) {
            addCriterion("form_id <=", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdLike(String value) {
            addCriterion("form_id like", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotLike(String value) {
            addCriterion("form_id not like", value, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdIn(List<String> values) {
            addCriterion("form_id in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotIn(List<String> values) {
            addCriterion("form_id not in", values, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdBetween(String value1, String value2) {
            addCriterion("form_id between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andFormIdNotBetween(String value1, String value2) {
            addCriterion("form_id not between", value1, value2, "formId");
            return (Criteria) this;
        }

        public Criteria andProcessIdIsNull() {
            addCriterion("process_id is null");
            return (Criteria) this;
        }

        public Criteria andProcessIdIsNotNull() {
            addCriterion("process_id is not null");
            return (Criteria) this;
        }

        public Criteria andProcessIdEqualTo(String value) {
            addCriterion("process_id =", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdNotEqualTo(String value) {
            addCriterion("process_id <>", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdGreaterThan(String value) {
            addCriterion("process_id >", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdGreaterThanOrEqualTo(String value) {
            addCriterion("process_id >=", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdLessThan(String value) {
            addCriterion("process_id <", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdLessThanOrEqualTo(String value) {
            addCriterion("process_id <=", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdLike(String value) {
            addCriterion("process_id like", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdNotLike(String value) {
            addCriterion("process_id not like", value, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdIn(List<String> values) {
            addCriterion("process_id in", values, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdNotIn(List<String> values) {
            addCriterion("process_id not in", values, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdBetween(String value1, String value2) {
            addCriterion("process_id between", value1, value2, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessIdNotBetween(String value1, String value2) {
            addCriterion("process_id not between", value1, value2, "processId");
            return (Criteria) this;
        }

        public Criteria andProcessInstidIsNull() {
            addCriterion("process_instid is null");
            return (Criteria) this;
        }

        public Criteria andProcessInstidIsNotNull() {
            addCriterion("process_instid is not null");
            return (Criteria) this;
        }

        public Criteria andProcessInstidEqualTo(String value) {
            addCriterion("process_instid =", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidNotEqualTo(String value) {
            addCriterion("process_instid <>", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidGreaterThan(String value) {
            addCriterion("process_instid >", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidGreaterThanOrEqualTo(String value) {
            addCriterion("process_instid >=", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidLessThan(String value) {
            addCriterion("process_instid <", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidLessThanOrEqualTo(String value) {
            addCriterion("process_instid <=", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidLike(String value) {
            addCriterion("process_instid like", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidNotLike(String value) {
            addCriterion("process_instid not like", value, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidIn(List<String> values) {
            addCriterion("process_instid in", values, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidNotIn(List<String> values) {
            addCriterion("process_instid not in", values, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidBetween(String value1, String value2) {
            addCriterion("process_instid between", value1, value2, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessInstidNotBetween(String value1, String value2) {
            addCriterion("process_instid not between", value1, value2, "processInstid");
            return (Criteria) this;
        }

        public Criteria andProcessNameIsNull() {
            addCriterion("process_name is null");
            return (Criteria) this;
        }

        public Criteria andProcessNameIsNotNull() {
            addCriterion("process_name is not null");
            return (Criteria) this;
        }

        public Criteria andProcessNameEqualTo(String value) {
            addCriterion("process_name =", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameNotEqualTo(String value) {
            addCriterion("process_name <>", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameGreaterThan(String value) {
            addCriterion("process_name >", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameGreaterThanOrEqualTo(String value) {
            addCriterion("process_name >=", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameLessThan(String value) {
            addCriterion("process_name <", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameLessThanOrEqualTo(String value) {
            addCriterion("process_name <=", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameLike(String value) {
            addCriterion("process_name like", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameNotLike(String value) {
            addCriterion("process_name not like", value, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameIn(List<String> values) {
            addCriterion("process_name in", values, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameNotIn(List<String> values) {
            addCriterion("process_name not in", values, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameBetween(String value1, String value2) {
            addCriterion("process_name between", value1, value2, "processName");
            return (Criteria) this;
        }

        public Criteria andProcessNameNotBetween(String value1, String value2) {
            addCriterion("process_name not between", value1, value2, "processName");
            return (Criteria) this;
        }

        public Criteria andTypeIsNull() {
            addCriterion("type is null");
            return (Criteria) this;
        }

        public Criteria andTypeIsNotNull() {
            addCriterion("type is not null");
            return (Criteria) this;
        }

        public Criteria andTypeEqualTo(String value) {
            addCriterion("type =", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotEqualTo(String value) {
            addCriterion("type <>", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThan(String value) {
            addCriterion("type >", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeGreaterThanOrEqualTo(String value) {
            addCriterion("type >=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThan(String value) {
            addCriterion("type <", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLessThanOrEqualTo(String value) {
            addCriterion("type <=", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeLike(String value) {
            addCriterion("type like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotLike(String value) {
            addCriterion("type not like", value, "type");
            return (Criteria) this;
        }

        public Criteria andTypeIn(List<String> values) {
            addCriterion("type in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotIn(List<String> values) {
            addCriterion("type not in", values, "type");
            return (Criteria) this;
        }

        public Criteria andTypeBetween(String value1, String value2) {
            addCriterion("type between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andTypeNotBetween(String value1, String value2) {
            addCriterion("type not between", value1, value2, "type");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(ZonedDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(ZonedDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<ZonedDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_rd_turn_task
     *
     * @date do_not_delete_during_merge 2022-07-28 18:44:24
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_rd_turn_task
     *
     * @date 2022-07-28 18:44:24
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
