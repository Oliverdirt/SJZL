package com.ctsi.ssdc.gen.repository;

import com.ctsi.ssdc.gen.domain.CscpHxFormTable;
import com.ctsi.ssdc.gen.domain.CscpHxFormTableExample;
import java.util.List;

import org.apache.ibatis.annotations.*;
import org.apache.ibatis.mapping.FetchType;
import org.apache.ibatis.type.JdbcType;

/**
 * @author ctsi-biyi-generator
*/
@Mapper
public interface CscpHxFormTableRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpHxFormTable, Long, CscpHxFormTableExample> {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @SelectProvider(type=CscpHxFormTableSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpHxFormTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @DeleteProvider(type=CscpHxFormTableSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpHxFormTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @Delete({
        "delete from cscp_hx_form_table",
        "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long tableId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @Insert({
        "insert into cscp_hx_form_table (table_id, table_name, ",
        "table_content, db_type, ",
        "persistence_type, is_db_synch, ",
        "form_type, sub_table_name, ",
        "sub_table_fk_name, package_name, ",
        "gen_type, gen_path, options, ",
        "remark, form_suite)",
        "values (#{tableId,jdbcType=BIGINT}, #{tableName,jdbcType=VARCHAR}, ",
        "#{tableContent,jdbcType=VARCHAR}, #{dbType,jdbcType=INTEGER}, ",
        "#{persistenceType,jdbcType=INTEGER}, #{isDbSynch,jdbcType=INTEGER}, ",
        "#{formType,jdbcType=INTEGER}, #{subTableName,jdbcType=VARCHAR}, ",
        "#{subTableFkName,jdbcType=VARCHAR}, #{packageName,jdbcType=VARCHAR}, ",
        "#{genType,jdbcType=INTEGER}, #{genPath,jdbcType=VARCHAR}, #{options,jdbcType=VARCHAR}, ",
        "#{remark,jdbcType=VARCHAR}, #{formSuite,jdbcType=BIGINT})"
    })
    @Override
    int insert(CscpHxFormTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @InsertProvider(type=CscpHxFormTableSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpHxFormTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @SelectProvider(type=CscpHxFormTableSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
        @Result(column="table_content", property="tableContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="db_type", property="dbType", jdbcType=JdbcType.INTEGER),
        @Result(column="persistence_type", property="persistenceType", jdbcType=JdbcType.INTEGER),
        @Result(column="is_db_synch", property="isDbSynch", jdbcType=JdbcType.INTEGER),
        @Result(column="form_type", property="formType", jdbcType=JdbcType.INTEGER),
        @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
        @Result(column="sub_table_fk_name", property="subTableFkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="package_name", property="packageName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gen_type", property="genType", jdbcType=JdbcType.INTEGER),
        @Result(column="gen_path", property="genPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="options", property="options", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="form_suite", property="formSuite", jdbcType=JdbcType.BIGINT)
    })
    @Override
    List<CscpHxFormTable> selectByExample(CscpHxFormTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @Select({
        "select",
        "table_id, table_name, table_content, db_type, persistence_type, is_db_synch, ",
        "form_type, sub_table_name, sub_table_fk_name, package_name, gen_type, gen_path, ",
        "options, remark, form_suite",
        "from cscp_hx_form_table",
        "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Results({
        @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT, id=true),
        @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
        @Result(column="table_content", property="tableContent", jdbcType=JdbcType.VARCHAR),
        @Result(column="db_type", property="dbType", jdbcType=JdbcType.INTEGER),
        @Result(column="persistence_type", property="persistenceType", jdbcType=JdbcType.INTEGER),
        @Result(column="is_db_synch", property="isDbSynch", jdbcType=JdbcType.INTEGER),
        @Result(column="form_type", property="formType", jdbcType=JdbcType.INTEGER),
        @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
        @Result(column="sub_table_fk_name", property="subTableFkName", jdbcType=JdbcType.VARCHAR),
        @Result(column="package_name", property="packageName", jdbcType=JdbcType.VARCHAR),
        @Result(column="gen_type", property="genType", jdbcType=JdbcType.INTEGER),
        @Result(column="gen_path", property="genPath", jdbcType=JdbcType.VARCHAR),
        @Result(column="options", property="options", jdbcType=JdbcType.VARCHAR),
        @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
        @Result(column="form_suite", property="formSuite", jdbcType=JdbcType.BIGINT)
    })
    @Override
    CscpHxFormTable selectByPrimaryKey(Long tableId);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @UpdateProvider(type=CscpHxFormTableSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpHxFormTable record, @Param("example") CscpHxFormTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @UpdateProvider(type=CscpHxFormTableSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpHxFormTable record, @Param("example") CscpHxFormTableExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @UpdateProvider(type=CscpHxFormTableSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpHxFormTable record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table cscp_hx_form_table
     *
     * @mbg.generated Thu Feb 17 14:10:22 CST 2022
     */
    @Update({
        "update cscp_hx_form_table",
        "set table_name = #{tableName,jdbcType=VARCHAR},",
          "table_content = #{tableContent,jdbcType=VARCHAR},",
          "db_type = #{dbType,jdbcType=INTEGER},",
          "persistence_type = #{persistenceType,jdbcType=INTEGER},",
          "is_db_synch = #{isDbSynch,jdbcType=INTEGER},",
          "form_type = #{formType,jdbcType=INTEGER},",
          "sub_table_name = #{subTableName,jdbcType=VARCHAR},",
          "sub_table_fk_name = #{subTableFkName,jdbcType=VARCHAR},",
          "package_name = #{packageName,jdbcType=VARCHAR},",
          "gen_type = #{genType,jdbcType=INTEGER},",
          "gen_path = #{genPath,jdbcType=VARCHAR},",
          "options = #{options,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "form_suite = #{formSuite,jdbcType=BIGINT}",
        "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpHxFormTable record);



    @Select({
            "select",
            "table_id, table_name, table_content, db_type, persistence_type, is_db_synch, ",
            "form_type, sub_table_name, sub_table_fk_name, package_name, gen_type, gen_path, ",
            "options, remark, form_suite",
            "from cscp_hx_form_table",
            "where table_id = #{tableId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="table_id", property="tableId", jdbcType=JdbcType.BIGINT, id=true),
            @Result(column="table_name", property="tableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="table_content", property="tableContent", jdbcType=JdbcType.VARCHAR),
            @Result(column="db_type", property="dbType", jdbcType=JdbcType.INTEGER),
            @Result(column="persistence_type", property="persistenceType", jdbcType=JdbcType.INTEGER),
            @Result(column="is_db_synch", property="isDbSynch", jdbcType=JdbcType.INTEGER),
            @Result(column="form_type", property="formType", jdbcType=JdbcType.INTEGER),
            @Result(column="sub_table_name", property="subTableName", jdbcType=JdbcType.VARCHAR),
            @Result(column="sub_table_fk_name", property="subTableFkName", jdbcType=JdbcType.VARCHAR),
            @Result(column="package_name", property="packageName", jdbcType=JdbcType.VARCHAR),
            @Result(column="gen_type", property="genType", jdbcType=JdbcType.INTEGER),
            @Result(column="gen_path", property="genPath", jdbcType=JdbcType.VARCHAR),
            @Result(column="options", property="options", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="form_suite", property="formSuite", jdbcType=JdbcType.BIGINT),
            @Result(column = "table_id",property = "columns",many = @Many(select = "com.ctsi.ssdc.gen.repository.CscpHxFormColumnRepository.selectByTableId",fetchType= FetchType.EAGER))
    })
    CscpHxFormTable selectAllById(Long tableId);


    /**
     * 批量删除
     * @param delList
     */
    @Delete("<script>" +
            "delete from cscp_hx_form_table where table_id in" +
            "<foreach collection=\"delList\" item=\"tableId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{tableId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("delList") List<Long> delList);


}