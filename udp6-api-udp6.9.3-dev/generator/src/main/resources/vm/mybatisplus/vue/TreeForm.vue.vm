##定义$http,$Message,$refs,$Modal,$delete
#set($http="$http")
#set($Message="$Message")
#set($refs="$refs")
#set($Modal="$Modal")
#set($delete="$delete")
#set($moment="$moment")
#set($event="$event")
#set($cssPath="~@")
#set($cssPaths="@")
<template>
  <div style="height: 100%">
    <div class="formCard-content">
      <Card :bordered="false" :dis-hover="true" :shadow="false" class="formCard">
        <div class="searchArea" >
          <Form ref="queryForm" :model="queryForm" :label-width="80" >
            <Row :gutter="40">
#foreach ($column in $columns)
#if($column.isQuery == 1)
              <Col span="8" style="margin-bottom: 12px">
                <FormItem label="${column.columnComment}"  prop="${column.javaField}" style="width: 100%">
#if($column.htmlType == 'input')
                  <Input  type="text" :maxlength="100" v-model.trim="queryForm.${column.javaField}" placeholder="请输入${column.columnComment}" style="width: 100%"></Input>
#elseif($column.htmlType == "select" || $column.htmlType == "radio")
#if($column.dicCode)
                  <Select v-model="queryForm.${column.javaField}" placeholder="请选择">
                    <Option v-for="item in ${column.javaField}DicGroups" :value="item.itemCode.toLocaleString()"
                            :key="item.itemCode.toLocaleString()">{{ item.itemValue }}
                    </Option>
                  </Select>
#else
                  <Select v-model="queryForm.${column.javaField}" placeholder="请选择">
                    <Option value="1" >value1</Option>
                    <Option value="0" >value2</Option>
                  </Select>
#end
#elseif($column.htmlType == "checkbox")
#if($column.dicCode)
                  <Select v-model="queryForm.${column.javaField}" placeholder="请选择" multiple>
                    <Option v-for="item in ${column.javaField}DicGroups" :value="item.itemCode.toLocaleString()"
                            :key="item.itemCode.toLocaleString()">{{ item.itemValue }}
                    </Option>
                  </Select>
#else
                  <Select v-model="queryForm.${column.javaField}" placeholder="请选择" multiple>
                    <Option value="1" >香蕉</Option>
                    <Option value="2" >苹果</Option>
                    <Option value="3" >西瓜</Option>
                  </Select>
#end
#elseif($column.htmlType == "date")
#if($column.queryType != "between")
#set($dateType = 'date')
#else
#set($dateType = 'daterange')
#end
                  <DatePicker type="${dateType}" placement="bottom-end" v-model.trim="queryForm.${column.javaField}"
                    placeholder="请选择日期" style="width: 100%" format="yyyy-MM-dd"></DatePicker>
#elseif($column.htmlType == "datetime")
#if($column.queryType != "between")
#set($dateType = 'datetime')
#else
#set($dateType = 'datetimerange')
#end
                  <DatePicker type="${dateType}" placement="bottom-end" v-model.trim="queryForm.${column.javaField}"
                    placeholder="请选择日期" style="width: 100%" format="yyyy-MM-dd HH:mm:ss"></DatePicker>
#else
                  <Input  type="text" :maxlength="100" v-model.trim="queryForm.${column.javaField}" placeholder="请输入${column.columnComment}" style="width: 100%"></Input>
#end
                </FormItem>
            </Col>
#end
#end
              <Col span="24" style="text-align: right;margin-top: 12px">
                <FormItem :label-width="0">
                  <Button   type="primary" @click="queryList(true)" style="margin-right: 8px">查询</Button>
                  <Button type="default"  @click="handleReset('queryForm')">重置</Button>
                </FormItem>
              </Col>
            </Row>
          </Form>
        </div>
      </Card>
      <Card :bordered="false" :dis-hover="true" :shadow="false" class="formCard">
        <div class="tableBtn">
          <Button  icon="md-add"  type="primary"  @click="handleAdd()">新增</Button>
          <Button type="default" @click="handleExpand()" style="margin-left: 20px">展开/折叠</Button>
        </div>
          <el-table
          v-if="refreshTable"
          v-loading="loading"
          :data="data"
          row-key="${pkColumn.javaField}"
          :default-expand-all="isExpandAll"
          :tree-props="{children: 'children', hasChildren: 'hasChildren'}"
          >
#foreach ($column in $columns)
#if($column.isList == 1)
#if( $column.dicCode)
            <el-table-column prop="${column.javaField}" label="${column.columnComment}" align="center" >
            <template slot-scope="scope">
              <span>{{ ${column.javaField}Translate(scope.row) }}</span>
            </template>
            </el-table-column>
#elseif(${column.htmlType} == 'checkbox')
            <el-table-column prop="${column.javaField}" label="${column.columnComment}" align="center" >
            <template slot-scope="scope">
              <span>{{ ${column.javaField}TranslateCheckbox(scope.row) }}</span>
            </template>
            </el-table-column>
#elseif(${column.htmlType} == 'radio' || ${column.htmlType} == 'select')
            <el-table-column prop="${column.javaField}" label="${column.columnComment}" align="center" >
            <template slot-scope="scope">
              <span>{{ ${column.javaField}TranslateSelectOrRadio(scope.row) }}</span>
            </template>
            </el-table-column>
#else
            <el-table-column prop="${column.javaField}" label="${column.columnComment}" align="center" ></el-table-column>
#end
#end
#end
            <el-table-column label="操作" align="center" width="200">
              <template slot-scope="{ row, index }">
                <Button type="text" size="small"  style="margin-right: 5px;color: #0056B5" @click="handleAdd(row, 'addInRow')">新增</Button>
                <Button type="text" size="small"  style="margin-right: 5px;color: #0056B5" @click="handleEdit(row)">编辑</Button>
                <Button type="text" size="small" style="margin-right: 5px;color: #0056B5" @click="remove(row, index)">删除</Button>
              </template>
            </el-table-column>
          </el-table>
      </Card>
    </div>
    <Modal
      v-model="modal"
      :title="title"
      ref="modal"
      @on-cancel="close"
      :width="580"
    >
      <Form ref="detail" :model="detail" :label-width="80" :rules="ruleValidate" style="margin-top: 20px">
#foreach ($column in $columns)
#if($column.isForm == 1)
#if($column.javaField == $treeParentCode)
        <FormItem  label="${column.columnComment}"  prop="${treeParentCode}" >
            <Treeselect  v-model="detail.${treeParentCode}"  :options="treeArr" style="width:100%" placeholder="请输入父级节点">
            </TreeSelect>
        </FormItem>
#end
#end
#end
#foreach ($column in $columns)
#if($column.isForm == 1)
#if($column.javaField != $treeParentCode)
#if($column.htmlType == "input")
#if($pkColumn.javaField==${column.javaField})
        <FormItem label="${column.columnComment}"  prop="${column.javaField}">
            <Input type="text" :maxlength="100" v-model.trim="detail.${column.javaField}" placeholder="请输入${column.columnComment}" :disabled="${column.javaField}Flag" ></Input>
        </FormItem>
        #else
        <FormItem label="${column.columnComment}"  prop="${column.javaField}">
            <Input type="text" :maxlength="100" v-model.trim="detail.${column.javaField}" placeholder="请输入${column.columnComment}" ></Input>
        </FormItem>
#end
#elseif($column.htmlType == "select" )
#if($column.dicCode)
        <FormItem label="${column.columnComment}"  prop="${column.javaField}">
            <Select v-model="detail.${column.javaField}" placeholder="请选择${column.columnComment}" clearable >
              <Option v-for="item in ${column.javaField}DicGroups" :value="item.itemCode.toLocaleString()"
                    :key="item.itemCode.toLocaleString()">{{ item.itemValue }}
              </Option>
            </Select>
        </FormItem>
#else
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
            <Select v-model="detail.${column.javaField}" placeholder="请选择">
              <Option value="1" >value1</Option>
              <Option value="0" >value2</Option>
            </Select>
       </FormItem>
#end
#elseif($column.htmlType == "checkbox" )
#if($column.dicCode)
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
          <CheckboxGroup v-model="detail.${column.javaField}">
            <Checkbox v-for="item in ${column.javaField}DicGroups" :label="item.itemCode">{{item.itemValue}}</Checkbox>
          </CheckboxGroup>
       </FormItem>
#else
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
          <CheckboxGroup v-model="detail.${column.javaField}">
            <Checkbox label="1">香蕉</Checkbox>
            <Checkbox label="2">苹果</Checkbox>
            <Checkbox label="3">西瓜</Checkbox>
          </CheckboxGroup>
       </FormItem>
#end
#elseif($column.htmlType == "radio")
#if($column.dicCode)
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
          <RadioGroup v-model="detail.${column.javaField}">
             <Radio v-for="item in ${column.javaField}DicGroups" :label="item.itemCode.toLocaleString()" :key="item.itemCode.toLocaleString()">
                 <span>{{item.itemValue}}</span>
             </Radio>
          </RadioGroup>
       </FormItem>
#else
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
          <RadioGroup v-model="detail.${column.javaField}">
              <Radio label="0">选择1</Radio>
              <Radio label="1">选择2</Radio>
          </RadioGroup>
       </FormItem>
#end
#elseif($column.htmlType == "date")
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
            <DatePicker v-model="detail.${column.javaField}" type="date" placeholder=""   format="yyyy-MM-dd" style="width: 100%"></DatePicker>
       </FormItem>
#elseif($column.htmlType == "datetime")
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
            <DatePicker v-model="detail.${column.javaField}" type="datetime" placeholder=""   format="yyyy-MM-dd HH:mm:ss" style="width: 100%"></DatePicker>
       </FormItem>
#elseif($column.htmlType == "textarea")
       <FormItem label="${column.columnComment}"  prop="${column.javaField}">
            <Input type="textarea" :maxlength="100" v-model.trim="detail.${column.javaField}" placeholder="" ></Input>
       </FormItem>
#end
#end
#end
#end
      </Form>
      <div slot="footer">
        <Button type="primary"  @click="ok(okFlag)" :disabled="disabled"  style="width: 80px">确定</Button>
        <Button type="default"  @click="close()"  style="width: 80px">取消</Button>
      </div>
    </Modal>
  </div>
</template>

<script>
import Treeselect from '@riophae/vue-treeselect'
import '@riophae/vue-treeselect/dist/vue-treeselect.css'
import treeutil from '@/libs/util-tree'
import {
    ${className}Show,
    ${className}Del,
    ${className}Update,
    ${className}Create,
    ${className}ShowChildren,
    ${className}TreeSelect,
    ${className}List
} from '${cssPaths}/api/${className}/${className.toLowerCase()}-manager'
#foreach ($column in $columns)
#if($column.dicCode)
import {
    getCscpBasicHxItemCode
} from '${cssPaths}/api/dic/listdic'
#break
#end
#end
export default {
  name: '${className}Manager',
  components: { Treeselect },
  data () {
#foreach ($column in $columns)
#if($column.isForm == 1)
#if($column.validateRule != "")
    const validate${column.javaField} = (rule, value, callback) => {
#if($column.isNull == 0)
#if($column.htmlType != "checkbox")
        if (!value) {
            callback(new Error('请输入${column.columnComment}！'))
            return
        }
#end
#end
#if($column.validateRule != "")
        let pattern = new RegExp('${column.rulevalue}')
        if (!pattern.test(value)) {
            callback(new Error('${column.ruleinfo}'))
            return
        }
#end
            callback()
        }
#else
#if($column.isNull == 0)
#if($column.htmlType != "checkbox")
    const validate${column.javaField} = (rule, value, callback) => {
        if (!value) {
            callback(new Error('请输入${column.columnComment}！'))
            return
        }
        callback()
    }
#end
#end
#end
#end
#end
    return {
      isExpandAll: true,
      refreshTable: true,
      loading: true,
#foreach ($column in $columns)
#if($column.dicCode)
      ${column.javaField}DicGroups: [],
#end
#if($column.isForm == 1)
#if($pkColumn.javaField==${column.javaField})
      ${column.javaField}Flag: false,
#end
#end
#end
      modal: false,
      disabled: false,
      treeArr: [],
      title: '新增',
      showChildren: true,
      queryForm: {},
      data: [
      ],
      detail: {
      },
      okFlag: '',
      modalValid: true,
      ruleValidate: {
#foreach ($column in $columns)
#if($column.isForm == 1)
#if($column.isNull == 0 || $column.validateRule != "")
     '$column.javaField': [
#if($column.htmlType == "checkbox")
#if($column.isNull == 0)
        { required: true,  message: '请输入${column.columnComment}！',  type: 'array', trigger: 'change' },
#end
#if($column.validateRule != "")
        { required: true, validator: validate${column.javaField}, trigger: 'blur' }
      ],
#else
      ],
#end
#else
        { required: true, validator: validate${column.javaField}, trigger: 'blur' }
      ],
#end
#end
#end
#end
      }
    }
  },
  mounted () {
    this.queryList()
    this.queryTreeList()
#foreach ($column in $columns)
#if($column.dicCode)
    this.${column.javaField}GetDicGroups('${column.dicCode}')
#end
#end
  },
  methods: {
#foreach ($column in $columns)
#if($column.dicCode)
    ${column.javaField}GetDicGroups(${column.dicCode}){
        getCscpBasicHxItemCode({
            'dicCode' : '${column.dicCode}'
        })
         .then(response => {
            this.${column.javaField}DicGroups = response.data.data
         })
    },
    ${column.javaField}Translate(row) {
      if(!row.${column.javaField}){
        return row.${column.javaField}
      }
#if($column.htmlType == "checkbox")
      let realGroupNames =[]
      let arr = row.${column.javaField}.split(',')
      arr.forEach(item => {
        for (let i = 0; i < this.${column.javaField}DicGroups.length; i++) {
            if (item.toLocaleString() === this.${column.javaField}DicGroups[i].itemCode.toLocaleString()) {
                realGroupNames.push(this.${column.javaField}DicGroups[i].itemValue.toLocaleString())
            }
        }
      })
      if (realGroupNames) {
        return realGroupNames.join(',')
      } else {
        return row.${column.javaField}
      }
#else
      let realGroupName
      for (let i = 0; i < this.${column.javaField}DicGroups.length; i++) {
        if (row.${column.javaField}.toLocaleString() === this.${column.javaField}DicGroups[i].itemCode.toLocaleString()) {
            realGroupName = this.${column.javaField}DicGroups[i].itemValue.toLocaleString()
        }
      }
      if(realGroupName){
        return realGroupName
      }else{
        return row.${column.javaField}
      }
#end
    },
#end
#if($column.htmlType == "checkbox")
    ${column.javaField}TranslateCheckbox(row) {
    let ${column.javaField}values = row.${column.javaField}.split(',')
        let ${column.javaField}labels = []
            ${column.javaField}values.forEach(item => {
            if (item == 1) {
                    ${column.javaField}labels.push('香蕉')
            } else if (item == 2) {
                    ${column.javaField}labels.push('苹果')
            } else if (item == 3) {
                    ${column.javaField}labels.push('西瓜')
            }
        })
        if (${column.javaField}labels) {
            return ${column.javaField}labels.join(',')
        }else{
            return ''
        }
    },
#end
#if(${column.htmlType} == 'radio' || ${column.htmlType} == 'select')
    ${column.javaField}TranslateSelectOrRadio(row) {
        if(row.${column.javaField} == 1){
                return 'value1'
            }else if(row.${column.javaField} == 0){
                return 'value2'
            }
        },
#end
#end
    close () {
      this.modal = false
      this.${refs}['detail'].resetFields()
      this.disabled = false
    },
    handleAdd (row, type) {
      this.title = '新增'
      this.detail = {}
      this.detail.orderNum = 1
      if (type === 'addInRow') {
        this.detail.parentId = row.${treeCode}
      }
#foreach ($column in $columns)
#if($column.isForm == 1)
#if($pkColumn.javaField==${column.javaField})
      this.${column.javaField}Flag = false
#end
#end
#end
      this.okFlag = 'add'
      this.modal = true
    },
    handleEdit (row) {
       this.title = '编辑'
       ${className}Show(row.${pkColumn.javaField}).then(res => {
       this.modal = true
       this.detail = res.data.data
       if (this.detail.${treeParentCode} == 0) {
           this.detail.${treeParentCode} = null
       }
#foreach ($column in $columns)
#if($column.dicCode)
#if($column.htmlType == "checkbox" )
        if(res.data.${column.javaField}){
            this.detail.${column.javaField} = res.data.data.${column.javaField}.split(',')
        }else{
            res.data.${column.javaField} = []
        }
#else
        if(res.data.${column.javaField}){
            this.detail.${column.javaField} = res.data.data.${column.javaField}.toLocaleString()
        }
#end
#else
#if($column.htmlType == "checkbox" )
        if(res.data.${column.javaField}){
            this.detail.${column.javaField} = res.data.data.${column.javaField}.split(',')
        }else{
            res.data.${column.javaField} = []
        }
#end
#end
#if($column.isForm == 1)
#if($pkColumn.javaField==${column.javaField})
      this.${column.javaField}Flag = true
#end
#end
#end
       this.okFlag = 'update'
       }).catch(() => {
         this.${Message}.error('行数据查询失败')
       })
    },
    handleReset (name) {
      this.${refs}[name].resetFields()
      this.queryList()
    },
    remove (row, index) {
      this.${Modal}.confirm({
        title: '警告',
        content: '<p>确定删除这条数据？</p>',
        onOk: () => {
        ${className}Del(row.${pkColumn.javaField}).then(res => {
            if (res.data.code !== 200) {
            this.${Message}.error(res.data.msg)
            return
            } else this.${Message}.success('删除成功')
            this.queryList()
            this.queryTreeList()
            }).catch(() => {
            this.${Message}.error('删除失败')
            })
        },
        onCancel: () => {}
        })
    },
    ok (type) {
      this.${delete}(this.detail, '')
      this.${delete}(this.detail, '_rowKey')
      let copyDetail = JSON.parse(JSON.stringify(this.detail))
#foreach ($column in $columns)
#if($column.isForm == 1 && $column.htmlType == "date" )
      if(this.detail.${column.javaField}){
        copyDetail.${column.javaField} = this.${moment}(new Date(this.detail.${column.javaField})).format('yyyy-MM-DD')
      }
#end
#if($column.isForm == 1 && $column.htmlType == "datetime")
      if(this.detail.${column.javaField}){
        copyDetail.${column.javaField} = this.${moment}(new Date(this.detail.${column.javaField})).format('yyyy-MM-DD HH:mm:ss')
      }
#end
#if($column.isForm == 1 && $column.htmlType == "checkbox")
      if (this.detail.${column.javaField}) {
#if($column.dicCode)
        let ${column.javaField}DicGroupsArr = this.${column.javaField}DicGroups.map((item) => {
          return item.itemCode
        })
#else
        let ${column.javaField}DicGroupsArr = ['1','2','3']
#end
        let ${column.javaField}Arr = [...this.detail.${column.javaField}]
        ${column.javaField}Arr.sort((a, b) => {
          return ${column.javaField}DicGroupsArr.indexOf(a) - ${column.javaField}DicGroupsArr.indexOf(b)
        })
        copyDetail.${column.javaField} = ${column.javaField}Arr.join(',')
      }
##      if(this.detail.${column.javaField}){
##          copyDetail.${column.javaField} =  this.detail.${column.javaField}.join(',')
##      }
#end
#end
      if(!copyDetail.${treeParentCode}){
          copyDetail.${treeParentCode} = 0
      }
      this.${refs}['detail'].validate((valid) => {
        if (valid) {
            if (type === 'update') {
                ${className}Update(copyDetail).then(res => {
                this.${Message}.success('修改成功')
                this.modal = false
                this.queryList()
                this.queryTreeList()
                this.${refs}['detail'].resetFields()
                }).catch(() => {
                this.${Message}.error('修改失败')
                })
            } else if (type === 'add') {
                ${className}Create(copyDetail).then(res => {
                this.${Message}.success('新增成功')
                this.modal = false
                this.${refs}['queryForm'].resetFields()
                this.queryList()
                this.queryTreeList()
                this.${refs}['detail'].resetFields()
                }).catch(() => {
                this.${Message}.error('新增失败')
                })
            }
        } else {
            this.modal = true
        }
        })
    },
    handleExpand () {
      this.refreshTable = false
      this.isExpandAll = !this.isExpandAll
      this.$nextTick(() => {
        this.refreshTable = true
      })
    },
    queryTreeList () {
        ${className}ShowChildren().then(res => {
            this.treeArr = res.data
          }).catch(() => {
            this.$message.error('树查询失败')
          })
    },
    childrenFn (children) {
      children.forEach(childTree => {
          childTree.label = childTree.${treeName}
          childTree.id = childTree.${treeCode}
          if (childTree.children.length > 0){
              this.childrenFn(childTree.children)
          }else {
              delete childTree.children
          }
      })
    },
    queryList (flag) {
      let obj = {}
      let ${className}FeildsBetween = []
#foreach ($column in $columns)
#if($column.isQuery == 1)
#if($column.htmlType == "date")
#set($dateformat = "yyyy-MM-DD")
#elseif($column.htmlType == "datetime")
#set($dateformat = "yyyy-MM-DD HH:mm:ss")
#end
#if($column.htmlType == "date" || $column.htmlType == "datetime")
#if($column.queryType != "between")
      obj['${column.javaField}'] = this.queryForm['${column.javaField}']  ?   this.$moment(new Date(this.queryForm['${column.javaField}'])).format('${dateformat}') : null
#else
      if(this.queryForm['${column.javaField}'][0] !='' && this.queryForm['${column.javaField}'][0] != ''){
         let tempObj = {
          'betweenFeild' : '${column.columnName}',
          'lowerBoundary' : this.queryForm['${column.javaField}'][0]  ?  this.$moment(new Date(this.queryForm['${column.javaField}'][0])).format('${dateformat}') : null,
          'upperBoundary' : this.queryForm['${column.javaField}'][1]  ?  this.$moment(new Date(this.queryForm['${column.javaField}'][1])).format('${dateformat}'): null
         }
         ${className}FeildsBetween.push(tempObj)
      }
      obj['${className}FeildsBetween'] = ${className}FeildsBetween
#end
#else
#if($column.htmlType == "checkbox")
     if (this.queryForm['${column.javaField}']) {
#if($column.dicCode)
        let ${column.javaField}DicGroupsArr = this.${column.javaField}DicGroups.map((item) => {
          return item.itemCode
        })
#else
        let ${column.javaField}DicGroupsArr = ['1','2','3']
#end
        let ${column.javaField}Arr = [...this.queryForm['${column.javaField}']]
        ${column.javaField}Arr.sort((a, b) => {
          return ${column.javaField}DicGroupsArr.indexOf(a) - ${column.javaField}DicGroupsArr.indexOf(b)
        })
        obj['${column.javaField}'] = ${column.javaField}Arr.join(',')
      }
##      obj['${column.javaField}'] = this.queryForm['${column.javaField}']  ?  this.queryForm['${column.javaField}'].join(','): null
      if(obj['${column.javaField}'] == '') {
        obj['${column.javaField}'] = null
      }
#else
      obj['${column.javaField}'] = this.queryForm['${column.javaField}']  ?  this.queryForm['${column.javaField}']: null
#end
#end
#end
#end
      ${className}List(obj)
      .then(res => {
            this.data = res.data.data
            res.data.data.forEach(item => {
              item._showChildren = true
            })
            this.data = treeutil.handleTree(res.data.data, '${pkColumn.javaField}')
            this.loading = false;
        }).catch(() => {
        this.${Message}.error('列表查询失败')
        })
    }
  }
 }
</script>

<style lang="less" scoped>
   @import "${cssPath}/views/admin/styles/formStyle.less";
    ::v-deep .el-table thead {
      color: #909399;
      font-weight: 500;
    } ;
    ::v-deep .el-table th {
      height: 40px;
      white-space: nowrap;
      overflow: hidden;
      background-color: #f7f7f9;
    } ;
    ::v-deep .el-table th.el-table__cell > .cell {
      color: #515a6e;
    }

</style>
