##设置全局变量
#set($subClassName = $table.subTable.className)
#set($subclassName = $table.subTable.className.substring(0,1).toLowerCase() + $table.subTable.className.substring(1))
#set($subtableName = $table.subTable.tableName)
#set($subcolumns = $table.subTable.columns)
#set($subpkColumn = $table.subTable.pkColumn)
#set($subPkColumnName = $pkColumn.javaField.substring(0,1).toUpperCase() + $pkColumn.javaField.substring(1))
#set($pkColumnName = $table.pkColumn.javaField.substring(0,1).toUpperCase() + $table.pkColumn.javaField.substring(1))
package ${packageName}.repository;

import ${packageName}.domain.${subClassName};
import ${packageName}.domain.${subClassName}Example;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

/**
 * ${subClassName}Repository
 *
 * @author ${author}
 * @date ${datetime}
 */

@Mapper
public interface ${subClassName}Repository extends com.ctsi.ssdc.repository.BaseRepository<${subClassName}, Long, ${subClassName}Example> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @SelectProvider(type=${subClassName}SqlProvider.class, method="countByExample")
    @Override
    long countByExample(${subClassName}Example example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @DeleteProvider(type=${subClassName}SqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(${subClassName}Example example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @Delete({
            "delete from ${subtableName}",
            "where ${subpkColumn.columnName} = #{${subpkColumn.javaField},jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long ${subpkColumn.javaField});

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     *
     * @date ${datetime}
     */
    @Insert({
            "insert into ${subtableName} (",
#foreach($column in $subcolumns)
            "$column.columnName#if($velocityCount != $subcolumns.size()),#end",
#end
            ") values (",
#foreach($column in $subcolumns)
            "#{$column.javaField,jdbcType=$column.jdbcType}#if($velocityCount != $subcolumns.size()), ",#else",
#end

#end            ")"

    })
    @Override
    int insert(${subClassName} record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @InsertProvider(type=${subClassName}SqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(${subClassName} record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @SelectProvider(type=${subClassName}SqlProvider.class, method="selectByExample")
    @Results({
#foreach($column in $subcolumns)
            @Result(column="$column.columnName", property="$column.javaField", jdbcType=JdbcType.$column.jdbcType#if($velocityCount == 1),id=true #end)#if($velocityCount != $subcolumns.size()),
#end
#end

    })

    @Override
    List<${subClassName}> selectByExample(${subClassName}Example example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @Select({
            "select",
#foreach($column in $subcolumns)
            "$column.columnName#if($velocityCount != $subcolumns.size()),#end",
#end
            "from ${subtableName}",
            "where ${subpkColumn.columnName} = #{${subpkColumn.javaField},jdbcType=BIGINT}"
    })
    @Results({
#foreach($column in $subcolumns)
            @Result(column="$column.columnName", property="$column.javaField", jdbcType=JdbcType.$column.jdbcType#if($velocityCount == 1),id=true #end)#if($velocityCount != $subcolumns.size()),
#end
#end

    })
    @Override
    ${subClassName} selectByPrimaryKey(Long ${subpkColumn.javaField});


    @Select({"select * from ${subtableName} where ${subTableFkName} = #{${subTableFkclassName}}"})
    @Results({
        #foreach($column in $subcolumns)
                @Result(column="$column.columnName", property="$column.javaField", jdbcType=JdbcType.$column.jdbcType#if($velocityCount == 1),id=true #end)#if($velocityCount != $subcolumns.size()),
        #end
        #end

    })
    List<${subClassName}> selectBy${subTableFkClassName}(Long ${subTableFkclassName});
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @UpdateProvider(type=${subClassName}SqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") ${subClassName} record, @Param("example") ${subClassName}Example example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @UpdateProvider(type=${subClassName}SqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") ${subClassName} record, @Param("example") ${subClassName}Example example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     *@date ${datetime}
     */
    @UpdateProvider(type=${subClassName}SqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(${subClassName} record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table ${subtableName}
     *
     * @date ${datetime}
     */
    @Update({
            "update ${subtableName}",
            "set ",
#foreach($column in $subcolumns)
            "$column.columnName = #{$column.javaField,jdbcType=$column.jdbcType}#if($velocityCount != $subcolumns.size()),",#else",
#end

#end
            "where ${subpkColumn.columnName} = #{${subpkColumn.javaField},jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(${subClassName} record);

    /**
     * 批量删除
     * @param ${subpkColumn.javaField}s
     */
    @Delete("<script>" +
            "delete from ${subtableName} where ${subpkColumn.columnName} in" +
            "<foreach collection=\"${subpkColumn.javaField}s\" item=\"${subpkColumn.javaField}\" open=\"(\" separator=\",\" close=\")\">" +
            "#{${subpkColumn.javaField}}" +
            "</foreach>" +
            "</script>")
    void deleteBy${subPkColumnName}s(@Param("${subpkColumn.javaField}s") List<Long> ${subpkColumn.javaField}s);

    /**
     * 删除根据${table.pkColumn.javaField}
     * @param ${table.pkColumn.javaField}
     */
    @Delete("<script>" +
            "delete from ${subtableName} where ${subTableFkName} = #{${table.pkColumn.javaField}}"+
            "</script>")
    void deleteBy${subTableFkClassName}(@Param("${table.pkColumn.javaField}") Long ${table.pkColumn.javaField});

    /**
     * 批量删除根据${subTableFkName}
     * @param delList
     */
    @Delete("<script>" +
            "delete from ${subtableName} where ${subTableFkName} in" +
            "<foreach collection=\"delList\" item=\"${table.pkColumn.javaField}\" open=\"(\" separator=\",\" close=\")\">" +
            "#{${table.pkColumn.javaField}}" +
            "</foreach>" +
            "</script>")
    void deleteBy${subTableFkClassName}s(@Param("delList") List<Long> delList);

}





