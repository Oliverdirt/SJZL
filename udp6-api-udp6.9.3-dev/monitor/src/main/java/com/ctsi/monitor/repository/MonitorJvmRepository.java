package com.ctsi.monitor.repository;

import com.ctsi.monitor.domain.MonitorJvm;
import com.ctsi.monitor.domain.MonitorJvmExample;

import java.util.Date;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

/**
 * MonitorJvmRepository
 *
 * @author hx
 * @date 2022-05-27 14:02:10
 */

@Mapper
public interface MonitorJvmRepository extends com.ctsi.ssdc.repository.BaseRepository<MonitorJvm, Long, MonitorJvmExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @SelectProvider(type=MonitorJvmSqlProvider.class, method="countByExample")
    @Override
    long countByExample(MonitorJvmExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @DeleteProvider(type=MonitorJvmSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(MonitorJvmExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @Delete({
            "delete from monitor_jvm",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     *
     * @date 2022-05-27 14:02:10
     */
    @Insert({
            "insert into monitor_jvm (",
            "id,",
            "total,",
            "max,",
            "free,",
            "used,",
            "usages,",
            "time",
            ") values (",
            "#{id,jdbcType=BIGINT}, ",
            "#{total,jdbcType=DOUBLE}, ",
            "#{max,jdbcType=DOUBLE}, ",
            "#{free,jdbcType=DOUBLE}, ",
            "#{used,jdbcType=DOUBLE}, ",
            "#{usages,jdbcType=DOUBLE}, ",
            "#{time,jdbcType=DATE}",

            ")"

    })
    @Override
    int insert(MonitorJvm record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @InsertProvider(type=MonitorJvmSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(MonitorJvm record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @SelectProvider(type=MonitorJvmSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="total", property="total", jdbcType=JdbcType.DOUBLE),
            @Result(column="max", property="max", jdbcType=JdbcType.DOUBLE),
            @Result(column="free", property="free", jdbcType=JdbcType.DOUBLE),
            @Result(column="used", property="used", jdbcType=JdbcType.DOUBLE),
            @Result(column="usages", property="usages", jdbcType=JdbcType.DOUBLE),
            @Result(column="time", property="time", jdbcType=JdbcType.DATE)
    })

    @Override
    List<MonitorJvm> selectByExample(MonitorJvmExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @Select({
            "select",
            "id,",
            "total,",
            "max,",
            "free,",
            "used,",
            "usages,",
            "time",
            "from monitor_jvm",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="id", property="id", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="total", property="total", jdbcType=JdbcType.DOUBLE),
            @Result(column="max", property="max", jdbcType=JdbcType.DOUBLE),
            @Result(column="free", property="free", jdbcType=JdbcType.DOUBLE),
            @Result(column="used", property="used", jdbcType=JdbcType.DOUBLE),
            @Result(column="usages", property="usages", jdbcType=JdbcType.DOUBLE),
            @Result(column="time", property="time", jdbcType=JdbcType.DATE)
    })
    @Override
    MonitorJvm selectByPrimaryKey(Long id);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @UpdateProvider(type=MonitorJvmSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") MonitorJvm record, @Param("example") MonitorJvmExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @UpdateProvider(type=MonitorJvmSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") MonitorJvm record, @Param("example") MonitorJvmExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     *@date 2022-05-27 14:02:10
     */
    @UpdateProvider(type=MonitorJvmSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(MonitorJvm record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table monitor_jvm
     *
     * @date 2022-05-27 14:02:10
     */
    @Update({
            "update monitor_jvm",
            "set ",
            "id = #{id,jdbcType=BIGINT},",
            "total = #{total,jdbcType=DOUBLE},",
            "max = #{max,jdbcType=DOUBLE},",
            "free = #{free,jdbcType=DOUBLE},",
            "used = #{used,jdbcType=DOUBLE},",
            "usages = #{usages,jdbcType=DOUBLE},",
            "time = #{time,jdbcType=DATE}",

            "where id = #{id,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(MonitorJvm record);

    /**
     * 批量删除
     * @param ids
     */
    @Delete("<script>" +
            "delete from monitor_jvm where id in" +
            "<foreach collection=\"ids\" item=\"id\" open=\"(\" separator=\",\" close=\")\">" +
            "#{id}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("ids") List<Long> ids);

    /**
     * 根据时间查询
     * @param startTime
     * @param endTime
     * */
    @Select({
            "select",
            "total,",
            "max,",
            "free,",
            "used,",
            "usages,",
            "time ",
            "from monitor_jvm",
            "where time between #{startTime} and #{endTime} "
    })
    List<MonitorJvm> selectByTime(@Param("startTime") Date startTime, @Param("endTime") Date endTime);


    /**
     * 默认查询最新10条数据
     * */
    @Select({
            "select",
            "total,",
            "max,",
            "free,",
            "used,",
            "usages,",
            "time ",
            "from monitor_jvm",
            "order by time limit 10"
    })
    List<MonitorJvm> getMsgUp10();


    /***
     * 清空表数据（定时任务使用）
     */
    @Update({" Truncate table monitor_jvm "})
    void truncateJvm();

}





