package com.ctsi.ssdc.errorcode.repository;

import com.ctsi.ssdc.errorcode.domain.CscpErrorCode;
import com.ctsi.ssdc.errorcode.domain.CscpErrorCodeExample;
import org.apache.ibatis.annotations.*;
import org.apache.ibatis.type.JdbcType;

import java.time.ZonedDateTime;
import java.util.List;

/**
 * CscpErrorCodeRepository
 *
 * @author hx
 * @date 2022-09-05 15:56:17
 */

@Mapper
public interface CscpErrorCodeRepository extends com.ctsi.ssdc.repository.BaseRepository<CscpErrorCode, Long, CscpErrorCodeExample> {
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @SelectProvider(type= CscpErrorCodeSqlProvider.class, method="countByExample")
    @Override
    long countByExample(CscpErrorCodeExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @DeleteProvider(type= CscpErrorCodeSqlProvider.class, method="deleteByExample")
    @Override
    int deleteByExample(CscpErrorCodeExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @Delete({
            "delete from cscp_error_code",
            "where code_id = #{codeId,jdbcType=BIGINT}"
    })
    @Override
    int deleteByPrimaryKey(Long codeId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     *
     * @date 2022-09-05 15:56:17
     */
    @Insert({
            "insert into cscp_error_code (",
            "code_id,",
            "code_type,",
            "application_name,",
            "code,",
            "code_message,",
            "remark,",
            "create_by,",
            "create_time,",
            "update_by,",
            "update_time",
            ") values (",
            "#{codeId,jdbcType=BIGINT}, ",
            "#{codeType,jdbcType=VARCHAR}, ",
            "#{applicationName,jdbcType=VARCHAR}, ",
            "#{code,jdbcType=INTEGER}, ",
            "#{codeMessage,jdbcType=VARCHAR}, ",
            "#{remark,jdbcType=VARCHAR}, ",
            "#{createBy,jdbcType=VARCHAR}, ",
            "#{createTime,jdbcType=DATE}, ",
            "#{updateBy,jdbcType=VARCHAR}, ",
            "#{updateTime,jdbcType=DATE}",

            ")"

    })
    @Override
    int insert(CscpErrorCode record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @InsertProvider(type= CscpErrorCodeSqlProvider.class, method="insertSelective")
    @Override
    int insertSelective(CscpErrorCode record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @SelectProvider(type= CscpErrorCodeSqlProvider.class, method="selectByExample")
    @Results({
            @Result(column="code_id", property="codeId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="code_type", property="codeType", jdbcType=JdbcType.VARCHAR),
            @Result(column="application_name", property="applicationName", jdbcType=JdbcType.VARCHAR),
            @Result(column="code", property="code", jdbcType=JdbcType.INTEGER),
            @Result(column="code_message", property="codeMessage", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE)
    })

    @Override
    List<CscpErrorCode> selectByExample(CscpErrorCodeExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @Select({
            "select",
            "code_id,",
            "code_type,",
            "application_name,",
            "code,",
            "code_message,",
            "remark,",
            "create_by,",
            "create_time,",
            "update_by,",
            "update_time",
            "from cscp_error_code",
            "where code_id = #{codeId,jdbcType=BIGINT}"
    })
    @Results({
            @Result(column="code_id", property="codeId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="code_type", property="codeType", jdbcType=JdbcType.VARCHAR),
            @Result(column="application_name", property="applicationName", jdbcType=JdbcType.VARCHAR),
            @Result(column="code", property="code", jdbcType=JdbcType.INTEGER),
            @Result(column="code_message", property="codeMessage", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE)
    })
    @Override
    CscpErrorCode selectByPrimaryKey(Long codeId);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @UpdateProvider(type= CscpErrorCodeSqlProvider.class, method="updateByExampleSelective")
    @Override
    int updateByExampleSelective(@Param("record") CscpErrorCode record, @Param("example") CscpErrorCodeExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @UpdateProvider(type= CscpErrorCodeSqlProvider.class, method="updateByExample")
    @Override
    int updateByExample(@Param("record") CscpErrorCode record, @Param("example") CscpErrorCodeExample example);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     *@date 2022-09-05 15:56:17
     */
    @UpdateProvider(type= CscpErrorCodeSqlProvider.class, method="updateByPrimaryKeySelective")
    @Override
    int updateByPrimaryKeySelective(CscpErrorCode record);

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:56:17
     */
    @Update({
            "update cscp_error_code",
            "set ",
            "code_id = #{codeId,jdbcType=BIGINT},",
            "code_type = #{codeType,jdbcType=VARCHAR},",
            "application_name = #{applicationName,jdbcType=VARCHAR},",
            "code = #{code,jdbcType=INTEGER},",
            "code_message = #{codeMessage,jdbcType=VARCHAR},",
            "remark = #{remark,jdbcType=VARCHAR},",
            "create_by = #{createBy,jdbcType=VARCHAR},",
            "create_time = #{createTime,jdbcType=DATE},",
            "update_by = #{updateBy,jdbcType=VARCHAR},",
            "update_time = #{updateTime,jdbcType=DATE}",

            "where code_id = #{codeId,jdbcType=BIGINT}"
    })
    @Override
    int updateByPrimaryKey(CscpErrorCode record);

    /**
     * 批量删除
     * @param codeIds
     */
    @Delete("<script>" +
            "delete from cscp_error_code where code_id in" +
            "<foreach collection=\"codeIds\" item=\"codeId\" open=\"(\" separator=\",\" close=\")\">" +
            "#{codeId}" +
            "</foreach>" +
            "</script>")
    void deleteByIds(@Param("codeIds") List<Long> codeIds);


    @Select({"<script>",
            "select * from cscp_error_code",
            "<where> 1=1",
            "<if test = 'code != null and code != \"\"'> and code like concat('%',#{code},'%')</if> ",
            "<if test = 'codeMessage != null and codeMessage != \"\"'> and code_message like concat('%',#{codeMessage},'%')</if> ",
            "<if test = 'codeType != null and codeType != \"\"'> and code_type like concat('%',#{codeType},'%')</if> ",
            "</where>",
            "</script>"
    })
    @Results({
            @Result(column="code_id", property="codeId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="code_type", property="codeType", jdbcType=JdbcType.VARCHAR),
            @Result(column="application_name", property="applicationName", jdbcType=JdbcType.VARCHAR),
            @Result(column="code", property="code", jdbcType=JdbcType.INTEGER),
            @Result(column="code_message", property="codeMessage", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE)
    })
    List<CscpErrorCode> getErrorCodes(CscpErrorCode cscpErrorCode);

    @Select({"<script>",
            "select count(1) from cscp_error_code where code= #{code}",
            "</script>"
    })
    int checkErrorCode(CscpErrorCode cscpErrorCode);

    @Delete({"<script>",
            "delete from cscp_error_code where code_id in",
            "<foreach item=\"codeId\" collection=\"errorCodeList\" open=\"(\" separator=\",\" close=\")\">",
            "#{codeId}",
            " </foreach>",
            "</script>"})
    int deleteErrorCodeByIds(@Param("errorCodeList") List<Long> errorCodeList);

    @Select({"<script>",
            "select * from cscp_error_code where code in ",
            "<foreach collection=\"codes\" item=\"code\" open=\"(\" separator=\",\" close=\")\">" +
            "#{code}",
            "</foreach>",
            "</script>"
    })
    @Results({
            @Result(column="code_id", property="codeId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="code_type", property="codeType", jdbcType=JdbcType.VARCHAR),
            @Result(column="application_name", property="applicationName", jdbcType=JdbcType.VARCHAR),
            @Result(column="code", property="code", jdbcType=JdbcType.INTEGER),
            @Result(column="code_message", property="codeMessage", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE)
    })
    List<CscpErrorCode> selectListByCodes(@Param("codes") List<Integer> codes);

    @Select({
            "<script>",
            "select * from cscp_error_code",
            "</script>"
    })
    @Results({
            @Result(column="code_id", property="codeId", jdbcType=JdbcType.BIGINT,id=true ),
            @Result(column="code_type", property="codeType", jdbcType=JdbcType.VARCHAR),
            @Result(column="application_name", property="applicationName", jdbcType=JdbcType.VARCHAR),
            @Result(column="code", property="code", jdbcType=JdbcType.INTEGER),
            @Result(column="code_message", property="codeMessage", jdbcType=JdbcType.VARCHAR),
            @Result(column="remark", property="remark", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_by", property="createBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="create_time", property="createTime", jdbcType=JdbcType.DATE),
            @Result(column="update_by", property="updateBy", jdbcType=JdbcType.VARCHAR),
            @Result(column="update_time", property="updateTime", jdbcType=JdbcType.DATE)
    })
    List<CscpErrorCode> selectListByApplicationNameAndUpdateTimeGt(@Param("applicationName") String applicationName,
                                                                   @Param("minUpdateTime") ZonedDateTime minUpdateTime);


}





