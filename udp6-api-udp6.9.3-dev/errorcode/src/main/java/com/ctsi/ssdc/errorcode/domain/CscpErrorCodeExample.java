package com.ctsi.ssdc.errorcode.domain;

import com.ctsi.ssdc.criteria.IntegerCriteria;
import com.ctsi.ssdc.criteria.LongCriteria;
import com.ctsi.ssdc.criteria.StringCriteria;
import com.ctsi.ssdc.criteria.ZonedDateTimeCriteria;
import com.ctsi.ssdc.example.BaseExample;
import io.swagger.annotations.ApiParam;
import org.apache.commons.lang3.StringUtils;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.List;

/**
 * CscpErrorCodeExample
 *
 * @author hx
 * @date 2022-09-05 15:50:09
 */

public class CscpErrorCodeExample extends BaseExample {

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    protected String orderByClause;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    protected boolean distinct;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by  Generator.
     * This field corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private static final String LIKE_FORMAT = "%%%s%%";


    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.code_id
     *
     * @date 2022-09-05 15:50:09
     */
    private LongCriteria codeId;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.code_type
     *
     * @date 2022-09-05 15:50:09
     */
    private StringCriteria codeType;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.application_name
     *
     * @date 2022-09-05 15:50:09
     */
    private StringCriteria applicationName;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.code
     *
     * @date 2022-09-05 15:50:09
     */
    private IntegerCriteria code;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.code_message
     *
     * @date 2022-09-05 15:50:09
     */
    private StringCriteria codeMessage;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.remark
     *
     * @date 2022-09-05 15:50:09
     */
    private StringCriteria remark;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.create_by
     *
     * @date 2022-09-05 15:50:09
     */
    private StringCriteria createBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.create_time
     *
     * @date 2022-09-05 15:50:09
     */
    private ZonedDateTimeCriteria createTime;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.update_by
     *
     * @date 2022-09-05 15:50:09
     */
    private StringCriteria updateBy;

    /**
     *
     * This field was generated by  Generator.
     * This field corresponds to the database column cscp_error_code.update_time
     *
     * @date 2022-09-05 15:50:09
     */
    private ZonedDateTimeCriteria updateTime;


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public CscpErrorCodeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    @Override
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }


    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public LongCriteria getCodeId() {
        return codeId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setCodeId(LongCriteria codeId) {
        this. codeId = codeId;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildCodeIdCriteria(Criteria criteria) {
        if (this.getCodeId() == null) {
            return;
        }
        if (this.getCodeId().getEquals() != null) {
            criteria.andCodeIdEqualTo(this.getCodeId().getEquals());
        } else {
            if (this.getCodeId().getGreaterOrEqualThan() != null) {
                criteria.andCodeIdGreaterThanOrEqualTo(this.getCodeId().getGreaterOrEqualThan());
            }
            if (this.getCodeId().getLessOrEqualThan() != null) {
                criteria.andCodeIdLessThanOrEqualTo(this.getCodeId().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public StringCriteria getCodeType() {
        return codeType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setCodeType(StringCriteria codeType) {
        this. codeType = codeType;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildCodeTypeCriteria(Criteria criteria) {
        if (this.getCodeType() == null) {
            return;
        }
        if (this.getCodeType().getEquals() != null) {
            criteria.andCodeTypeEqualTo(this.getCodeType().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getCodeType().getContains())) {
                criteria.andCodeTypeLike(String.format(LIKE_FORMAT, this.getCodeType().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public StringCriteria getApplicationName() {
        return applicationName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setApplicationName(StringCriteria applicationName) {
        this. applicationName = applicationName;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildApplicationNameCriteria(Criteria criteria) {
        if (this.getApplicationName() == null) {
            return;
        }
        if (this.getApplicationName().getEquals() != null) {
            criteria.andApplicationNameEqualTo(this.getApplicationName().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getApplicationName().getContains())) {
                criteria.andApplicationNameLike(String.format(LIKE_FORMAT, this.getApplicationName().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public IntegerCriteria getCode() {
        return code;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setCode(IntegerCriteria code) {
        this. code = code;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildCodeCriteria(Criteria criteria) {
        if (this.getCode() == null) {
            return;
        }
        if (this.getCode().getEquals() != null) {
            criteria.andCodeEqualTo(this.getCode().getEquals());
        } else {
            if (this.getCode().getGreaterOrEqualThan() != null) {
                criteria.andCodeGreaterThanOrEqualTo(this.getCode().getGreaterOrEqualThan());
            }
            if (this.getCode().getLessOrEqualThan() != null) {
                criteria.andCodeLessThanOrEqualTo(this.getCode().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public StringCriteria getCodeMessage() {
        return codeMessage;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setCodeMessage(StringCriteria codeMessage) {
        this. codeMessage = codeMessage;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildCodeMessageCriteria(Criteria criteria) {
        if (this.getCodeMessage() == null) {
            return;
        }
        if (this.getCodeMessage().getEquals() != null) {
            criteria.andCodeMessageEqualTo(this.getCodeMessage().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getCodeMessage().getContains())) {
                criteria.andCodeMessageLike(String.format(LIKE_FORMAT, this.getCodeMessage().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public StringCriteria getRemark() {
        return remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setRemark(StringCriteria remark) {
        this. remark = remark;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildRemarkCriteria(Criteria criteria) {
        if (this.getRemark() == null) {
            return;
        }
        if (this.getRemark().getEquals() != null) {
            criteria.andRemarkEqualTo(this.getRemark().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getRemark().getContains())) {
                criteria.andRemarkLike(String.format(LIKE_FORMAT, this.getRemark().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public StringCriteria getCreateBy() {
        return createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setCreateBy(StringCriteria createBy) {
        this. createBy = createBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildCreateByCriteria(Criteria criteria) {
        if (this.getCreateBy() == null) {
            return;
        }
        if (this.getCreateBy().getEquals() != null) {
            criteria.andCreateByEqualTo(this.getCreateBy().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getCreateBy().getContains())) {
                criteria.andCreateByLike(String.format(LIKE_FORMAT, this.getCreateBy().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public ZonedDateTimeCriteria getCreateTime() {
        return createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setCreateTime(ZonedDateTimeCriteria createTime) {
        this. createTime = createTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildCreateTimeCriteria(Criteria criteria) {
        if (this.getCreateTime() == null) {
            return;
        }
        if (this.getCreateTime().getEquals() != null) {
            criteria.andCreateTimeEqualTo(this.getCreateTime().getEquals());
        } else {
            if (this.getCreateTime().getGreaterOrEqualThan() != null) {
                criteria.andCreateTimeGreaterThanOrEqualTo(this.getCreateTime().getGreaterOrEqualThan());
            }
            if (this.getCreateTime().getLessOrEqualThan() != null) {
                criteria.andCreateTimeLessThanOrEqualTo(this.getCreateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public StringCriteria getUpdateBy() {
        return updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setUpdateBy(StringCriteria updateBy) {
        this. updateBy = updateBy;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildUpdateByCriteria(Criteria criteria) {
        if (this.getUpdateBy() == null) {
            return;
        }
        if (this.getUpdateBy().getEquals() != null) {
            criteria.andUpdateByEqualTo(this.getUpdateBy().getEquals());
        } else {
            if (StringUtils.isNotBlank(this.getUpdateBy().getContains())) {
                criteria.andUpdateByLike(String.format(LIKE_FORMAT, this.getUpdateBy().getContains()));
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public ZonedDateTimeCriteria getUpdateTime() {
        return updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public void setUpdateTime(ZonedDateTimeCriteria updateTime) {
        this. updateTime = updateTime;
    }

    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    private void buildUpdateTimeCriteria(Criteria criteria) {
        if (this.getUpdateTime() == null) {
            return;
        }
        if (this.getUpdateTime().getEquals() != null) {
            criteria.andUpdateTimeEqualTo(this.getUpdateTime().getEquals());
        } else {
            if (this.getUpdateTime().getGreaterOrEqualThan() != null) {
                criteria.andUpdateTimeGreaterThanOrEqualTo(this.getUpdateTime().getGreaterOrEqualThan());
            }
            if (this.getUpdateTime().getLessOrEqualThan() != null) {
                criteria.andUpdateTimeLessThanOrEqualTo(this.getUpdateTime().getLessOrEqualThan());
            }
        }
    }
    /**
     * This method was generated by  Generator.
     * This method corresponds to the database table cscp_hx_form_column
     *
     * @date Thu Feb 17 14:02:06 CST 2022
     */
    @Override
    public Object buildCriteria() {
        Criteria criteria = this.createCriteria();
        this.buildCodeIdCriteria(criteria);
        this.buildCodeTypeCriteria(criteria);
        this.buildApplicationNameCriteria(criteria);
        this.buildCodeCriteria(criteria);
        this.buildCodeMessageCriteria(criteria);
        this.buildRemarkCriteria(criteria);
        this.buildCreateByCriteria(criteria);
        this.buildCreateTimeCriteria(criteria);
        this.buildUpdateByCriteria(criteria);
        this.buildUpdateTimeCriteria(criteria);
        return criteria;
    }

    protected abstract static class BaseGeneratedCriteria {
        protected List<Criterion> criteria;

        protected BaseGeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }


        public Criteria andCodeIdIsNull() {
            addCriterion("code_id is null");
            return (Criteria) this;
        }

        public Criteria andCodeIdIsNotNull() {
            addCriterion("code_id is not null");
            return (Criteria) this;
        }

        public Criteria andCodeIdEqualTo(Long value) {
            addCriterion("code_id =", value, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdNotEqualTo(Long value) {
            addCriterion("code_id <>", value, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdGreaterThan(Long value) {
            addCriterion("code_id >", value, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdGreaterThanOrEqualTo(Long value) {
            addCriterion("code_id >=", value, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdLessThan(Long value) {
            addCriterion("code_id <", value, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdLessThanOrEqualTo(Long value) {
            addCriterion("code_id <=", value, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdIn(List<Long> values) {
            addCriterion("code_id in", values, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdNotIn(List<Long> values) {
            addCriterion("code_id not in", values, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdBetween(Long value1, Long value2) {
            addCriterion("code_id between", value1, value2, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeIdNotBetween(Long value1, Long value2) {
            addCriterion("code_id not between", value1, value2, "codeId");
            return (Criteria) this;
        }

        public Criteria andCodeTypeIsNull() {
            addCriterion("code_type is null");
            return (Criteria) this;
        }

        public Criteria andCodeTypeIsNotNull() {
            addCriterion("code_type is not null");
            return (Criteria) this;
        }

        public Criteria andCodeTypeEqualTo(String value) {
            addCriterion("code_type =", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeNotEqualTo(String value) {
            addCriterion("code_type <>", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeGreaterThan(String value) {
            addCriterion("code_type >", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeGreaterThanOrEqualTo(String value) {
            addCriterion("code_type >=", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeLessThan(String value) {
            addCriterion("code_type <", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeLessThanOrEqualTo(String value) {
            addCriterion("code_type <=", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeLike(String value) {
            addCriterion("code_type like", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeNotLike(String value) {
            addCriterion("code_type not like", value, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeIn(List<String> values) {
            addCriterion("code_type in", values, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeNotIn(List<String> values) {
            addCriterion("code_type not in", values, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeBetween(String value1, String value2) {
            addCriterion("code_type between", value1, value2, "codeType");
            return (Criteria) this;
        }

        public Criteria andCodeTypeNotBetween(String value1, String value2) {
            addCriterion("code_type not between", value1, value2, "codeType");
            return (Criteria) this;
        }

        public Criteria andApplicationNameIsNull() {
            addCriterion("application_name is null");
            return (Criteria) this;
        }

        public Criteria andApplicationNameIsNotNull() {
            addCriterion("application_name is not null");
            return (Criteria) this;
        }

        public Criteria andApplicationNameEqualTo(String value) {
            addCriterion("application_name =", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameNotEqualTo(String value) {
            addCriterion("application_name <>", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameGreaterThan(String value) {
            addCriterion("application_name >", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameGreaterThanOrEqualTo(String value) {
            addCriterion("application_name >=", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameLessThan(String value) {
            addCriterion("application_name <", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameLessThanOrEqualTo(String value) {
            addCriterion("application_name <=", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameLike(String value) {
            addCriterion("application_name like", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameNotLike(String value) {
            addCriterion("application_name not like", value, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameIn(List<String> values) {
            addCriterion("application_name in", values, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameNotIn(List<String> values) {
            addCriterion("application_name not in", values, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameBetween(String value1, String value2) {
            addCriterion("application_name between", value1, value2, "applicationName");
            return (Criteria) this;
        }

        public Criteria andApplicationNameNotBetween(String value1, String value2) {
            addCriterion("application_name not between", value1, value2, "applicationName");
            return (Criteria) this;
        }

        public Criteria andCodeIsNull() {
            addCriterion("code is null");
            return (Criteria) this;
        }

        public Criteria andCodeIsNotNull() {
            addCriterion("code is not null");
            return (Criteria) this;
        }

        public Criteria andCodeEqualTo(Integer value) {
            addCriterion("code =", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotEqualTo(Integer value) {
            addCriterion("code <>", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThan(Integer value) {
            addCriterion("code >", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeGreaterThanOrEqualTo(Integer value) {
            addCriterion("code >=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThan(Integer value) {
            addCriterion("code <", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeLessThanOrEqualTo(Integer value) {
            addCriterion("code <=", value, "code");
            return (Criteria) this;
        }

        public Criteria andCodeIn(List<Integer> values) {
            addCriterion("code in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotIn(List<Integer> values) {
            addCriterion("code not in", values, "code");
            return (Criteria) this;
        }

        public Criteria andCodeBetween(Integer value1, Integer value2) {
            addCriterion("code between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeNotBetween(Integer value1, Integer value2) {
            addCriterion("code not between", value1, value2, "code");
            return (Criteria) this;
        }

        public Criteria andCodeMessageIsNull() {
            addCriterion("code_message is null");
            return (Criteria) this;
        }

        public Criteria andCodeMessageIsNotNull() {
            addCriterion("code_message is not null");
            return (Criteria) this;
        }

        public Criteria andCodeMessageEqualTo(String value) {
            addCriterion("code_message =", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageNotEqualTo(String value) {
            addCriterion("code_message <>", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageGreaterThan(String value) {
            addCriterion("code_message >", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageGreaterThanOrEqualTo(String value) {
            addCriterion("code_message >=", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageLessThan(String value) {
            addCriterion("code_message <", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageLessThanOrEqualTo(String value) {
            addCriterion("code_message <=", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageLike(String value) {
            addCriterion("code_message like", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageNotLike(String value) {
            addCriterion("code_message not like", value, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageIn(List<String> values) {
            addCriterion("code_message in", values, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageNotIn(List<String> values) {
            addCriterion("code_message not in", values, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageBetween(String value1, String value2) {
            addCriterion("code_message between", value1, value2, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andCodeMessageNotBetween(String value1, String value2) {
            addCriterion("code_message not between", value1, value2, "codeMessage");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNull() {
            addCriterion("remark is null");
            return (Criteria) this;
        }

        public Criteria andRemarkIsNotNull() {
            addCriterion("remark is not null");
            return (Criteria) this;
        }

        public Criteria andRemarkEqualTo(String value) {
            addCriterion("remark =", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotEqualTo(String value) {
            addCriterion("remark <>", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThan(String value) {
            addCriterion("remark >", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkGreaterThanOrEqualTo(String value) {
            addCriterion("remark >=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThan(String value) {
            addCriterion("remark <", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLessThanOrEqualTo(String value) {
            addCriterion("remark <=", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkLike(String value) {
            addCriterion("remark like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotLike(String value) {
            addCriterion("remark not like", value, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkIn(List<String> values) {
            addCriterion("remark in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotIn(List<String> values) {
            addCriterion("remark not in", values, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkBetween(String value1, String value2) {
            addCriterion("remark between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andRemarkNotBetween(String value1, String value2) {
            addCriterion("remark not between", value1, value2, "remark");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNull() {
            addCriterion("create_by is null");
            return (Criteria) this;
        }

        public Criteria andCreateByIsNotNull() {
            addCriterion("create_by is not null");
            return (Criteria) this;
        }

        public Criteria andCreateByEqualTo(String value) {
            addCriterion("create_by =", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotEqualTo(String value) {
            addCriterion("create_by <>", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThan(String value) {
            addCriterion("create_by >", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByGreaterThanOrEqualTo(String value) {
            addCriterion("create_by >=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThan(String value) {
            addCriterion("create_by <", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLessThanOrEqualTo(String value) {
            addCriterion("create_by <=", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByLike(String value) {
            addCriterion("create_by like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotLike(String value) {
            addCriterion("create_by not like", value, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByIn(List<String> values) {
            addCriterion("create_by in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotIn(List<String> values) {
            addCriterion("create_by not in", values, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByBetween(String value1, String value2) {
            addCriterion("create_by between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateByNotBetween(String value1, String value2) {
            addCriterion("create_by not between", value1, value2, "createBy");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(ZonedDateTime value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(ZonedDateTime value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<ZonedDateTime> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNull() {
            addCriterion("update_by is null");
            return (Criteria) this;
        }

        public Criteria andUpdateByIsNotNull() {
            addCriterion("update_by is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateByEqualTo(String value) {
            addCriterion("update_by =", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotEqualTo(String value) {
            addCriterion("update_by <>", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThan(String value) {
            addCriterion("update_by >", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByGreaterThanOrEqualTo(String value) {
            addCriterion("update_by >=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThan(String value) {
            addCriterion("update_by <", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLessThanOrEqualTo(String value) {
            addCriterion("update_by <=", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByLike(String value) {
            addCriterion("update_by like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotLike(String value) {
            addCriterion("update_by not like", value, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByIn(List<String> values) {
            addCriterion("update_by in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotIn(List<String> values) {
            addCriterion("update_by not in", values, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByBetween(String value1, String value2) {
            addCriterion("update_by between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateByNotBetween(String value1, String value2) {
            addCriterion("update_by not between", value1, value2, "updateBy");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(ZonedDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(ZonedDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(ZonedDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(ZonedDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(ZonedDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<ZonedDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<ZonedDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(ZonedDateTime value1, ZonedDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_error_code
     *
     * @date do_not_delete_during_merge 2022-09-05 15:50:09
     */
    public static class Criteria extends BaseGeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by  Generator.
     * This class corresponds to the database table  cscp_error_code
     *
     * @date 2022-09-05 15:50:09
     */
    public static class Criterion {
        @ApiParam(hidden = true)
        private String condition;

        @ApiParam(hidden = true)
        private Object value;

        @ApiParam(hidden = true)
        private Object secondValue;

        @ApiParam(hidden = true)
        private boolean noValue;

        @ApiParam(hidden = true)
        private boolean singleValue;

        @ApiParam(hidden = true)
        private boolean betweenValue;

        @ApiParam(hidden = true)
        private boolean listValue;

        @ApiParam(hidden = true)
        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

    }
}
